import{_ as s,o as n,c as a,X as l}from"./chunks/framework.b5656a4e.js";const i=JSON.parse('{"title":"Working with non-python tests","description":"","frontmatter":{},"headers":[],"relativePath":"python/pytest/further_topics/example_trick/work.md","filePath":"python/pytest/further_topics/example_trick/work.md","lastUpdated":1692437254000}'),p={name:"python/pytest/further_topics/example_trick/work.md"},o=l(`<h1 id="working-with-non-python-tests" tabindex="-1">Working with non-python tests <a class="header-anchor" href="#working-with-non-python-tests" aria-label="Permalink to &quot;Working with non-python tests&quot;">​</a></h1><h2 id="a-basic-example-for-specifying-tests-in-yaml-files" tabindex="-1">A basic example for specifying tests in Yaml files <a class="header-anchor" href="#a-basic-example-for-specifying-tests-in-yaml-files" aria-label="Permalink to &quot;A basic example for specifying tests in Yaml files&quot;">​</a></h2><p>Here is an example <code>conftest.py</code> (extracted from Ali Afshar’s special purpose <a href="https://pypi.org/project/pytest-yamlwsgi/" target="_blank" rel="noreferrer">pytest-yamlwsgi</a> plugin). This <code>conftest.py</code> will collect <code>test*.yaml</code> files and will execute the yaml-formatted content as custom tests:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># content of conftest.py</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> pytest</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">pytest_collect_file</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">parent</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">file_path</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> file_path</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">suffix</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.yaml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> file_path</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">startswith</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> YamlFile</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from_parent</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">parent</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">path</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">file_path</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">YamlFile</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">pytest</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">File</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">collect</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># We need a yaml parser, e.g. PyYAML.</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> yaml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        raw </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> yaml</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">safe_load</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">encoding</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> spec </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sorted</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">raw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">items</span><span style="color:#89DDFF;">()):</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">yield</span><span style="color:#A6ACCD;"> YamlItem</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from_parent</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">name</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">spec</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">spec</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">YamlItem</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">pytest</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Item</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">__init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">, </span><span style="color:#A6ACCD;font-style:italic;">spec</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">super</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">__init__</span><span style="color:#89DDFF;">(**</span><span style="color:#82AAFF;">kwargs</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">spec</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> spec</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">runtest</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> value </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sorted</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">spec</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">items</span><span style="color:#89DDFF;">()):</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># Some custom test execution (dumb example follows).</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> value</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">raise</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">YamlException</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> name</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> value</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">repr_failure</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">excinfo</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Called when self.runtest() raises an exception.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isinstance</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">excinfo</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> YamlException</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">                </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#82AAFF;">                    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">usecase execution failed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">                    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">   spec failed: </span><span style="color:#F78C6C;">{1</span><span style="color:#C792EA;">!r</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">: </span><span style="color:#F78C6C;">{2</span><span style="color:#C792EA;">!r</span><span style="color:#F78C6C;">}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">(*</span><span style="color:#82AAFF;">excinfo</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">args</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#82AAFF;">                    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">   no further details known at this point.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">                </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">super</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">repr_failure</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">excinfo</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">reportinfo</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;usecase: </span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">YamlException</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Exception</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Custom exception for error reporting.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span></code></pre></div><p>You can create a simple example file:</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># test_simple.yaml</span></span>
<span class="line"><span style="color:#F07178;">ok</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">sub1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sub1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">hello</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">world</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">world</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">some</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">other</span></span></code></pre></div><p>and if you installed <a href="https://pypi.org/project/PyYAML/" target="_blank" rel="noreferrer">PyYAML</a> or a compatible YAML-parser you can now execute the test specification:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nonpython</span><span style="color:#A6ACCD;"> $ </span><span style="color:#C3E88D;">pytest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test_simple.yaml</span></span>
<span class="line"><span style="color:#A6ACCD;">=========================== </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">session</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">starts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">============================</span></span>
<span class="line"><span style="color:#FFCB6B;">platform</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">linux</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Python</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#C3E88D;">.x.y,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pytest-7.x.y,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pluggy-1.x.y</span></span>
<span class="line"><span style="color:#FFCB6B;">rootdir:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/home/sweet/project/nonpython</span></span>
<span class="line"><span style="color:#FFCB6B;">collected</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">items</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">test_simple.yaml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">F.</span><span style="color:#A6ACCD;">                                                  [100%]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">================================= </span><span style="color:#C3E88D;">FAILURES</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=================================</span></span>
<span class="line"><span style="color:#FFCB6B;">______________________________</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">usecase:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">______________________________</span></span>
<span class="line"><span style="color:#FFCB6B;">usecase</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">execution</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">failed</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">spec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">failed:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">some</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">other</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">no</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">further</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">details</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">known</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">at</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">this</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">point.</span></span>
<span class="line"><span style="color:#A6ACCD;">========================= </span><span style="color:#C3E88D;">short</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">summary</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">info</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">==========================</span></span>
<span class="line"><span style="color:#FFCB6B;">FAILED</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test_simple.yaml::hello</span></span>
<span class="line"><span style="color:#A6ACCD;">======================= </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">failed,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">passed</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.12</span><span style="color:#C3E88D;">s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">========================</span></span></code></pre></div><p>You get one dot for the passing <code>sub1: sub1</code> check and one failure. Obviously in the above <code>conftest.py</code> you’ll want to implement a more interesting interpretation of the yaml-values. You can easily write your own domain specific testing language this way.</p><div class="tip custom-block"><p class="custom-block-title">Note:</p><p><code>repr_failure(excinfo)</code> is called for representing test failures. If you create custom collection nodes you can return an error representation string of your choice. It will be reported as a (red) string.</p></div><p><code>reportinfo()</code> is used for representing the test location and is also consulted when reporting in <code>verbose</code> mode:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nonpython</span><span style="color:#A6ACCD;"> $ </span><span style="color:#C3E88D;">pytest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span></span>
<span class="line"><span style="color:#A6ACCD;">=========================== </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">session</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">starts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">============================</span></span>
<span class="line"><span style="color:#FFCB6B;">platform</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">linux</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Python</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#C3E88D;">.x.y,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pytest-7.x.y,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pluggy-1.x.y</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> $PYTHON_PREFIX</span><span style="color:#C3E88D;">/bin/python</span></span>
<span class="line"><span style="color:#FFCB6B;">cachedir:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.pytest_cache</span></span>
<span class="line"><span style="color:#FFCB6B;">rootdir:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/home/sweet/project/nonpython</span></span>
<span class="line"><span style="color:#FFCB6B;">collecting</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">...</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">collected</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">items</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">test_simple.yaml::hello</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FAILED</span><span style="color:#A6ACCD;">                                       [ </span><span style="color:#F78C6C;">50</span><span style="color:#C3E88D;">%]</span></span>
<span class="line"><span style="color:#FFCB6B;">test_simple.yaml::ok</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PASSED</span><span style="color:#A6ACCD;">                                          [100%]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">================================= </span><span style="color:#C3E88D;">FAILURES</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=================================</span></span>
<span class="line"><span style="color:#FFCB6B;">______________________________</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">usecase:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">______________________________</span></span>
<span class="line"><span style="color:#FFCB6B;">usecase</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">execution</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">failed</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">spec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">failed:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">some</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">other</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">no</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">further</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">details</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">known</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">at</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">this</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">point.</span></span>
<span class="line"><span style="color:#A6ACCD;">========================= </span><span style="color:#C3E88D;">short</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">summary</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">info</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">==========================</span></span>
<span class="line"><span style="color:#FFCB6B;">FAILED</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test_simple.yaml::hello</span></span>
<span class="line"><span style="color:#A6ACCD;">======================= </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">failed,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">passed</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.12</span><span style="color:#C3E88D;">s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">========================</span></span></code></pre></div><p>While developing your custom test collection and execution it’s also interesting to just look at the collection tree:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nonpython</span><span style="color:#A6ACCD;"> $ </span><span style="color:#C3E88D;">pytest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--collect-only</span></span>
<span class="line"><span style="color:#A6ACCD;">=========================== </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">session</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">starts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">============================</span></span>
<span class="line"><span style="color:#FFCB6B;">platform</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">linux</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Python</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#C3E88D;">.x.y,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pytest-7.x.y,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pluggy-1.x.y</span></span>
<span class="line"><span style="color:#FFCB6B;">rootdir:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/home/sweet/project/nonpython</span></span>
<span class="line"><span style="color:#FFCB6B;">collected</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">items</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Package nonpython</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">YamlFile</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test_simple.yam</span><span style="color:#A6ACCD;">l</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">YamlItem</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hell</span><span style="color:#A6ACCD;">o</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">YamlItem</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">o</span><span style="color:#A6ACCD;">k</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">======================== </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tests</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">collected</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.12</span><span style="color:#C3E88D;">s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">========================</span></span></code></pre></div>`,14),e=[o];function t(c,r,y,C,D,A){return n(),a("div",null,e)}const _=s(p,[["render",t]]);export{i as __pageData,_ as default};
