import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.01af844e.js";const C=JSON.parse('{"title":"Working with non-python tests","description":"","frontmatter":{},"headers":[],"relativePath":"python/pytest/further_topics/example_trick/work.md","filePath":"python/pytest/further_topics/example_trick/work.md","lastUpdated":1692807718000}'),p={name:"python/pytest/further_topics/example_trick/work.md"},o=l(`<h1 id="working-with-non-python-tests" tabindex="-1">Working with non-python tests <a class="header-anchor" href="#working-with-non-python-tests" aria-label="Permalink to &quot;Working with non-python tests {#working-with-non-python-tests}&quot;">​</a></h1><h2 id="a-basic-example-for-specifying-tests-in-yaml-files" tabindex="-1">A basic example for specifying tests in Yaml files <a class="header-anchor" href="#a-basic-example-for-specifying-tests-in-yaml-files" aria-label="Permalink to &quot;A basic example for specifying tests in Yaml files {#a-basic-example-for-specifying-tests-in-yaml-files}&quot;">​</a></h2><p>Here is an example <code>conftest.py</code> (extracted from Ali Afshar’s special purpose <a href="https://pypi.org/project/pytest-yamlwsgi/" target="_blank" rel="noreferrer">pytest-yamlwsgi</a> plugin). This <code>conftest.py</code> will collect <code>test*.yaml</code> files and will execute the yaml-formatted content as custom tests:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># content of conftest.py</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> pytest</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">pytest_collect_file</span><span style="color:#E1E4E8;">(parent, file_path):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> file_path.suffix </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;.yaml&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> file_path.name.startswith(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> YamlFile.from_parent(parent, </span><span style="color:#FFAB70;">path</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">file_path)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">YamlFile</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">pytest</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># We need a yaml parser, e.g. PyYAML.</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> yaml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        raw </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> yaml.safe_load(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.path.open(</span><span style="color:#FFAB70;">encoding</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;utf-8&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> name, spec </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sorted</span><span style="color:#E1E4E8;">(raw.items()):</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">yield</span><span style="color:#E1E4E8;"> YamlItem.from_parent(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">name, </span><span style="color:#FFAB70;">spec</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">spec)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">YamlItem</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">pytest</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Item</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__init__</span><span style="color:#E1E4E8;">(self, </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">, spec, </span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;">kwargs):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">().</span><span style="color:#79B8FF;">__init__</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;">kwargs)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.spec </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> spec</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">runtest</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> name, value </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sorted</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.spec.items()):</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># Some custom test execution (dumb example follows).</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> value:</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">raise</span><span style="color:#E1E4E8;"> YamlException(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">, name, value)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">repr_failure</span><span style="color:#E1E4E8;">(self, excinfo):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;Called when self.runtest() raises an exception.&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isinstance</span><span style="color:#E1E4E8;">(excinfo.value, YamlException):</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">.join(</span></span>
<span class="line"><span style="color:#E1E4E8;">                [</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">&quot;usecase execution failed&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">&quot;   spec failed: </span><span style="color:#79B8FF;">{1</span><span style="color:#F97583;">!r</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">: </span><span style="color:#79B8FF;">{2</span><span style="color:#F97583;">!r</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">.format(</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">excinfo.value.args),</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">&quot;   no further details known at this point.&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                ]</span></span>
<span class="line"><span style="color:#E1E4E8;">            )</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">().repr_failure(excinfo)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reportinfo</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.path, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&quot;usecase: </span><span style="color:#79B8FF;">{self</span><span style="color:#E1E4E8;">.name</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">YamlException</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Exception</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;Custom exception for error reporting.&quot;&quot;&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># content of conftest.py</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pytest</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">pytest_collect_file</span><span style="color:#24292E;">(parent, file_path):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> file_path.suffix </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;.yaml&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> file_path.name.startswith(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> YamlFile.from_parent(parent, </span><span style="color:#E36209;">path</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">file_path)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">YamlFile</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">pytest</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># We need a yaml parser, e.g. PyYAML.</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> yaml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        raw </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> yaml.safe_load(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.path.open(</span><span style="color:#E36209;">encoding</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> name, spec </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sorted</span><span style="color:#24292E;">(raw.items()):</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">yield</span><span style="color:#24292E;"> YamlItem.from_parent(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">, </span><span style="color:#E36209;">name</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">name, </span><span style="color:#E36209;">spec</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">spec)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">YamlItem</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">pytest</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Item</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__init__</span><span style="color:#24292E;">(self, </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">, spec, </span><span style="color:#D73A49;">**</span><span style="color:#24292E;">kwargs):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">().</span><span style="color:#005CC5;">__init__</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">**</span><span style="color:#24292E;">kwargs)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.spec </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> spec</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">runtest</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> name, value </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sorted</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.spec.items()):</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;"># Some custom test execution (dumb example follows).</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> value:</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">raise</span><span style="color:#24292E;"> YamlException(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">, name, value)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">repr_failure</span><span style="color:#24292E;">(self, excinfo):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;Called when self.runtest() raises an exception.&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isinstance</span><span style="color:#24292E;">(excinfo.value, YamlException):</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">.join(</span></span>
<span class="line"><span style="color:#24292E;">                [</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#032F62;">&quot;usecase execution failed&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#032F62;">&quot;   spec failed: </span><span style="color:#005CC5;">{1</span><span style="color:#D73A49;">!r</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">: </span><span style="color:#005CC5;">{2</span><span style="color:#D73A49;">!r</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">.format(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">excinfo.value.args),</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#032F62;">&quot;   no further details known at this point.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                ]</span></span>
<span class="line"><span style="color:#24292E;">            )</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">().repr_failure(excinfo)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reportinfo</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.path, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;usecase: </span><span style="color:#005CC5;">{self</span><span style="color:#24292E;">.name</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">YamlException</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Exception</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;Custom exception for error reporting.&quot;&quot;&quot;</span></span></code></pre></div><p>You can create a simple example file:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># test_simple.yaml</span></span>
<span class="line"><span style="color:#85E89D;">ok</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">sub1</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">sub1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">hello</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">world</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">world</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">some</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">other</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># test_simple.yaml</span></span>
<span class="line"><span style="color:#22863A;">ok</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">sub1</span><span style="color:#24292E;">: </span><span style="color:#032F62;">sub1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">hello</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">world</span><span style="color:#24292E;">: </span><span style="color:#032F62;">world</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">some</span><span style="color:#24292E;">: </span><span style="color:#032F62;">other</span></span></code></pre></div><p>and if you installed <a href="https://pypi.org/project/PyYAML/" target="_blank" rel="noreferrer">PyYAML</a> or a compatible YAML-parser you can now execute the test specification:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">nonpython</span><span style="color:#E1E4E8;"> $ </span><span style="color:#9ECBFF;">pytest</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test_simple.yaml</span></span>
<span class="line"><span style="color:#E1E4E8;">=========================== </span><span style="color:#9ECBFF;">test</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">session</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">starts</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">============================</span></span>
<span class="line"><span style="color:#B392F0;">platform</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">linux</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Python</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#9ECBFF;">.x.y,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pytest-7.x.y,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pluggy-1.x.y</span></span>
<span class="line"><span style="color:#B392F0;">rootdir:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/home/sweet/project/nonpython</span></span>
<span class="line"><span style="color:#B392F0;">collected</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">items</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">test_simple.yaml</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">F.</span><span style="color:#E1E4E8;">                                                  [100%]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">================================= </span><span style="color:#9ECBFF;">FAILURES</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=================================</span></span>
<span class="line"><span style="color:#B392F0;">______________________________</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">usecase:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hello</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">______________________________</span></span>
<span class="line"><span style="color:#B392F0;">usecase</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">execution</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">failed</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">spec</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">failed:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;some&#39;:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;other&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">no</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">further</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">details</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">known</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">at</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">this</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">point.</span></span>
<span class="line"><span style="color:#E1E4E8;">========================= </span><span style="color:#9ECBFF;">short</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">summary</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">info</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">==========================</span></span>
<span class="line"><span style="color:#B392F0;">FAILED</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test_simple.yaml::hello</span></span>
<span class="line"><span style="color:#E1E4E8;">======================= </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">failed,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">passed</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.12</span><span style="color:#9ECBFF;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">========================</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">nonpython</span><span style="color:#24292E;"> $ </span><span style="color:#032F62;">pytest</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test_simple.yaml</span></span>
<span class="line"><span style="color:#24292E;">=========================== </span><span style="color:#032F62;">test</span><span style="color:#24292E;"> </span><span style="color:#032F62;">session</span><span style="color:#24292E;"> </span><span style="color:#032F62;">starts</span><span style="color:#24292E;"> </span><span style="color:#032F62;">============================</span></span>
<span class="line"><span style="color:#6F42C1;">platform</span><span style="color:#24292E;"> </span><span style="color:#032F62;">linux</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Python</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#032F62;">.x.y,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pytest-7.x.y,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pluggy-1.x.y</span></span>
<span class="line"><span style="color:#6F42C1;">rootdir:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/home/sweet/project/nonpython</span></span>
<span class="line"><span style="color:#6F42C1;">collected</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#032F62;">items</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">test_simple.yaml</span><span style="color:#24292E;"> </span><span style="color:#032F62;">F.</span><span style="color:#24292E;">                                                  [100%]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">================================= </span><span style="color:#032F62;">FAILURES</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=================================</span></span>
<span class="line"><span style="color:#6F42C1;">______________________________</span><span style="color:#24292E;"> </span><span style="color:#032F62;">usecase:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hello</span><span style="color:#24292E;"> </span><span style="color:#032F62;">______________________________</span></span>
<span class="line"><span style="color:#6F42C1;">usecase</span><span style="color:#24292E;"> </span><span style="color:#032F62;">execution</span><span style="color:#24292E;"> </span><span style="color:#032F62;">failed</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">spec</span><span style="color:#24292E;"> </span><span style="color:#032F62;">failed:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;some&#39;:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;other&#39;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">no</span><span style="color:#24292E;"> </span><span style="color:#032F62;">further</span><span style="color:#24292E;"> </span><span style="color:#032F62;">details</span><span style="color:#24292E;"> </span><span style="color:#032F62;">known</span><span style="color:#24292E;"> </span><span style="color:#032F62;">at</span><span style="color:#24292E;"> </span><span style="color:#032F62;">this</span><span style="color:#24292E;"> </span><span style="color:#032F62;">point.</span></span>
<span class="line"><span style="color:#24292E;">========================= </span><span style="color:#032F62;">short</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test</span><span style="color:#24292E;"> </span><span style="color:#032F62;">summary</span><span style="color:#24292E;"> </span><span style="color:#032F62;">info</span><span style="color:#24292E;"> </span><span style="color:#032F62;">==========================</span></span>
<span class="line"><span style="color:#6F42C1;">FAILED</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test_simple.yaml::hello</span></span>
<span class="line"><span style="color:#24292E;">======================= </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">failed,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">passed</span><span style="color:#24292E;"> </span><span style="color:#032F62;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.12</span><span style="color:#032F62;">s</span><span style="color:#24292E;"> </span><span style="color:#032F62;">========================</span></span></code></pre></div><p>You get one dot for the passing <code>sub1: sub1</code> check and one failure. Obviously in the above <code>conftest.py</code> you’ll want to implement a more interesting interpretation of the yaml-values. You can easily write your own domain specific testing language this way.</p><div class="tip custom-block"><p class="custom-block-title">Note:</p><p><code>repr_failure(excinfo)</code> is called for representing test failures. If you create custom collection nodes you can return an error representation string of your choice. It will be reported as a (red) string.</p></div><p><code>reportinfo()</code> is used for representing the test location and is also consulted when reporting in <code>verbose</code> mode:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">nonpython</span><span style="color:#E1E4E8;"> $ </span><span style="color:#9ECBFF;">pytest</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-v</span></span>
<span class="line"><span style="color:#E1E4E8;">=========================== </span><span style="color:#9ECBFF;">test</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">session</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">starts</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">============================</span></span>
<span class="line"><span style="color:#B392F0;">platform</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">linux</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Python</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#9ECBFF;">.x.y,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pytest-7.x.y,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pluggy-1.x.y</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> $PYTHON_PREFIX</span><span style="color:#9ECBFF;">/bin/python</span></span>
<span class="line"><span style="color:#B392F0;">cachedir:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.pytest_cache</span></span>
<span class="line"><span style="color:#B392F0;">rootdir:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/home/sweet/project/nonpython</span></span>
<span class="line"><span style="color:#B392F0;">collecting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">...</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">collected</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">items</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">test_simple.yaml::hello</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">FAILED</span><span style="color:#E1E4E8;">                                       [ </span><span style="color:#79B8FF;">50</span><span style="color:#9ECBFF;">%]</span></span>
<span class="line"><span style="color:#B392F0;">test_simple.yaml::ok</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">PASSED</span><span style="color:#E1E4E8;">                                          [100%]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">================================= </span><span style="color:#9ECBFF;">FAILURES</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=================================</span></span>
<span class="line"><span style="color:#B392F0;">______________________________</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">usecase:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hello</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">______________________________</span></span>
<span class="line"><span style="color:#B392F0;">usecase</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">execution</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">failed</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">spec</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">failed:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;some&#39;:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;other&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">no</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">further</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">details</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">known</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">at</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">this</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">point.</span></span>
<span class="line"><span style="color:#E1E4E8;">========================= </span><span style="color:#9ECBFF;">short</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">summary</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">info</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">==========================</span></span>
<span class="line"><span style="color:#B392F0;">FAILED</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test_simple.yaml::hello</span></span>
<span class="line"><span style="color:#E1E4E8;">======================= </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">failed,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">passed</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.12</span><span style="color:#9ECBFF;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">========================</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">nonpython</span><span style="color:#24292E;"> $ </span><span style="color:#032F62;">pytest</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span></span>
<span class="line"><span style="color:#24292E;">=========================== </span><span style="color:#032F62;">test</span><span style="color:#24292E;"> </span><span style="color:#032F62;">session</span><span style="color:#24292E;"> </span><span style="color:#032F62;">starts</span><span style="color:#24292E;"> </span><span style="color:#032F62;">============================</span></span>
<span class="line"><span style="color:#6F42C1;">platform</span><span style="color:#24292E;"> </span><span style="color:#032F62;">linux</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Python</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#032F62;">.x.y,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pytest-7.x.y,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pluggy-1.x.y</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> $PYTHON_PREFIX</span><span style="color:#032F62;">/bin/python</span></span>
<span class="line"><span style="color:#6F42C1;">cachedir:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.pytest_cache</span></span>
<span class="line"><span style="color:#6F42C1;">rootdir:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/home/sweet/project/nonpython</span></span>
<span class="line"><span style="color:#6F42C1;">collecting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">...</span><span style="color:#24292E;"> </span><span style="color:#032F62;">collected</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#032F62;">items</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">test_simple.yaml::hello</span><span style="color:#24292E;"> </span><span style="color:#032F62;">FAILED</span><span style="color:#24292E;">                                       [ </span><span style="color:#005CC5;">50</span><span style="color:#032F62;">%]</span></span>
<span class="line"><span style="color:#6F42C1;">test_simple.yaml::ok</span><span style="color:#24292E;"> </span><span style="color:#032F62;">PASSED</span><span style="color:#24292E;">                                          [100%]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">================================= </span><span style="color:#032F62;">FAILURES</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=================================</span></span>
<span class="line"><span style="color:#6F42C1;">______________________________</span><span style="color:#24292E;"> </span><span style="color:#032F62;">usecase:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hello</span><span style="color:#24292E;"> </span><span style="color:#032F62;">______________________________</span></span>
<span class="line"><span style="color:#6F42C1;">usecase</span><span style="color:#24292E;"> </span><span style="color:#032F62;">execution</span><span style="color:#24292E;"> </span><span style="color:#032F62;">failed</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">spec</span><span style="color:#24292E;"> </span><span style="color:#032F62;">failed:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;some&#39;:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;other&#39;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">no</span><span style="color:#24292E;"> </span><span style="color:#032F62;">further</span><span style="color:#24292E;"> </span><span style="color:#032F62;">details</span><span style="color:#24292E;"> </span><span style="color:#032F62;">known</span><span style="color:#24292E;"> </span><span style="color:#032F62;">at</span><span style="color:#24292E;"> </span><span style="color:#032F62;">this</span><span style="color:#24292E;"> </span><span style="color:#032F62;">point.</span></span>
<span class="line"><span style="color:#24292E;">========================= </span><span style="color:#032F62;">short</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test</span><span style="color:#24292E;"> </span><span style="color:#032F62;">summary</span><span style="color:#24292E;"> </span><span style="color:#032F62;">info</span><span style="color:#24292E;"> </span><span style="color:#032F62;">==========================</span></span>
<span class="line"><span style="color:#6F42C1;">FAILED</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test_simple.yaml::hello</span></span>
<span class="line"><span style="color:#24292E;">======================= </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">failed,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">passed</span><span style="color:#24292E;"> </span><span style="color:#032F62;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.12</span><span style="color:#032F62;">s</span><span style="color:#24292E;"> </span><span style="color:#032F62;">========================</span></span></code></pre></div><p>While developing your custom test collection and execution it’s also interesting to just look at the collection tree:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">nonpython</span><span style="color:#E1E4E8;"> $ </span><span style="color:#9ECBFF;">pytest</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--collect-only</span></span>
<span class="line"><span style="color:#E1E4E8;">=========================== </span><span style="color:#9ECBFF;">test</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">session</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">starts</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">============================</span></span>
<span class="line"><span style="color:#B392F0;">platform</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">linux</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Python</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#9ECBFF;">.x.y,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pytest-7.x.y,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pluggy-1.x.y</span></span>
<span class="line"><span style="color:#B392F0;">rootdir:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/home/sweet/project/nonpython</span></span>
<span class="line"><span style="color:#B392F0;">collected</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">items</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Package nonpython</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">YamlFile</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test_simple.yam</span><span style="color:#E1E4E8;">l</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">YamlItem</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hell</span><span style="color:#E1E4E8;">o</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">YamlItem</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">o</span><span style="color:#E1E4E8;">k</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">======================== </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tests</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">collected</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.12</span><span style="color:#9ECBFF;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">========================</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">nonpython</span><span style="color:#24292E;"> $ </span><span style="color:#032F62;">pytest</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--collect-only</span></span>
<span class="line"><span style="color:#24292E;">=========================== </span><span style="color:#032F62;">test</span><span style="color:#24292E;"> </span><span style="color:#032F62;">session</span><span style="color:#24292E;"> </span><span style="color:#032F62;">starts</span><span style="color:#24292E;"> </span><span style="color:#032F62;">============================</span></span>
<span class="line"><span style="color:#6F42C1;">platform</span><span style="color:#24292E;"> </span><span style="color:#032F62;">linux</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Python</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#032F62;">.x.y,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pytest-7.x.y,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pluggy-1.x.y</span></span>
<span class="line"><span style="color:#6F42C1;">rootdir:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/home/sweet/project/nonpython</span></span>
<span class="line"><span style="color:#6F42C1;">collected</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#032F62;">items</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Package nonpython</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">YamlFile</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test_simple.yam</span><span style="color:#24292E;">l</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">YamlItem</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hell</span><span style="color:#24292E;">o</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">YamlItem</span><span style="color:#24292E;"> </span><span style="color:#032F62;">o</span><span style="color:#24292E;">k</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">======================== </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tests</span><span style="color:#24292E;"> </span><span style="color:#032F62;">collected</span><span style="color:#24292E;"> </span><span style="color:#032F62;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.12</span><span style="color:#032F62;">s</span><span style="color:#24292E;"> </span><span style="color:#032F62;">========================</span></span></code></pre></div>`,14),e=[o];function t(c,r,y,E,F,i){return n(),a("div",null,e)}const B=s(p,[["render",t]]);export{C as __pageData,B as default};
