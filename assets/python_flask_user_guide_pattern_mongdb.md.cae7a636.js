import{_ as s,o as n,c as a,Q as o}from"./chunks/framework.01af844e.js";const u=JSON.parse('{"title":"MongoDB with MongoEngine","description":"","frontmatter":{},"headers":[],"relativePath":"python/flask/user_guide/pattern/mongdb.md","filePath":"python/flask/user_guide/pattern/mongdb.md","lastUpdated":1692979908000}'),l={name:"python/flask/user_guide/pattern/mongdb.md"},e=o(`<h1 id="mongodb-with-mongoengine" tabindex="-1">MongoDB with MongoEngine <a class="header-anchor" href="#mongodb-with-mongoengine" aria-label="Permalink to &quot;MongoDB with MongoEngine {#mongodb-with-mongoengine}&quot;">​</a></h1><p>Using a document database like MongoDB is a common alternative to relational SQL databases. This pattern shows how to use <a href="http://mongoengine.org/" target="_blank" rel="noreferrer">MongoEngine</a>, a document mapper library, to integrate with MongoDB.</p><p>A running MongoDB server and <a href="https://flask-mongoengine.readthedocs.io/" target="_blank" rel="noreferrer">Flask-MongoEngine</a> are required.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">flask-mongoengine</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">flask-mongoengine</span></span></code></pre></div><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration {#configuration}&quot;">​</a></h2><p>Basic setup can be done by defining <code>MONGODB_SETTINGS</code> on <code>app.config</code> and creating a <code>MongoEngine</code> instance.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> flask </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Flask</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> flask_mongoengine </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> MongoEngine</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Flask(</span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">app.config[</span><span style="color:#9ECBFF;">&#39;MONGODB_SETTINGS&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;db&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;myapp&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">db </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> MongoEngine(app)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> flask </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Flask</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> flask_mongoengine </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> MongoEngine</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Flask(</span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">app.config[</span><span style="color:#032F62;">&#39;MONGODB_SETTINGS&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;db&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;myapp&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">db </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MongoEngine(app)</span></span></code></pre></div><h2 id="mapping-documents" tabindex="-1">Mapping Documents <a class="header-anchor" href="#mapping-documents" aria-label="Permalink to &quot;Mapping Documents {#mapping-documents}&quot;">​</a></h2><p>To declare a model that represents a Mongo document, create a class that inherits from <code>Document</code> and declare each of the fields.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> mongoengine </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> me</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Movie</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">me</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Document</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    title </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> me.StringField(</span><span style="color:#FFAB70;">required</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    year </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> me.IntField()</span></span>
<span class="line"><span style="color:#E1E4E8;">    rated </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> me.StringField()</span></span>
<span class="line"><span style="color:#E1E4E8;">    director </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> me.StringField()</span></span>
<span class="line"><span style="color:#E1E4E8;">    actors </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> me.ListField()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> mongoengine </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> me</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Movie</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">me</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Document</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    title </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> me.StringField(</span><span style="color:#E36209;">required</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    year </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> me.IntField()</span></span>
<span class="line"><span style="color:#24292E;">    rated </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> me.StringField()</span></span>
<span class="line"><span style="color:#24292E;">    director </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> me.StringField()</span></span>
<span class="line"><span style="color:#24292E;">    actors </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> me.ListField()</span></span></code></pre></div><p>If the document has nested fields, use <code>EmbeddedDocument</code> to defined the fields of the embedded document and <code>EmbeddedDocumentField</code> to declare it on the parent document.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Imdb</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">me</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">EmbeddedDocument</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    imdb_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> me.StringField()</span></span>
<span class="line"><span style="color:#E1E4E8;">    rating </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> me.DecimalField()</span></span>
<span class="line"><span style="color:#E1E4E8;">    votes </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> me.IntField()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Movie</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">me</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Document</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">    imdb </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> me.EmbeddedDocumentField(Imdb)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Imdb</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">me</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">EmbeddedDocument</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    imdb_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> me.StringField()</span></span>
<span class="line"><span style="color:#24292E;">    rating </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> me.DecimalField()</span></span>
<span class="line"><span style="color:#24292E;">    votes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> me.IntField()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Movie</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">me</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Document</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">    imdb </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> me.EmbeddedDocumentField(Imdb)</span></span></code></pre></div><h2 id="creating-data" tabindex="-1">Creating Data <a class="header-anchor" href="#creating-data" aria-label="Permalink to &quot;Creating Data {#creating-data}&quot;">​</a></h2><p>Instantiate your document class with keyword arguments for the fields. You can also assign values to the field attributes after instantiation. Then call <code>doc.save()</code>.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">bttf </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Movie(</span><span style="color:#FFAB70;">title</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;Back To The Future&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">year</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1985</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">bttf.actors </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Michael J. Fox&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Christopher Lloyd&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">bttf.imdb </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Imdb(</span><span style="color:#FFAB70;">imdb_id</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;tt0088763&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">rating</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">8.5</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">bttf.save()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">bttf </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Movie(</span><span style="color:#E36209;">title</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Back To The Future&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">year</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1985</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">bttf.actors </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Michael J. Fox&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Christopher Lloyd&quot;</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">bttf.imdb </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Imdb(</span><span style="color:#E36209;">imdb_id</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;tt0088763&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">rating</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">8.5</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">bttf.save()</span></span></code></pre></div><h2 id="queries" tabindex="-1">Queries <a class="header-anchor" href="#queries" aria-label="Permalink to &quot;Queries {#queries}&quot;">​</a></h2><p>Use the class <code>objects</code> attribute to make queries. A keyword argument looks for an equal value on the field.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">bttf </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Movies.objects(</span><span style="color:#FFAB70;">title</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;Back To The Future&quot;</span><span style="color:#E1E4E8;">).get_or_404()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">bttf </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Movies.objects(</span><span style="color:#E36209;">title</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Back To The Future&quot;</span><span style="color:#24292E;">).get_or_404()</span></span></code></pre></div><p>Query operators may be used by concatenating them with the field name using a double-underscore. <code>objects</code>, and queries returned by calling it, are iterable.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">some_theron_movie </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Movie.objects(</span><span style="color:#FFAB70;">actors__in</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&quot;Charlize Theron&quot;</span><span style="color:#E1E4E8;">]).first()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> recents </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> Movie.objects(</span><span style="color:#FFAB70;">year__gte</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2017</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(recents.title)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">some_theron_movie </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Movie.objects(</span><span style="color:#E36209;">actors__in</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;Charlize Theron&quot;</span><span style="color:#24292E;">]).first()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> recents </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> Movie.objects(</span><span style="color:#E36209;">year__gte</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2017</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(recents.title)</span></span></code></pre></div><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation {#documentation}&quot;">​</a></h2><p>There are many more ways to define and query documents with <code>MongoEngine</code>. For more information, check out the <a href="http://mongoengine.org/" target="_blank" rel="noreferrer">official documentation</a>.</p><p><code>Flask-MongoEngine</code> adds helpful utilities on top of <code>MongoEngine</code>. Check out their <a href="https://flask-mongoengine.readthedocs.io/" target="_blank" rel="noreferrer">documentation</a> as well.</p>`,23),p=[e];function t(c,r,i,E,y,d){return n(),a("div",null,p)}const h=s(l,[["render",t]]);export{u as __pageData,h as default};
