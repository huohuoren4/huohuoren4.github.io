import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.01af844e.js";const u=JSON.parse('{"title":"Large Applications as Packages","description":"","frontmatter":{},"headers":[],"relativePath":"python/flask/user_guide/pattern/large_app.md","filePath":"python/flask/user_guide/pattern/large_app.md","lastUpdated":1693404008000}'),p={name:"python/flask/user_guide/pattern/large_app.md"},o=l(`<h1 id="large-applications-as-packages" tabindex="-1">Large Applications as Packages <a class="header-anchor" href="#large-applications-as-packages" aria-label="Permalink to &quot;Large Applications as Packages {#large-applications-as-packages}&quot;">​</a></h1><p>Imagine a simple flask application structure that looks like this:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">/yourapplication</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">yourapplication.py</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">/static</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">style.css</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">/templates</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">layout.html</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">index.html</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">login.html</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">/yourapplication</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">yourapplication.py</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">/static</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">style.css</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">/templates</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">layout.html</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">index.html</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">login.html</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">...</span></span></code></pre></div><p>While this is fine for small applications, for larger applications it’s a good idea to use a package instead of a module. The <a href="/python/flask/user_guide/tutorial/introduction#tutorial">Tutorial</a> is structured to use the package pattern, see the <a href="https://github.com/pallets/flask/tree/main/examples/tutorial" target="_blank" rel="noreferrer">example code</a>.</p><h2 id="simple-packages" tabindex="-1">Simple Packages <a class="header-anchor" href="#simple-packages" aria-label="Permalink to &quot;Simple Packages {#simple-packages}&quot;">​</a></h2><p>To convert that into a larger one, just create a new folder <code>yourapplication</code> inside the existing one and move everything below it. Then rename <code>yourapplication.py</code> to <code>__init__.py</code>. (Make sure to delete all <code>.pyc</code> files first, otherwise things would most likely break)</p><p>You should then end up with something like that:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">/yourapplication</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">/yourapplication</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">__init__.py</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">/static</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">style.css</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">/templates</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">layout.html</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">index.html</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">login.html</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">/yourapplication</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">/yourapplication</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">__init__.py</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">/static</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">style.css</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">/templates</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">layout.html</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">index.html</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">login.html</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">...</span></span></code></pre></div><p>But how do you run your application now? The naive <code>python yourapplication/__init__.py</code> will not work. Let’s just say that Python does not want modules in packages to be the startup file. But that is not a big problem, just add a new file called <code>pyproject.toml</code> next to the inner <code>yourapplication</code> folder with the following contents:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">project</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">name = </span><span style="color:#9ECBFF;">&quot;yourapplication&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">dependencies = [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;flask&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">build-system</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">requires = [</span><span style="color:#9ECBFF;">&quot;flit_core&lt;4&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">build-backend = </span><span style="color:#9ECBFF;">&quot;flit_core.buildapi&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">project</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">name = </span><span style="color:#032F62;">&quot;yourapplication&quot;</span></span>
<span class="line"><span style="color:#24292E;">dependencies = [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;flask&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">build-system</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">requires = [</span><span style="color:#032F62;">&quot;flit_core&lt;4&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">build-backend = </span><span style="color:#032F62;">&quot;flit_core.buildapi&quot;</span></span></code></pre></div><p>Install your application so it is importable:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span></code></pre></div><p>To use the <code>flask</code> command and run your application you need to set the <code>--app</code> option that tells Flask where to find the application instance:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">flask</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--app</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">yourapplication</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">flask</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--app</span><span style="color:#24292E;"> </span><span style="color:#032F62;">yourapplication</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span></span></code></pre></div><p>What did we gain from this? Now we can restructure the application a bit into multiple modules. The only thing you have to remember is the following quick checklist:</p><ol><li><p>the Flask application object creation has to be in the <code>__init__.py</code> file. That way each module can import it safely and the <code>__name__</code> variable will resolve to the correct package.</p></li><li><p>all the view functions (the ones with a <code>route()</code> decorator on top) have to be imported in the <code>__init__.py</code> file. Not the object itself, but the module it is in. Import the view module after the application object is created.</p></li></ol><p>Here’s an example <code>__init__.py</code>:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> flask </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Flask</span></span>
<span class="line"><span style="color:#E1E4E8;">app </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Flask(</span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> yourapplication.views</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> flask </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Flask</span></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Flask(</span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> yourapplication.views</span></span></code></pre></div><p>And this is what <code>views.py</code> would look like:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> yourapplication </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@app.route</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Hello World!&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> yourapplication </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.route</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Hello World!&#39;</span></span></code></pre></div><p>You should then end up with something like that:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">/yourapplication</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">pyproject.toml</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">/yourapplication</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">__init__.py</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">views.py</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">/static</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">style.css</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">/templates</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">layout.html</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">index.html</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">login.html</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">/yourapplication</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">pyproject.toml</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">/yourapplication</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">__init__.py</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">views.py</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">/static</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">style.css</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">/templates</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">layout.html</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">index.html</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">login.html</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">...</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Circular Imports</p><p>Every Python programmer hates them, and yet we just added some: circular imports (That’s when two modules depend on each other. In this case <code>views.py</code> depends on <code>__init__.py</code>). Be advised that this is a bad idea in general but here it is actually fine. The reason for this is that we are not actually using the views in <code>__init__.py</code> and just ensuring the module is imported and we are doing that at the bottom of the file.</p></div><h2 id="working-with-blueprints" tabindex="-1">Working with Blueprints <a class="header-anchor" href="#working-with-blueprints" aria-label="Permalink to &quot;Working with Blueprints {#working-with-blueprints}&quot;">​</a></h2><p>If you have larger applications it’s recommended to divide them into smaller groups where each group is implemented with the help of a blueprint. For a gentle introduction into this topic refer to the <a href="/python/flask/user_guide/blueprint#modular-applications-with-blueprints">Modular Applications with Blueprints</a> chapter of the documentation.</p>`,25),e=[o];function t(c,i,r,y,E,d){return a(),n("div",null,e)}const F=s(p,[["render",t]]);export{u as __pageData,F as default};
