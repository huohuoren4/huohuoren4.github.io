import{_ as s,o as n,c as a,X as o}from"./chunks/framework.6e839c56.js";const A=JSON.parse('{"title":"MongoDB with MongoEngine","description":"","frontmatter":{},"headers":[],"relativePath":"python/flask/user_guide/pattern/mongdb.md","filePath":"python/flask/user_guide/pattern/mongdb.md","lastUpdated":1692979908000}'),l={name:"python/flask/user_guide/pattern/mongdb.md"},e=o(`<h1 id="mongodb-with-mongoengine" tabindex="-1">MongoDB with MongoEngine <a class="header-anchor" href="#mongodb-with-mongoengine" aria-label="Permalink to &quot;MongoDB with MongoEngine {#mongodb-with-mongoengine}&quot;">​</a></h1><p>Using a document database like MongoDB is a common alternative to relational SQL databases. This pattern shows how to use <a href="http://mongoengine.org/" target="_blank" rel="noreferrer">MongoEngine</a>, a document mapper library, to integrate with MongoDB.</p><p>A running MongoDB server and <a href="https://flask-mongoengine.readthedocs.io/" target="_blank" rel="noreferrer">Flask-MongoEngine</a> are required.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask-mongoengine</span></span></code></pre></div><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration {#configuration}&quot;">​</a></h2><p>Basic setup can be done by defining <code>MONGODB_SETTINGS</code> on <code>app.config</code> and creating a <code>MongoEngine</code> instance.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> flask </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Flask</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> flask_mongoengine </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> MongoEngine</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Flask</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">__name__</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">config</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">MONGODB_SETTINGS</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">db</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">myapp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">db </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MongoEngine</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="mapping-documents" tabindex="-1">Mapping Documents <a class="header-anchor" href="#mapping-documents" aria-label="Permalink to &quot;Mapping Documents {#mapping-documents}&quot;">​</a></h2><p>To declare a model that represents a Mongo document, create a class that inherits from <code>Document</code> and declare each of the fields.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> mongoengine </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> me</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Movie</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">me</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Document</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    title </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> me</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">StringField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">required</span><span style="color:#89DDFF;">=True)</span></span>
<span class="line"><span style="color:#A6ACCD;">    year </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> me</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">IntField</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    rated </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> me</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">StringField</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    director </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> me</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">StringField</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    actors </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> me</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ListField</span><span style="color:#89DDFF;">()</span></span></code></pre></div><p>If the document has nested fields, use <code>EmbeddedDocument</code> to defined the fields of the embedded document and <code>EmbeddedDocumentField</code> to declare it on the parent document.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Imdb</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">me</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">EmbeddedDocument</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    imdb_id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> me</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">StringField</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    rating </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> me</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">DecimalField</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    votes </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> me</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">IntField</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Movie</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">me</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Document</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#A6ACCD;">    imdb </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> me</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">EmbeddedDocumentField</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">Imdb</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="creating-data" tabindex="-1">Creating Data <a class="header-anchor" href="#creating-data" aria-label="Permalink to &quot;Creating Data {#creating-data}&quot;">​</a></h2><p>Instantiate your document class with keyword arguments for the fields. You can also assign values to the field attributes after instantiation. Then call <code>doc.save()</code>.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">bttf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Movie</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">title</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Back To The Future</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">year</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1985</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">bttf</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">actors</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Michael J. Fox</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Christopher Lloyd</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">bttf</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">imdb</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Imdb</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">imdb_id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tt0088763</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">rating</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">8.5</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">bttf</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">save</span><span style="color:#89DDFF;">()</span></span></code></pre></div><h2 id="queries" tabindex="-1">Queries <a class="header-anchor" href="#queries" aria-label="Permalink to &quot;Queries {#queries}&quot;">​</a></h2><p>Use the class <code>objects</code> attribute to make queries. A keyword argument looks for an equal value on the field.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">bttf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Movies</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">objects</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">title</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Back To The Future</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">get_or_404</span><span style="color:#89DDFF;">()</span></span></code></pre></div><p>Query operators may be used by concatenating them with the field name using a double-underscore. <code>objects</code>, and queries returned by calling it, are iterable.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">some_theron_movie </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Movie</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">objects</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">actors__in</span><span style="color:#89DDFF;">=[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Charlize Theron</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]).</span><span style="color:#82AAFF;">first</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> recents </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> Movie</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">objects</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">year__gte</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">2017</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">recents</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation {#documentation}&quot;">​</a></h2><p>There are many more ways to define and query documents with <code>MongoEngine</code>. For more information, check out the <a href="http://mongoengine.org/" target="_blank" rel="noreferrer">official documentation</a>.</p><p><code>Flask-MongoEngine</code> adds helpful utilities on top of <code>MongoEngine</code>. Check out their <a href="https://flask-mongoengine.readthedocs.io/" target="_blank" rel="noreferrer">documentation</a> as well.</p>`,23),p=[e];function t(c,r,D,F,i,y){return n(),a("div",null,p)}const C=s(l,[["render",t]]);export{A as __pageData,C as default};
