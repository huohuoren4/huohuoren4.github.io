import{_ as e,o as t,c as a,Q as o}from"./chunks/framework.01af844e.js";const b=JSON.parse('{"title":"Environment Variables","description":"","frontmatter":{},"headers":[],"relativePath":"python/pytest/reference_guides/api_reference/env_variables.md","filePath":"python/pytest/reference_guides/api_reference/env_variables.md","lastUpdated":1692807718000}'),r={name:"python/pytest/reference_guides/api_reference/env_variables.md"},s=o('<h1 id="environment-variables" tabindex="-1">Environment Variables <a class="header-anchor" href="#environment-variables" aria-label="Permalink to &quot;Environment Variables {#environment-variables}&quot;">​</a></h1><p>Environment variables that can be used to change pytest’s behavior.</p><h2 id="ci" tabindex="-1">CI <a class="header-anchor" href="#ci" aria-label="Permalink to &quot;CI&quot;">​</a></h2><p>When set (regardless of value), pytest acknowledges that is running in a CI process. Alternative to <code>BUILD_NUMBER</code> variable.</p><h2 id="build-number" tabindex="-1">BUILD_NUMBER <a class="header-anchor" href="#build-number" aria-label="Permalink to &quot;BUILD_NUMBER&quot;">​</a></h2><p>When set (regardless of value), pytest acknowledges that is running in a CI process. Alternative to CI variable.</p><h2 id="pytest-addopts" tabindex="-1">PYTEST_ADDOPTS <a class="header-anchor" href="#pytest-addopts" aria-label="Permalink to &quot;PYTEST_ADDOPTS&quot;">​</a></h2><p>This contains a command-line (parsed by the py:mod:<code>shlex</code> module) that will be prepended to the command line given by the user, see <a href="/python/pytest/reference_guides/configuration#builtin-configuration-file-options">Builtin configuration file options</a> for more information.</p><h2 id="pytest-current-test" tabindex="-1">PYTEST_CURRENT_TEST <a class="header-anchor" href="#pytest-current-test" aria-label="Permalink to &quot;PYTEST_CURRENT_TEST&quot;">​</a></h2><p>This is not meant to be set by users, but is set by pytest internally with the name of the current test so other processes can inspect it, see <a href="/python/pytest/further_topics/example_trick/basic_pattern#pytest-current-test-environment-variable">PYTEST_CURRENT_TEST environment variable</a> for more information.</p><h2 id="pytest-debug" tabindex="-1">PYTEST_DEBUG <a class="header-anchor" href="#pytest-debug" aria-label="Permalink to &quot;PYTEST_DEBUG&quot;">​</a></h2><p>When set, pytest will print tracing and debug information.</p><h2 id="pytest-disable-plugin-autoload" tabindex="-1">PYTEST_DISABLE_PLUGIN_AUTOLOAD <a class="header-anchor" href="#pytest-disable-plugin-autoload" aria-label="Permalink to &quot;PYTEST_DISABLE_PLUGIN_AUTOLOAD&quot;">​</a></h2><p>When set, disables plugin auto-loading through setuptools entrypoints. Only explicitly specified plugins will be loaded.</p><h2 id="pytest-plugins" tabindex="-1">PYTEST_PLUGINS <a class="header-anchor" href="#pytest-plugins" aria-label="Permalink to &quot;PYTEST_PLUGINS&quot;">​</a></h2><p>Contains comma-separated list of modules that should be loaded as plugins:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> PYTEST_PLUGINS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">mymodule.plugin,xdist</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> PYTEST_PLUGINS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">mymodule.plugin,xdist</span></span></code></pre></div><h2 id="pytest-theme" tabindex="-1">PYTEST_THEME <a class="header-anchor" href="#pytest-theme" aria-label="Permalink to &quot;PYTEST_THEME&quot;">​</a></h2><p>Sets a <a href="https://pygments.org/docs/styles/" target="_blank" rel="noreferrer">pygment style</a> to use for the code output.</p><h2 id="pytest-theme-mode" tabindex="-1">PYTEST_THEME_MODE <a class="header-anchor" href="#pytest-theme-mode" aria-label="Permalink to &quot;PYTEST_THEME_MODE&quot;">​</a></h2><p>Sets the <code>PYTEST_THEME</code> to be either dark or light.</p><h2 id="py-colors" tabindex="-1">PY_COLORS <a class="header-anchor" href="#py-colors" aria-label="Permalink to &quot;PY_COLORS&quot;">​</a></h2><p>When set to <code>1</code>, pytest will use color in terminal output. When set to 0, pytest will not use color. <code>PY_COLORS</code> takes precedence over <code>NO_COLOR</code> and <code>FORCE_COLOR</code>.</p><h2 id="no-color" tabindex="-1">NO_COLOR <a class="header-anchor" href="#no-color" aria-label="Permalink to &quot;NO_COLOR&quot;">​</a></h2><p>When set (regardless of value), pytest will not use color in terminal output. <code>PY_COLORS</code> takes precedence over <code>NO_COLOR</code>, which takes precedence over <code>FORCE_COLOR</code>. See <a href="https://no-color.org/" target="_blank" rel="noreferrer">no-color.org</a> for other libraries supporting this community standard.</p><h2 id="force-color" tabindex="-1">FORCE_COLOR <a class="header-anchor" href="#force-color" aria-label="Permalink to &quot;FORCE_COLOR&quot;">​</a></h2><p>When set (regardless of value), pytest will use color in terminal output. <code>PY_COLORS</code> and <code>NO_COLOR</code> take precedence over <code>FORCE_COLOR</code>.</p>',27),n=[s];function i(l,p,c,d,h,u){return t(),a("div",null,n)}const m=e(r,[["render",i]]);export{b as __pageData,m as default};
