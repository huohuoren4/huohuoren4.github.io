import{_ as e,o as t,c as o,V as r}from"./chunks/framework.48c56699.js";const u=JSON.parse('{"title":"Collection tree objects","description":"","frontmatter":{},"headers":[],"relativePath":"python/pytest/reference_guides/api_reference/collection.md","filePath":"python/pytest/reference_guides/api_reference/collection.md","lastUpdated":1690824429000}'),s={name:"python/pytest/reference_guides/api_reference/collection.md"},n=r(`<h1 id="collection-tree-objects" tabindex="-1">Collection tree objects <a class="header-anchor" href="#collection-tree-objects" aria-label="Permalink to &quot;Collection tree objects&quot;">​</a></h1><p>These are the collector and item classes (collectively called “nodes”) which make up the collection tree.</p><h2 id="node" tabindex="-1">Node <a class="header-anchor" href="#node" aria-label="Permalink to &quot;Node&quot;">​</a></h2><ul><li><p>class <strong>Node</strong></p><p>Base class of <code>Collector</code> and <code>Item</code>, the components of the test collection tree.</p><p><code>Collector</code>&#39;s are the internal nodes of the tree, and <code>Item</code>&#39;s are the leaf nodes.</p><ul><li><p><strong>fspath</strong>: <code>LocalPath</code></p><p>A <code>LEGACY_PATH</code> copy of the path attribute. Intended for usage for methods not migrated to <code>pathlib.Path</code> yet, such as <code>Item.reportinfo()</code>. Will be deprecated in a future release, prefer using <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.nodes.Node.path" target="_blank" rel="noreferrer">path</a> instead.</p></li><li><p><strong>name</strong>: <code>str</code></p><p>A unique name within the scope of the parent node.</p></li><li><p><strong>parent</strong></p><p>The parent collector node.</p></li><li><p><strong>config</strong>: <code>Config</code></p><p>The pytest config object.</p></li><li><p><strong>session</strong>: <code>Session</code></p><p>The pytest session this node is part of.</p></li><li><p><strong>path</strong>: <code>Path</code></p><p>Filesystem path where this node was collected from (can be None).</p></li><li><p><strong>keywords</strong>: <code>MutableMapping[str, Any]</code></p><p>Keywords/markers collected from all scopes.</p></li><li><p><strong>own_markers</strong>: <code>List[Mark]</code></p><p>The marker objects belonging to this node.</p></li><li><p><strong>extra_keyword_matches</strong>: <code>Set[str]</code></p><p>Allow adding of extra keywords to use for matching.</p></li><li><p><strong>stash</strong>: <code>Stash</code></p><p>A place where plugins can store information on the node for their own use.</p></li><li><p>classmethod <strong>from_parent</strong>(<code>parent, **kw</code>)</p><p>Public constructor for Nodes.</p><p>This indirection got introduced in order to enable removing the fragile logic from the node constructors.</p><p>Subclasses can use <code>super().from_parent(...)</code> when overriding the construction.</p><p><em>Parameters</em>:</p><ul><li><code>parent (Node)</code> – The parent node of this Node.</li></ul></li><li><p>property <strong>ihook</strong></p><ul><li>fspath-sensitive hook proxy used to call pytest hooks.</li></ul></li><li><p><strong>warn</strong>(<code>warning</code>)</p><p>Issue a warning for this Node.</p><p>Warnings will be displayed after the test session, unless explicitly suppressed.</p><p><em>Parameters</em>:</p><ul><li><code>warning (Warning)</code> – The warning instance to issue.</li></ul><p><em>Raises</em>:</p><ul><li><code>ValueError</code> – If <code>warning</code> instance is not a subclass of Warning.</li></ul><p><em>Example usage</em>:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warn</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">PytestWarning</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">some message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warn</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">UserWarning</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">some message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span></span></code></pre></div><p><em>Changed in version 6.2</em>: Any subclass of <a href="https://docs.python.org/3/library/exceptions.html#Warning" target="_blank" rel="noreferrer">Warning</a> is now accepted, rather than only <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.PytestWarning" target="_blank" rel="noreferrer">PytestWarning</a> subclasses.</p></li><li><p>property <strong>nodeid</strong>: <code>str</code></p><p><code> A ::</code>-separated string denoting its collection tree address.</p></li><li><p><strong>listchain</strong>()</p><p>Return list of all parent collectors up to self, starting from the root of collection tree.</p><p><em>Returns</em>: The nodes.</p><p><em>Return type</em>: <code>List[Node]</code></p></li><li><p><strong>add_marker</strong>(<code>marker, append=True</code>)</p><p>Dynamically add a marker object to the node.</p><p><em>Parameters</em>:</p><ul><li><p><code>marker (Union[str, MarkDecorator])</code> – The marker.</p></li><li><p><code>append (bool)</code> – Whether to append the marker, or prepend it.</p></li></ul></li><li><p><strong>iter_markers</strong>(<code>name=None</code>)</p><p>Iterate over all markers of the node.</p><p><em>Parameters</em>:</p><ul><li>name (Optional[str]) – If given, filter the results by the name attribute.</li></ul><p><em>Returns</em>: An iterator of the markers of the node.</p><p><em>Return type</em>: <code>Iterator[Mark]</code></p></li><li><p>for ... in <strong>iter_markers_with_node</strong>(<code>name=None</code>)</p><p>Iterate over all markers of the node.</p><p><em>Parameters</em>:</p><ul><li><code>name (Optional[str])</code> – If given, filter the results by the name attribute.</li></ul><p><em>Returns</em>: An iterator of (node, mark) tuples.</p><p><em>Return type</em>: <code>Iterator[Tuple[Node, Mark]]</code></p></li><li><p><strong>get_closest_marker</strong>(<code>name: str</code>) → <code>Optional[Mark]</code></p></li><li><p><strong>get_closest_marker</strong>(<code>name: str, default: Mark</code>) → <code>Mark</code></p><p>Return the first marker matching the name, from closest (for example function) to farther level (for example module level).</p><p><em>Parameters</em>:</p><ul><li><p><code>default</code> – Fallback return value if no marker was found.</p></li><li><p><code>name</code> – Name to filter by.</p></li></ul></li><li><p><strong>listextrakeywords</strong>()</p><p>Return a set of all extra keywords in self and any parents.</p></li><li><p><strong>addfinalizer</strong>(<code>fin</code>)</p><p>Register a function to be called without arguments when this node is finalized.</p><p>This method can only be called when this node is active in a setup chain, for example during self.setup().</p></li><li><p><strong>getparent</strong>(<code>cls</code>)</p><p>Get the next parent node (including self) which is an instance of the given class.</p><p><em>Parameters</em>:</p><ul><li><code>cls (Type[_NodeType])</code> – The node class to search for.</li></ul><p><em>Returns</em>: The node, if found.</p><p><em>Return type</em>: <code>Optional[_NodeType]</code></p></li><li><p><strong>repr_failure</strong>(<code>excinfo, style=None</code>)</p><p>Return a representation of a collection or test failure.</p><div class="tip custom-block"><p class="custom-block-title">See also</p><p><a href="https://docs.pytest.org/en/latest/example/nonpython.html#non-python-tests" target="_blank" rel="noreferrer">Working with non-python tests</a></p></div><p><em>Parameters</em>:</p><ul><li>excinfo (ExceptionInfo[BaseException]) – Exception information for the failure.</li></ul></li></ul></li></ul><h2 id="collector" tabindex="-1">Collector <a class="header-anchor" href="#collector" aria-label="Permalink to &quot;Collector&quot;">​</a></h2><ul><li><p>class <strong>Collector</strong></p><ul><li><em>Bases</em>: <code>Node</code></li></ul><p>Base class of all collectors.</p><p><code>Collector</code> create children through <code>collect()</code> and thus iteratively build the collection tree.</p><ul><li><p>exception <strong>CollectError</strong></p><p>Bases: <a href="https://docs.python.org/3/library/exceptions.html#Exception" target="_blank" rel="noreferrer">Exception</a></p><p>An error during collection, contains a custom message.</p></li><li><p><strong>collect</strong>()</p><p>Collect children (items and collectors) for this collector.</p></li><li><p><strong>repr_failure</strong>(<code>excinfo</code>)</p><p>Return a representation of a collection failure.</p><p><em>Parameters</em>:</p><ul><li><code>excinfo (ExceptionInfo[BaseException])</code> – Exception information for the failure.</li></ul></li><li><p><strong>name</strong>: <code>str</code></p><p>A unique name within the scope of the parent node.</p></li><li><p><strong>parent</strong></p><p>The parent collector node.</p></li><li><p><strong>config</strong>: <code>Config</code></p><p>The pytest config object.</p></li><li><p><strong>session</strong>: <code>Session</code></p><p>The pytest session this node is part of.</p></li><li><p><strong>path</strong>: <code>Path</code></p><p>Filesystem path where this node was collected from (can be None).</p></li><li><p><strong>fspath</strong>: <code>LocalPath</code></p><p>A <code>LEGACY_PATH</code> copy of the <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Collector.path" target="_blank" rel="noreferrer">path</a> attribute. Intended for usage for methods not migrated to <code>pathlib.Path</code> yet, such as <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Item.reportinfo" target="_blank" rel="noreferrer">Item.reportinfo()</a>. Will be deprecated in a future release, prefer using <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Collector.path" target="_blank" rel="noreferrer">path</a> instead.</p></li><li><p><strong>keywords</strong>: <code>MutableMapping[str, Any]</code></p><p>Keywords/markers collected from all scopes.</p></li><li><p><strong>own_markers</strong>: <code>List[Mark]</code></p><p>The marker objects belonging to this node.</p></li><li><p><strong>extra_keyword_matches</strong>: <code>Set[str]</code></p><p>Allow adding of extra keywords to use for matching.</p></li><li><p><strong>stash</strong>: <code>Stash</code></p><p>A place where plugins can store information on the node for their own use.</p></li></ul></li></ul><h2 id="item" tabindex="-1">Item <a class="header-anchor" href="#item" aria-label="Permalink to &quot;Item&quot;">​</a></h2><ul><li><p>class <strong>Item</strong></p><ul><li><em>Bases</em>: <code>Node</code></li></ul><p>Base class of all test invocation items.</p><p>Note that for a single function there might be multiple test invocation items.</p><ul><li><p><strong>user_properties</strong>: <code>List[Tuple[str, object]]</code></p><p>A list of tuples (name, value) that holds user defined properties for this test.</p></li><li><p><strong>name</strong>: <code>str</code></p><p>A unique name within the scope of the parent node.</p></li><li><p><strong>parent</strong></p><p>The parent collector node.</p></li><li><p><strong>config</strong>: <code>Config</code></p><p>The pytest config object.</p></li><li><p><strong>session</strong>: <code>Session</code></p><p>The pytest session this node is part of.</p></li><li><p><strong>path</strong>: <code>Path</code></p><p>Filesystem path where this node was collected from (can be None).</p></li><li><p><strong>fspath</strong>: <code>LocalPath</code></p><p>A LEGACY_PATH copy of the path attribute. Intended for usage for methods not migrated to pathlib.Path yet, such as Item.reportinfo(). Will be deprecated in a future release, prefer using path instead.</p></li><li><p><strong>keywords</strong>: <code>MutableMapping[str, Any]</code></p><p>Keywords/markers collected from all scopes.</p></li><li><p><strong>own_markers</strong>: <code>List[Mark]</code></p><p>The marker objects belonging to this node.</p></li><li><p><strong>extra_keyword_matches</strong>: <code>Set[str]</code></p><p>Allow adding of extra keywords to use for matching.</p></li><li><p><strong>stash</strong>: <code>Stash</code></p><p>A place where plugins can store information on the node for their own use.</p></li><li><p><strong>runtest</strong>()</p><p>Run the test case for this item.</p><p>Must be implemented by subclasses.</p><div class="tip custom-block"><p class="custom-block-title">See also</p><p><a href="https://docs.pytest.org/en/latest/example/nonpython.html#non-python-tests" target="_blank" rel="noreferrer">Working with non-python tests</a></p></div></li><li><p><strong>add_report_section</strong>(<code>when, key, content</code>)</p><p>Add a new report section, similar to what’s done internally to add stdout and stderr captured output:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_report_section</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">call</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stdout</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">report section contents</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p><em>Parameters</em>:</p><ul><li><p><code>when (str)</code> – One of the possible capture states, <code>&quot;setup&quot;</code>, <code>&quot;call&quot;</code>, <code>&quot;teardown&quot;</code>.</p></li><li><p><code>key (str)</code> – Name of the section, can be customized at will. Pytest uses <code>&quot;stdout&quot;</code> and <code>&quot;stderr&quot;</code> internally.</p></li><li><p><code>content (str)</code> – The full contents as a string.</p></li></ul></li><li><p><strong>reportinfo</strong>()</p><p>Get location information for this item for test reports.</p><p><em>Returns a tuple with three elements</em>:</p><ul><li><p>The path of the test (default <code>self.path</code>)</p></li><li><p>The 0-based line number of the test (default <code>None</code>)</p></li><li><p>A name of the test to be shown (default <code>&quot;&quot;</code>)</p></li></ul><div class="tip custom-block"><p class="custom-block-title">See also</p><p><a href="https://docs.pytest.org/en/latest/example/nonpython.html#non-python-tests" target="_blank" rel="noreferrer">Working with non-python tests</a></p></div></li><li><p>property <strong>location</strong>: <code>Tuple[str, Optional[int], str]</code></p><p>Returns a tuple of <code>(relfspath, lineno, testname)</code> for this item where <code>relfspath</code> is file path relative to <code>config.rootpath</code> and lineno is a 0-based line number.</p></li></ul></li></ul><h2 id="file" tabindex="-1">File <a class="header-anchor" href="#file" aria-label="Permalink to &quot;File&quot;">​</a></h2><ul><li><p>class <strong>File</strong></p><ul><li><em>Bases</em>: <code>FSCollector</code></li></ul><p>Base class for collecting tests from a file.</p><p><a href="https://docs.pytest.org/en/latest/example/nonpython.html#non-python-tests" target="_blank" rel="noreferrer">Working with non-python tests.</a></p><ul><li><p><strong>name</strong>: <code>str</code></p><p>A unique name within the scope of the parent node.</p></li><li><p><strong>parent</strong></p><p>The parent collector node.</p></li><li><p><strong>config</strong>: <code>Config</code></p><p>The pytest config object.</p></li><li><p><strong>session</strong>: <code>Session</code></p><p>The pytest session this node is part of.</p></li><li><p><strong>path</strong>: <code>Path</code></p><p>Filesystem path where this node was collected from (can be None).</p></li><li><p><strong>fspath</strong>: <code>LocalPath</code></p><p>A <code>LEGACY_PATH</code> copy of the path attribute. Intended for usage for methods not migrated to <code>pathlib.Path</code> yet, such as <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Item.reportinfo" target="_blank" rel="noreferrer">Item.reportinfo()</a>. Will be deprecated in a future release, prefer using <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.File.path" target="_blank" rel="noreferrer">path</a> instead.</p></li><li><p><strong>keywords</strong>: <code>MutableMapping[str, Any]</code></p><p>Keywords/markers collected from all scopes.</p></li><li><p><strong>own_markers</strong>: <code>List[Mark]</code></p><p>The marker objects belonging to this node.</p></li><li><p><strong>extra_keyword_matches</strong>: <code>Set[str]</code></p><p>Allow adding of extra keywords to use for matching.</p></li><li><p><strong>stash</strong>: <code>Stash</code></p><p>A place where plugins can store information on the node for their own use.</p></li></ul></li></ul><h2 id="fscollector" tabindex="-1">FSCollector <a class="header-anchor" href="#fscollector" aria-label="Permalink to &quot;FSCollector&quot;">​</a></h2><ul><li><p>class <strong>FSCollector</strong></p><ul><li><em>Bases</em>: <code>Collector</code></li></ul><p>Base class for filesystem collectors.</p><ul><li><p><strong>path</strong>: <code>Path</code></p><p>Filesystem path where this node was collected from (can be None).</p></li><li><p>classmethod <strong>from_parent</strong>(<code>parent, *, fspath=None, path=None, **kw</code>)</p><p>The public constructor.</p></li><li><p><strong>name</strong>: <code>str</code></p><p>A unique name within the scope of the parent node.</p></li><li><p><strong>parent</strong></p><p>The parent collector node.</p></li><li><p><strong>config</strong>: <code>Config</code></p><p>The pytest config object.</p></li><li><p><strong>session</strong>: <code>Session</code></p><p>The pytest session this node is part of.</p></li><li><p><strong>fspath</strong>: <code>LocalPath</code></p><p>A <code>LEGACY_PATH</code> copy of the path attribute. Intended for usage for methods not migrated to <code>pathlib.Path</code> yet, such as <code>Item.reportinfo()</code>. Will be deprecated in a future release, prefer using <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.nodes.FSCollector.path" target="_blank" rel="noreferrer">path</a> instead.</p></li><li><p><strong>keywords</strong>: <code>MutableMapping[str, Any]</code></p><p>Keywords/markers collected from all scopes.</p></li><li><p><strong>own_markers</strong>: <code>List[Mark]</code></p><p>The marker objects belonging to this node.</p></li><li><p><strong>extra_keyword_matches</strong>: <code>Set[str]</code></p><p>Allow adding of extra keywords to use for matching.</p></li><li><p><strong>stash</strong>: <code>Stash</code></p><p>A place where plugins can store information on the node for their own use.</p></li></ul></li></ul><h2 id="session" tabindex="-1">Session <a class="header-anchor" href="#session" aria-label="Permalink to &quot;Session&quot;">​</a></h2><ul><li><p>final class <code>Session</code></p><ul><li><em>Bases</em>: <code>FSCollector</code></li></ul><p>The root of the collection tree.</p><p><code>Session</code> collects the initial paths given as arguments to pytest.</p><ul><li><p>exception <strong>Interrupted</strong></p><ul><li><em>Bases</em>: KeyboardInterrupt</li></ul><p>Signals that the test run was interrupted.</p></li><li><p>exception <strong>Failed</strong></p><ul><li><em>Bases</em>: <code>Exception</code></li></ul><p>Signals a stop as failed test run.</p></li><li><p>property <strong>startpath</strong>: <code>Path</code></p><p>The path from which pytest was invoked.</p><p><em>New in version 7.0.0.</em></p></li><li><p><strong>perform_collect</strong>(<code>args: Optional[Sequence[str]] = None, genitems: Literal[True] = True</code>) → <code>Sequence[Item]</code></p></li><li><p><strong>perform_collect</strong>(<code>args: Optional[Sequence[str]] = None, genitems: bool = True</code>) → <code>Sequence[Union[Item, Collector]]</code></p><p>Perform the collection phase for this session.</p><p>This is called by the default <a href="https://docs.pytest.org/en/latest/reference/reference.html#std-hook-pytest_collection" target="_blank" rel="noreferrer">pytest_collection</a> hook implementation; see the documentation of this hook for more details. For testing purposes, it may also be called directly on a fresh <code>Session</code>.</p><p>This function normally recursively expands any collectors collected from the session to their items, and only items are returned. For testing purposes, this may be suppressed by passing <code>genitems=False</code>, in which case the return value contains these collectors unexpanded, and <code>session.items</code> is empty.</p></li><li><p>for ... in <strong>collect</strong>()</p><p>Collect children (items and collectors) for this collector.</p></li><li><p><strong>name</strong>: <code>str</code></p><p>A unique name within the scope of the parent node.</p></li><li><p><strong>parent</strong></p><p>The parent collector node.</p></li><li><p><strong>config</strong>: <code>Config</code></p><p>The pytest config object.</p></li><li><p><strong>session</strong>: <code>Session</code></p><p>The pytest session this node is part of.</p></li><li><p><strong>path</strong>: <code>Path</code></p><p>Filesystem path where this node was collected from (can be None).</p></li></ul></li></ul><h2 id="package" tabindex="-1">Package <a class="header-anchor" href="#package" aria-label="Permalink to &quot;Package&quot;">​</a></h2><ul><li><p>class <strong>Package</strong></p><ul><li><em>Bases</em>: <code>Module</code></li></ul><p>Collector for files and directories in a Python packages – directories with an <code>__init__.py</code> file.</p><ul><li><p><strong>name</strong>: <code>str</code></p><p>A unique name within the scope of the parent node.</p></li><li><p>for ... in <strong>collect</strong>()</p><p>Collect children (items and collectors) for this collector.</p></li><li><p><strong>parent</strong></p><p>The parent collector node.</p></li><li><p><strong>config</strong>: <code>Config</code></p><p>The pytest config object.</p></li><li><p><strong>session</strong>: <code>Session</code></p><p>The pytest session this node is part of.</p></li><li><p><strong>path</strong>: <code>Path</code></p><p>Filesystem path where this node was collected from (can be None).</p></li><li><p><strong>fspath</strong>: <code>LocalPath</code></p><p>A <code>LEGACY_PATH</code> copy of the <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Package.path" target="_blank" rel="noreferrer">path</a> attribute. Intended for usage for methods not migrated to <code>pathlib.Path</code> yet, such as <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Item.reportinfo" target="_blank" rel="noreferrer">Item.reportinfo()</a>. Will be deprecated in a future release, prefer using <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Package.path" target="_blank" rel="noreferrer">path</a> instead.</p></li><li><p><strong>keywords</strong>: <code>MutableMapping[str, Any]</code></p><p>Keywords/markers collected from all scopes.</p></li><li><p><strong>own_markers</strong>: <code>List[Mark]</code></p><p>The marker objects belonging to this node.</p></li><li><p><strong>extra_keyword_matches</strong>: <code>Set[str]</code></p><p>Allow adding of extra keywords to use for matching.</p></li><li><p><strong>stash</strong>: <code>Stash</code></p><p>A place where plugins can store information on the node for their own use.</p></li></ul></li></ul><h2 id="module" tabindex="-1">Module <a class="header-anchor" href="#module" aria-label="Permalink to &quot;Module&quot;">​</a></h2><ul><li><p>class <strong>Module</strong></p><ul><li><em>Bases</em>: <code>File</code>, <code>PyCollector</code></li></ul><p>Collector for test classes and functions in a Python module.</p><ul><li><p><strong>collect</strong>()</p><p>Collect children (items and collectors) for this collector.</p></li><li><p><strong>name</strong>: <code>str</code></p><p>A unique name within the scope of the parent node.</p></li><li><p><strong>parent</strong></p><p>The parent collector node.</p></li><li><p><strong>config</strong>: <code>Config</code></p><p>The pytest config object.</p></li><li><p><strong>session</strong>: <code>Session</code></p><p>The pytest session this node is part of.</p></li><li><p><strong>path</strong>: <code>Path</code></p><p>Filesystem path where this node was collected from (can be None).</p></li><li><p><strong>fspath</strong>: <code>LocalPath</code></p><p>A <code>LEGACY_PATH</code> copy of the <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Module.path" target="_blank" rel="noreferrer">path</a> attribute. Intended for usage for methods not migrated to <code>pathlib.Path</code> yet, such as <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Item.reportinfo" target="_blank" rel="noreferrer">Item.reportinfo()</a>. Will be deprecated in a future release, prefer using <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Module.path" target="_blank" rel="noreferrer">path</a> instead.</p></li><li><p><strong>keywords</strong>: <code>MutableMapping[str, Any]</code></p><p>Keywords/markers collected from all scopes.</p></li><li><p><strong>own_markers</strong>: <code>List[Mark]</code></p><p>The marker objects belonging to this node.</p></li><li><p><strong>extra_keyword_matches</strong>: <code>Set[str]</code></p><p>Allow adding of extra keywords to use for matching.</p></li><li><p><strong>stash</strong>: <code>Stash</code></p><p>A place where plugins can store information on the node for their own use.</p></li></ul></li></ul><h2 id="class" tabindex="-1">Class <a class="header-anchor" href="#class" aria-label="Permalink to &quot;Class&quot;">​</a></h2><ul><li><p>class <strong>Class</strong></p><ul><li><em>Bases</em>: <code>PyCollector</code></li></ul><p>Collector for test methods (and nested classes) in a Python class.</p><ul><li><p>classmethod <strong>from_parent</strong>(<code>parent, *, name, obj=None, **kw</code>)</p><p>The public constructor.</p></li><li><p><strong>collect</strong>()</p><p>Collect children (items and collectors) for this collector.</p></li><li><p><strong>name</strong>: <code>str</code></p><p>A unique name within the scope of the parent node.</p></li><li><p><strong>parent</strong></p><p>The parent collector node.</p></li><li><p><strong>config</strong>: <code>Config</code></p><p>The pytest config object.</p></li><li><p><strong>session</strong>: <code>Session</code></p><p>The pytest session this node is part of.</p></li><li><p><strong>path</strong>: <code>Path</code></p><p>Filesystem path where this node was collected from (can be None).</p></li><li><p><strong>fspath</strong>: <code>LocalPath</code></p><p>A <code>LEGACY_PATH</code> copy of the <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Class.path" target="_blank" rel="noreferrer">path</a> attribute. Intended for usage for methods not migrated to <code>pathlib.Path</code> yet, such as <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Item.reportinfo" target="_blank" rel="noreferrer">Item.reportinfo()</a>. Will be deprecated in a future release, prefer using <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Class.path" target="_blank" rel="noreferrer">path</a> instead.</p></li><li><p><strong>keywords</strong>: <code>MutableMapping[str, Any]</code></p><p>Keywords/markers collected from all scopes.</p></li><li><p><strong>own_markers</strong>: <code>List[Mark]</code></p><p>The marker objects belonging to this node.</p></li><li><p><strong>extra_keyword_matches</strong>: <code>Set[str]</code></p><p>Allow adding of extra keywords to use for matching.</p></li><li><p><strong>stash</strong>: <code>Stash</code></p><p>A place where plugins can store information on the node for their own use.</p></li></ul></li></ul><h2 id="function" tabindex="-1">Function <a class="header-anchor" href="#function" aria-label="Permalink to &quot;Function&quot;">​</a></h2><ul><li><p>class <strong>Function</strong></p><ul><li><em>Bases</em>: <code>PyobjMixin</code>, <code>Item</code></li></ul><p>Item responsible for setting up and executing a Python test function.</p><ul><li><p><strong>Parameters</strong>:</p><ul><li><p><strong>name</strong> – The full function name, including any decorations like those added by parametrization (<code>my_func[my_param]</code>).</p></li><li><p><strong>parent</strong> – The parent Node.</p></li><li><p><strong>config</strong> – The pytest Config object.</p></li><li><p><strong>callspec</strong> – If given, this is function has been parametrized and the callspec contains meta information about the parametrization.</p></li><li><p><strong>callobj</strong> – If given, the object which will be called when the Function is invoked, otherwise the callobj will be obtained from <code>parent</code> using <code>originalname</code>.</p></li><li><p><strong>keywords</strong> – Keywords bound to the function object for “-k” matching.</p></li><li><p><strong>session</strong> – The pytest Session object.</p></li><li><p><strong>fixtureinfo</strong> – Fixture information already resolved at this fixture node..</p></li><li><p><strong>originalname</strong> – The attribute name to use for accessing the underlying function object. Defaults to <code>name</code>. Set this if name is different from the original name, for example when it contains decorations like those added by parametrization (<code>my_func[my_param]</code>).</p></li></ul></li><li><p><strong>originalname</strong></p><p>Original function name, without any decorations (for example parametrization adds a <code>&quot;[...]&quot;</code> suffix to function names), used to access the underlying function object from <code>parent</code> (in case <code>callobj</code> is not given explicitly).</p><p><em>New in version 3.0.</em></p></li><li><p>classmethod <strong>from_parent</strong>(<code>parent, **kw</code>)</p><p>The public constructor.</p></li><li><p>property <strong>function</strong></p><p>Underlying python ‘function’ object.</p></li><li><p><strong>runtest</strong>()</p><p>Execute the underlying test function.</p></li><li><p><strong>repr_failure</strong>(<code>excinfo</code>)</p><p>Return a representation of a collection or test failure.</p><div class="tip custom-block"><p class="custom-block-title">See also</p><p>Working with non-python tests</p></div><p><em>Parameters</em>:</p><ul><li><code>excinfo (ExceptionInfo[BaseException])</code> – Exception information for the failure.</li></ul></li><li><p><strong>name</strong>: <code>str</code></p><p>A unique name within the scope of the parent node.</p></li><li><p><strong>parent</strong></p><p>The parent collector node.</p></li><li><p><strong>config</strong>: <code>Config</code></p><p>The pytest config object.</p></li><li><p><strong>session</strong>: <code>Session</code></p><p>The pytest session this node is part of.</p></li><li><p><strong>path</strong>: <code>Path</code></p><p>Filesystem path where this node was collected from (can be None).</p></li><li><p><strong>fspath</strong>: <code>LocalPath</code></p><p>A <code>LEGACY_PATH</code> copy of the <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Function.path" target="_blank" rel="noreferrer">path</a> attribute. Intended for usage for methods not migrated to <code>pathlib.Path</code> yet, such as <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Item.reportinfo" target="_blank" rel="noreferrer">Item.reportinfo()</a>. Will be deprecated in a future release, prefer using <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.Function.path" target="_blank" rel="noreferrer">path</a> instead.</p></li><li><p><strong>keywords</strong>: <code>MutableMapping[str, Any]</code></p><p>Keywords/markers collected from all scopes.</p></li><li><p><strong>own_markers</strong>: <code>List[Mark]</code></p><p>The marker objects belonging to this node.</p></li><li><p><strong>extra_keyword_matches</strong>: <code>Set[str]</code></p><p>Allow adding of extra keywords to use for matching.</p></li><li><p><strong>stash</strong>: <code>Stash</code></p><p>A place where plugins can store information on the node for their own use.</p></li><li><p><strong>user_properties</strong>: <code>List[Tuple[str, object]]</code></p><p>A list of tuples (name, value) that holds user defined properties for this test.</p></li></ul></li></ul><h2 id="functiondefinition" tabindex="-1">FunctionDefinition <a class="header-anchor" href="#functiondefinition" aria-label="Permalink to &quot;FunctionDefinition&quot;">​</a></h2><ul><li><p>class <strong>FunctionDefinition</strong></p><ul><li><em>Bases</em>: <code>Function</code></li></ul><p>This class is a stop gap solution until we evolve to have actual function definition nodes and manage to get rid of <code>metafunc</code>.</p><ul><li><p><strong>runtest</strong>()</p><p>Execute the underlying test function.</p></li><li><p><strong>name</strong>: <code>str</code></p><p>A unique name within the scope of the parent node.</p></li><li><p><strong>parent</strong></p><p>The parent collector node.</p></li><li><p><strong>config</strong>: <code>Config</code></p><p>The pytest config object.</p></li><li><p><strong>session</strong>: <code>Session</code></p><p>The pytest session this node is part of.</p></li><li><p><strong>path</strong>: <code>Path</code></p><p>Filesystem path where this node was collected from (can be None).</p></li><li><p><strong>setup</strong>()</p><p>Execute the underlying test function.</p></li><li><p><strong>fspath</strong>: <code>LocalPath</code></p><p>A <code>LEGACY_PATH</code> copy of the <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.python.FunctionDefinition.path" target="_blank" rel="noreferrer">path</a> attribute. Intended for usage for methods not migrated to <code>pathlib.Path</code> yet, such as <code>Item.reportinfo()</code>. Will be deprecated in a future release, prefer using <a href="https://docs.pytest.org/en/latest/reference/reference.html#pytest.python.FunctionDefinition.path" target="_blank" rel="noreferrer">path</a> instead.</p></li><li><p><strong>keywords</strong>: <code>MutableMapping[str, Any]</code></p><p>Keywords/markers collected from all scopes.</p></li><li><p><strong>own_markers</strong>: <code>List[Mark]</code></p><p>The marker objects belonging to this node.</p></li><li><p><strong>extra_keyword_matches</strong>: <code>Set[str]</code></p><p>Allow adding of extra keywords to use for matching.</p></li><li><p><strong>stash</strong>: <code>Stash</code></p><p>A place where plugins can store information on the node for their own use.</p></li><li><p><strong>user_properties</strong>: <code>List[Tuple[str, object]]</code></p><p>A list of tuples (name, value) that holds user defined properties for this test.</p></li></ul></li></ul>`,24),l=[n];function p(a,i,c,d,h,g){return t(),o("div",null,l)}const m=e(s,[["render",p]]);export{u as __pageData,m as default};
