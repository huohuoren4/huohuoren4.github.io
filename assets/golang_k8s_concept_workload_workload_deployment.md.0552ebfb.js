import{_ as e,o as s,c as a,Q as n}from"./chunks/framework.01af844e.js";const g=JSON.parse('{"title":"Deployments","description":"","frontmatter":{},"headers":[],"relativePath":"golang/k8s/concept/workload/workload/deployment.md","filePath":"golang/k8s/concept/workload/workload/deployment.md","lastUpdated":1694534070000}'),l={name:"golang/k8s/concept/workload/workload/deployment.md"},o=n(`<h1 id="deployments" tabindex="-1">Deployments <a class="header-anchor" href="#deployments" aria-label="Permalink to &quot;Deployments&quot;">​</a></h1><p>A Deployment provides declarative updates for Pods and ReplicaSets.</p><p>You describe a desired state in a Deployment, and the Deployment Controller changes the actual state to the desired state at a controlled rate. You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments.</p><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>Do not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below.</p></div><h2 id="use-case" tabindex="-1">Use Case <a class="header-anchor" href="#use-case" aria-label="Permalink to &quot;Use Case&quot;">​</a></h2><p>The following are typical use cases for Deployments:</p><ul><li><a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#creating-a-deployment" target="_blank" rel="noreferrer">Create a Deployment to rollout a ReplicaSet</a>. The ReplicaSet creates Pods in the background. Check the status of the rollout to see if it succeeds or not.</li><li><a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#updating-a-deployment" target="_blank" rel="noreferrer">Declare the new state of the Pods</a> by updating the PodTemplateSpec of the Deployment. A new ReplicaSet is created and the Deployment manages moving the Pods from the old ReplicaSet to the new one at a controlled rate. Each new ReplicaSet updates the revision of the Deployment.</li><li><a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-back-a-deployment" target="_blank" rel="noreferrer">Rollback to an earlier Deployment revision</a> if the current state of the Deployment is not stable. Each rollback updates the revision of the Deployment.</li><li><a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#scaling-a-deployment" target="_blank" rel="noreferrer">Scale up the Deployment to facilitate more load.</a></li><li><a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#pausing-and-resuming-a-deployment" target="_blank" rel="noreferrer">Pause the rollout of a Deployment</a> to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.</li><li><a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#deployment-status" target="_blank" rel="noreferrer">Use the status of the Deployment</a> as an indicator that a rollout has stuck.</li><li><a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy" target="_blank" rel="noreferrer">Clean up older ReplicaSets</a> that you don&#39;t need anymore.</li></ul><h2 id="creating-a-deployment" tabindex="-1">Creating a Deployment <a class="header-anchor" href="#creating-a-deployment" aria-label="Permalink to &quot;Creating a Deployment&quot;">​</a></h2><p>The following is an example of a Deployment. It creates a ReplicaSet to bring up three nginx Pods:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># controllers/nginx-deployment.yaml</span></span>
<span class="line"><span style="color:#B392F0;">apiVersion:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="color:#B392F0;">kind:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Deployment</span></span>
<span class="line"><span style="color:#B392F0;">metadata:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">name:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx-deployment</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">labels:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">app:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"><span style="color:#B392F0;">spec:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">replicas:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">selector:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">matchLabels:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">app:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">template:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">metadata:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">labels:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">app:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">spec:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">containers:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">name:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">image:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx:1.14.2</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">ports:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">containerPort:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">80</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># controllers/nginx-deployment.yaml</span></span>
<span class="line"><span style="color:#6F42C1;">apiVersion:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apps/v1</span></span>
<span class="line"><span style="color:#6F42C1;">kind:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Deployment</span></span>
<span class="line"><span style="color:#6F42C1;">metadata:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">name:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx-deployment</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">labels:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">app:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx</span></span>
<span class="line"><span style="color:#6F42C1;">spec:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">replicas:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">selector:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">matchLabels:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">app:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">template:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">metadata:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">labels:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">app:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">spec:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">containers:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">image:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx:1.14.2</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">ports:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">containerPort:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">80</span></span></code></pre></div><p>In this example:</p><ul><li><p>A Deployment named <code>nginx-deployment</code> is created, indicated by the <code>.metadata.name</code> field. This name will become the basis for the ReplicaSets and Pods which are created later. See <a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#writing-a-deployment-spec" target="_blank" rel="noreferrer">Writing a Deployment Spec</a> for more details.</p></li><li><p>The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the <code>.spec.replicas</code> field.</p></li><li><p>The <code>.spec.selector</code> field defines how the created ReplicaSet finds which Pods to manage. In this case, you select a label that is defined in the Pod template (<code>app: nginx</code>). However, more sophisticated selection rules are possible, as long as the Pod template itself satisfies the rule.</p><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>The <code>.spec.selector.matchLabels</code> field is a map of {key,value} pairs. A single {key,value} in the <code>matchLabels</code> map is equivalent to an element of <code>matchExpressions</code>, whose key field is &quot;key&quot;, the <code>operator</code> is &quot;In&quot;, and the <code>values</code> array contains only &quot;value&quot;. All of the requirements, from both <code>matchLabels</code> and <code>matchExpressions</code>, must be satisfied in order to match.</p></div></li><li><p>The <code>template</code> field contains the following sub-fields:</p><ul><li>The Pods are labeled <code>app: nginx</code> using the <code>.metadata.labels</code> field.</li><li>The Pod template&#39;s specification, or <code>.template.spec</code> field, indicates that the Pods run one container, <code>nginx</code>, which runs the <code>nginx</code> <a href="https://hub.docker.com/" target="_blank" rel="noreferrer">Docker Hub</a> image at version 1.14.2.</li><li>Create one container and name it <code>nginx</code> using the <code>.spec.template.spec.containers[0].name</code> field.</li></ul></li></ul><p>Before you begin, make sure your Kubernetes cluster is up and running. Follow the steps given below to create the above Deployment:</p><ol><li>Create the Deployment by running the following command:</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apply</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://k8s.io/examples/controllers/nginx-deployment.yaml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apply</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://k8s.io/examples/controllers/nginx-deployment.yaml</span></span></code></pre></div><ol start="2"><li><p>Run <code>kubectl get deployments</code> to check if the Deployment was created.</p><p>If the Deployment is still being created, the output is similar to the following:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME               READY   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment   0/3     0            0           1s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME               READY   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment   0/3     0            0           1s</span></span></code></pre></div><p>When you inspect the Deployments in your cluster, the following fields are displayed:</p><ul><li><code>NAME</code> lists the names of the Deployments in the namespace.</li><li><code>READY</code> displays how many replicas of the application are available to your users. It follows the pattern ready/desired.</li><li><code>UP-TO-DATE</code> displays the number of replicas that have been updated to achieve the desired state.</li><li><code>AVAILABLE</code> displays how many replicas of the application are available to your users.</li><li><code>AGE</code> displays the amount of time that the application has been running.</li></ul><p>Notice how the number of desired replicas is 3 according to <code>.spec.replicas</code> field.</p></li><li><p>To see the Deployment rollout status, run <code>kubectl rollout status deployment/nginx-deployment</code>.</p><p>The output is similar to:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Waiting for rollout to finish: 2 out of 3 new replicas have been updated...</span></span>
<span class="line"><span style="color:#e1e4e8;">deployment &quot;nginx-deployment&quot; successfully rolled out</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Waiting for rollout to finish: 2 out of 3 new replicas have been updated...</span></span>
<span class="line"><span style="color:#24292e;">deployment &quot;nginx-deployment&quot; successfully rolled out</span></span></code></pre></div></li><li><p>Run the <code>kubectl get deployments</code> again a few seconds later. The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME               READY   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment   3/3     3            3           18s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME               READY   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment   3/3     3            3           18s</span></span></code></pre></div><p>Notice that the Deployment has created all three replicas, and all replicas are up-to-date (they contain the latest Pod template) and available.</p></li><li><p>To see the ReplicaSet (<code>rs</code>) created by the Deployment, run <code>kubectl get rs</code>. The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME                          DESIRED   CURRENT   READY   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-75675f5897   3         3         3       18s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME                          DESIRED   CURRENT   READY   AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-75675f5897   3         3         3       18s</span></span></code></pre></div><p>ReplicaSet output shows the following fields:</p><ul><li><code>NAME</code> lists the names of the ReplicaSets in the namespace.</li><li><code>DESIRED</code> displays the desired number of replicas of the application, which you define when you create the Deployment. This is the desired state.</li><li><code>CURRENT</code> displays how many replicas are currently running.</li><li><code>READY</code> displays how many replicas of the application are available to your users.</li><li><code>AGE</code> displays the amount of time that the application has been running.</li></ul><p>Notice that the name of the ReplicaSet is always formatted as <code>[DEPLOYMENT-NAME]-[HASH]</code>. This name will become the basis for the Pods which are created.</p><p>The <code>HASH</code> string is the same as the <code>pod-template-hash</code> label on the ReplicaSet.</p></li><li><p>To see the labels automatically generated for each Pod, run <code>kubectl get pods --show-labels</code>. The output is similar to:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME                                READY     STATUS    RESTARTS   AGE       LABELS</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME                                READY     STATUS    RESTARTS   AGE       LABELS</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897</span></span></code></pre></div><p>The created ReplicaSet ensures that there are three <code>nginx</code> Pods.</p></li></ol><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>You must specify an appropriate selector and Pod template labels in a Deployment (in this case, <code>app: nginx</code>).</p><p>Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn&#39;t stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.</p></div><h3 id="pod-template-hash-label" tabindex="-1">Pod-template-hash label <a class="header-anchor" href="#pod-template-hash-label" aria-label="Permalink to &quot;Pod-template-hash label&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">Caution:</p><p>Do not change this label.</p></div><p>The <code>pod-template-hash</code> label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts.</p><p>This label ensures that child ReplicaSets of a Deployment do not overlap. It is generated by hashing the <code>PodTemplate</code> of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels, and in any existing Pods that the ReplicaSet might have.</p><h2 id="updating-a-deployment" tabindex="-1">Updating a Deployment <a class="header-anchor" href="#updating-a-deployment" aria-label="Permalink to &quot;Updating a Deployment&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>A Deployment&#39;s rollout is triggered if and only if the Deployment&#39;s Pod template (that is, .spec.template) is changed, for example if the labels or container images of the template are updated. Other updates, such as scaling the Deployment, do not trigger a rollout.</p></div><p>Follow the steps given below to update your Deployment:</p><ol><li><p>Let&#39;s update the nginx Pods to use the <code>nginx:1.16.1</code> image instead of the <code>nginx:1.14.2</code> image.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">image</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment.v1.apps/nginx-deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx=nginx:1.16.1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set</span><span style="color:#24292E;"> </span><span style="color:#032F62;">image</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment.v1.apps/nginx-deployment</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx=nginx:1.16.1</span></span></code></pre></div><p>or use the following command:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">image</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx=nginx:1.16.1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set</span><span style="color:#24292E;"> </span><span style="color:#032F62;">image</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx=nginx:1.16.1</span></span></code></pre></div><p>where <code>deployment/nginx-deployment</code> indicates the Deployment, <code>nginx</code> indicates the Container the update will take place and <code>nginx:1.16.1</code> indicates the new image and its tag.</p><p>The output is similar to:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment.apps/nginx-deployment image updated</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment.apps/nginx-deployment image updated</span></span></code></pre></div><p>Alternatively, you can <code>edit</code> the Deployment and change <code>.spec.template.spec.containers[0].image</code> from <code>nginx:1.14.2</code> to <code>nginx:1.16.1</code>:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">edit</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">edit</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span></span></code></pre></div><p>The output is similar to:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment.apps/nginx-deployment edited</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment.apps/nginx-deployment edited</span></span></code></pre></div></li><li><p>To see the rollout status, run:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rollout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rollout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Waiting for rollout to finish: 2 out of 3 new replicas have been updated...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Waiting for rollout to finish: 2 out of 3 new replicas have been updated...</span></span></code></pre></div><p>or</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment &quot;nginx-deployment&quot; successfully rolled out</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment &quot;nginx-deployment&quot; successfully rolled out</span></span></code></pre></div></li></ol><p>Get more details on your updated Deployment:</p><ul><li><p>After the rollout succeeds, you can view the Deployment by running kubectl get deployments. The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME               READY   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment   3/3     3            3           36s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME               READY   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment   3/3     3            3           36s</span></span></code></pre></div></li><li><p>Run <code>kubectl get rs</code> to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it up to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rs</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rs</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME                          DESIRED   CURRENT   READY   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-1564180365   3         3         3       6s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-2035384211   0         0         0       36s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME                          DESIRED   CURRENT   READY   AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-1564180365   3         3         3       6s</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-2035384211   0         0         0       36s</span></span></code></pre></div></li><li><p>Running <code>get pods</code> should now show only the new Pods:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pods</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pods</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME                                READY     STATUS    RESTARTS   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-1564180365-khku8   1/1       Running   0          14s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-1564180365-nacti   1/1       Running   0          14s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-1564180365-z9gth   1/1       Running   0          14s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME                                READY     STATUS    RESTARTS   AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-1564180365-khku8   1/1       Running   0          14s</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-1564180365-nacti   1/1       Running   0          14s</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-1564180365-z9gth   1/1       Running   0          14s</span></span></code></pre></div><p>Next time you want to update these Pods, you only need to update the Deployment&#39;s Pod template again.</p><p>Deployment ensures that only a certain number of Pods are down while they are being updated. By default, it ensures that at least 75% of the desired number of Pods are up (25% max unavailable).</p><p>Deployment also ensures that only a certain number of Pods are created above the desired number of Pods. By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).</p><p>For example, if you look at the above Deployment closely, you will see that it first creates a new Pod, then deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed. It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available. In case of a Deployment with 4 replicas, the number of Pods would be between 3 and 5.</p></li><li><p>Get details of your Deployment:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">describe</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployments</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">describe</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployments</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Name:                   nginx-deployment</span></span>
<span class="line"><span style="color:#e1e4e8;">Namespace:              default</span></span>
<span class="line"><span style="color:#e1e4e8;">CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000</span></span>
<span class="line"><span style="color:#e1e4e8;">Labels:                 app=nginx</span></span>
<span class="line"><span style="color:#e1e4e8;">Annotations:            deployment.kubernetes.io/revision=2</span></span>
<span class="line"><span style="color:#e1e4e8;">Selector:               app=nginx</span></span>
<span class="line"><span style="color:#e1e4e8;">Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable</span></span>
<span class="line"><span style="color:#e1e4e8;">StrategyType:           RollingUpdate</span></span>
<span class="line"><span style="color:#e1e4e8;">MinReadySeconds:        0</span></span>
<span class="line"><span style="color:#e1e4e8;">RollingUpdateStrategy:  25% max unavailable, 25% max surge</span></span>
<span class="line"><span style="color:#e1e4e8;">Pod Template:</span></span>
<span class="line"><span style="color:#e1e4e8;">Labels:  app=nginx</span></span>
<span class="line"><span style="color:#e1e4e8;">Containers:</span></span>
<span class="line"><span style="color:#e1e4e8;">    nginx:</span></span>
<span class="line"><span style="color:#e1e4e8;">    Image:        nginx:1.16.1</span></span>
<span class="line"><span style="color:#e1e4e8;">    Port:         80/TCP</span></span>
<span class="line"><span style="color:#e1e4e8;">    Environment:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    Mounts:       &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    Volumes:        &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Conditions:</span></span>
<span class="line"><span style="color:#e1e4e8;">    Type           Status  Reason</span></span>
<span class="line"><span style="color:#e1e4e8;">    ----           ------  ------</span></span>
<span class="line"><span style="color:#e1e4e8;">    Available      True    MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#e1e4e8;">    Progressing    True    NewReplicaSetAvailable</span></span>
<span class="line"><span style="color:#e1e4e8;">OldReplicaSets:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)</span></span>
<span class="line"><span style="color:#e1e4e8;">Events:</span></span>
<span class="line"><span style="color:#e1e4e8;">    Type    Reason             Age   From                   Message</span></span>
<span class="line"><span style="color:#e1e4e8;">    ----    ------             ----  ----                   -------</span></span>
<span class="line"><span style="color:#e1e4e8;">    Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3</span></span>
<span class="line"><span style="color:#e1e4e8;">    Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1</span></span>
<span class="line"><span style="color:#e1e4e8;">    Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2</span></span>
<span class="line"><span style="color:#e1e4e8;">    Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2</span></span>
<span class="line"><span style="color:#e1e4e8;">    Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1</span></span>
<span class="line"><span style="color:#e1e4e8;">    Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3</span></span>
<span class="line"><span style="color:#e1e4e8;">    Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Name:                   nginx-deployment</span></span>
<span class="line"><span style="color:#24292e;">Namespace:              default</span></span>
<span class="line"><span style="color:#24292e;">CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000</span></span>
<span class="line"><span style="color:#24292e;">Labels:                 app=nginx</span></span>
<span class="line"><span style="color:#24292e;">Annotations:            deployment.kubernetes.io/revision=2</span></span>
<span class="line"><span style="color:#24292e;">Selector:               app=nginx</span></span>
<span class="line"><span style="color:#24292e;">Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable</span></span>
<span class="line"><span style="color:#24292e;">StrategyType:           RollingUpdate</span></span>
<span class="line"><span style="color:#24292e;">MinReadySeconds:        0</span></span>
<span class="line"><span style="color:#24292e;">RollingUpdateStrategy:  25% max unavailable, 25% max surge</span></span>
<span class="line"><span style="color:#24292e;">Pod Template:</span></span>
<span class="line"><span style="color:#24292e;">Labels:  app=nginx</span></span>
<span class="line"><span style="color:#24292e;">Containers:</span></span>
<span class="line"><span style="color:#24292e;">    nginx:</span></span>
<span class="line"><span style="color:#24292e;">    Image:        nginx:1.16.1</span></span>
<span class="line"><span style="color:#24292e;">    Port:         80/TCP</span></span>
<span class="line"><span style="color:#24292e;">    Environment:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">    Mounts:       &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">    Volumes:        &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Conditions:</span></span>
<span class="line"><span style="color:#24292e;">    Type           Status  Reason</span></span>
<span class="line"><span style="color:#24292e;">    ----           ------  ------</span></span>
<span class="line"><span style="color:#24292e;">    Available      True    MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#24292e;">    Progressing    True    NewReplicaSetAvailable</span></span>
<span class="line"><span style="color:#24292e;">OldReplicaSets:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)</span></span>
<span class="line"><span style="color:#24292e;">Events:</span></span>
<span class="line"><span style="color:#24292e;">    Type    Reason             Age   From                   Message</span></span>
<span class="line"><span style="color:#24292e;">    ----    ------             ----  ----                   -------</span></span>
<span class="line"><span style="color:#24292e;">    Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3</span></span>
<span class="line"><span style="color:#24292e;">    Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1</span></span>
<span class="line"><span style="color:#24292e;">    Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2</span></span>
<span class="line"><span style="color:#24292e;">    Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2</span></span>
<span class="line"><span style="color:#24292e;">    Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1</span></span>
<span class="line"><span style="color:#24292e;">    Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3</span></span>
<span class="line"><span style="color:#24292e;">    Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0</span></span></code></pre></div><p>Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211) and scaled it up to 3 replicas directly. When you updated the Deployment, it created a new ReplicaSet (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up. Then it scaled down the old ReplicaSet to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times. It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy. Finally, you&#39;ll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0.</p></li></ul><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>Kubernetes doesn&#39;t count terminating Pods when calculating the number of <code>availableReplicas</code>, which must be between <code>replicas - maxUnavailable</code> and <code>replicas + maxSurge</code>. As a result, you might notice that there are more Pods than expected during a rollout, and that the total resources consumed by the Deployment is more than <code>replicas + maxSurge</code> until the <code>terminationGracePeriodSeconds</code> of the terminating Pods expires.</p></div><h3 id="rollover-aka-multiple-updates-in-flight" tabindex="-1">Rollover (aka multiple updates in-flight) <a class="header-anchor" href="#rollover-aka-multiple-updates-in-flight" aria-label="Permalink to &quot;Rollover (aka multiple updates in-flight)&quot;">​</a></h3><p>Each time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up the desired Pods. If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels match <code>.spec.selector</code> but whose template does not match <code>.spec.template</code> are scaled down. Eventually, the new ReplicaSet is scaled to <code>.spec.replicas</code> and all old ReplicaSets is scaled to 0.</p><p>If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet as per the update and start scaling that up, and rolls over the ReplicaSet that it was scaling up previously -- it will add it to its list of old ReplicaSets and start scaling it down.</p><p>For example, suppose you create a Deployment to create 5 replicas of <code>nginx:1.14.2</code>, but then update the Deployment to create 5 replicas of <code>nginx:1.16.1</code>, when only 3 replicas of <code>nginx:1.14.2</code> had been created. In that case, the Deployment immediately starts killing the 3 <code>nginx:1.14.2</code> Pods that it had created, and starts creating <code>nginx:1.16.1</code> Pods. It does not wait for the 5 replicas of <code>nginx:1.14.2</code> to be created before changing course.</p><h3 id="label-selector-updates" tabindex="-1">Label selector updates <a class="header-anchor" href="#label-selector-updates" aria-label="Permalink to &quot;Label selector updates&quot;">​</a></h3><p>It is generally discouraged to make label selector updates and it is suggested to plan your selectors up front. In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped all of the implications.</p><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>In API version apps/v1, a Deployment&#39;s label selector is immutable after it gets created.</p></div><ul><li>Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too, otherwise a validation error is returned. This change is a non-overlapping one, meaning that the new selector does not select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and creating a new ReplicaSet.</li><li>Selector updates changes the existing value in a selector key -- result in the same behavior as additions.</li><li>Selector removals removes an existing key from the Deployment selector -- do not require any changes in the Pod template labels. Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the removed label still exists in any existing Pods and ReplicaSets.</li></ul><h2 id="rolling-back-a-deployment" tabindex="-1">Rolling Back a Deployment <a class="header-anchor" href="#rolling-back-a-deployment" aria-label="Permalink to &quot;Rolling Back a Deployment&quot;">​</a></h2><p>Sometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping. By default, all of the Deployment&#39;s rollout history is kept in the system so that you can rollback anytime you want (you can change that by modifying revision history limit).</p><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>A Deployment&#39;s revision is created when a Deployment&#39;s rollout is triggered. This means that the new revision is created if and only if the Deployment&#39;s Pod template (<code>.spec.template</code>) is changed, for example if you update the labels or container images of the template. Other updates, such as scaling the Deployment, do not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling. This means that when you roll back to an earlier revision, only the Deployment&#39;s Pod template part is rolled back.</p></div><ul><li><p>Suppose that you made a typo while updating the Deployment, by putting the image name as <code>nginx:1.161</code> instead of <code>nginx:1.16.1</code>:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">image</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx=nginx:1.161</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set</span><span style="color:#24292E;"> </span><span style="color:#032F62;">image</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx=nginx:1.161</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment.apps/nginx-deployment image updated</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment.apps/nginx-deployment image updated</span></span></code></pre></div></li><li><p>The rollout gets stuck. You can verify it by checking the rollout status:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rollout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rollout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Waiting for rollout to finish: 1 out of 3 new replicas have been updated...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Waiting for rollout to finish: 1 out of 3 new replicas have been updated...</span></span></code></pre></div></li><li><p>Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts, <a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#deployment-status" target="_blank" rel="noreferrer">read more here</a>.</p></li><li><p>You see that the number of old replicas (adding the replica count from <code>nginx-deployment-1564180365</code> and <code>nginx-deployment-2035384211</code>) is 3, and the number of new replicas (from <code>nginx-deployment-3066724191</code>) is 1.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rs</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rs</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME                          DESIRED   CURRENT   READY   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-1564180365   3         3         3       25s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-2035384211   0         0         0       36s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-3066724191   1         1         0       6s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME                          DESIRED   CURRENT   READY   AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-1564180365   3         3         3       25s</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-2035384211   0         0         0       36s</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-3066724191   1         1         0       6s</span></span></code></pre></div></li><li><p>Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pods</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pods</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME                                READY     STATUS             RESTARTS   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-1564180365-70iae   1/1       Running            0          25s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-1564180365-hysrc   1/1       Running            0          25s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME                                READY     STATUS             RESTARTS   AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-1564180365-70iae   1/1       Running            0          25s</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-1564180365-hysrc   1/1       Running            0          25s</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>The Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet. This depends on the rollingUpdate parameters (<code>maxUnavailable</code> specifically) that you have specified. Kubernetes by default sets the value to 25%.</p></div></li><li><p>Get the description of the Deployment:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">describe</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">describe</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Name:           nginx-deployment</span></span>
<span class="line"><span style="color:#e1e4e8;">Namespace:      default</span></span>
<span class="line"><span style="color:#e1e4e8;">CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700</span></span>
<span class="line"><span style="color:#e1e4e8;">Labels:         app=nginx</span></span>
<span class="line"><span style="color:#e1e4e8;">Selector:       app=nginx</span></span>
<span class="line"><span style="color:#e1e4e8;">Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable</span></span>
<span class="line"><span style="color:#e1e4e8;">StrategyType:       RollingUpdate</span></span>
<span class="line"><span style="color:#e1e4e8;">MinReadySeconds:    0</span></span>
<span class="line"><span style="color:#e1e4e8;">RollingUpdateStrategy:  25% max unavailable, 25% max surge</span></span>
<span class="line"><span style="color:#e1e4e8;">Pod Template:</span></span>
<span class="line"><span style="color:#e1e4e8;">Labels:  app=nginx</span></span>
<span class="line"><span style="color:#e1e4e8;">Containers:</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx:</span></span>
<span class="line"><span style="color:#e1e4e8;">    Image:        nginx:1.161</span></span>
<span class="line"><span style="color:#e1e4e8;">    Port:         80/TCP</span></span>
<span class="line"><span style="color:#e1e4e8;">    Host Port:    0/TCP</span></span>
<span class="line"><span style="color:#e1e4e8;">    Environment:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    Mounts:       &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Volumes:        &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Conditions:</span></span>
<span class="line"><span style="color:#e1e4e8;">Type           Status  Reason</span></span>
<span class="line"><span style="color:#e1e4e8;">----           ------  ------</span></span>
<span class="line"><span style="color:#e1e4e8;">Available      True    MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#e1e4e8;">Progressing    True    ReplicaSetUpdated</span></span>
<span class="line"><span style="color:#e1e4e8;">OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)</span></span>
<span class="line"><span style="color:#e1e4e8;">NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)</span></span>
<span class="line"><span style="color:#e1e4e8;">Events:</span></span>
<span class="line"><span style="color:#e1e4e8;">FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message</span></span>
<span class="line"><span style="color:#e1e4e8;">--------- --------    -----   ----                    -------------   --------    ------              -------</span></span>
<span class="line"><span style="color:#e1e4e8;">1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3</span></span>
<span class="line"><span style="color:#e1e4e8;">22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1</span></span>
<span class="line"><span style="color:#e1e4e8;">22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2</span></span>
<span class="line"><span style="color:#e1e4e8;">22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2</span></span>
<span class="line"><span style="color:#e1e4e8;">21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1</span></span>
<span class="line"><span style="color:#e1e4e8;">21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3</span></span>
<span class="line"><span style="color:#e1e4e8;">13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0</span></span>
<span class="line"><span style="color:#e1e4e8;">13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Name:           nginx-deployment</span></span>
<span class="line"><span style="color:#24292e;">Namespace:      default</span></span>
<span class="line"><span style="color:#24292e;">CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700</span></span>
<span class="line"><span style="color:#24292e;">Labels:         app=nginx</span></span>
<span class="line"><span style="color:#24292e;">Selector:       app=nginx</span></span>
<span class="line"><span style="color:#24292e;">Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable</span></span>
<span class="line"><span style="color:#24292e;">StrategyType:       RollingUpdate</span></span>
<span class="line"><span style="color:#24292e;">MinReadySeconds:    0</span></span>
<span class="line"><span style="color:#24292e;">RollingUpdateStrategy:  25% max unavailable, 25% max surge</span></span>
<span class="line"><span style="color:#24292e;">Pod Template:</span></span>
<span class="line"><span style="color:#24292e;">Labels:  app=nginx</span></span>
<span class="line"><span style="color:#24292e;">Containers:</span></span>
<span class="line"><span style="color:#24292e;">nginx:</span></span>
<span class="line"><span style="color:#24292e;">    Image:        nginx:1.161</span></span>
<span class="line"><span style="color:#24292e;">    Port:         80/TCP</span></span>
<span class="line"><span style="color:#24292e;">    Host Port:    0/TCP</span></span>
<span class="line"><span style="color:#24292e;">    Environment:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">    Mounts:       &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Volumes:        &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Conditions:</span></span>
<span class="line"><span style="color:#24292e;">Type           Status  Reason</span></span>
<span class="line"><span style="color:#24292e;">----           ------  ------</span></span>
<span class="line"><span style="color:#24292e;">Available      True    MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#24292e;">Progressing    True    ReplicaSetUpdated</span></span>
<span class="line"><span style="color:#24292e;">OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)</span></span>
<span class="line"><span style="color:#24292e;">NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)</span></span>
<span class="line"><span style="color:#24292e;">Events:</span></span>
<span class="line"><span style="color:#24292e;">FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message</span></span>
<span class="line"><span style="color:#24292e;">--------- --------    -----   ----                    -------------   --------    ------              -------</span></span>
<span class="line"><span style="color:#24292e;">1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3</span></span>
<span class="line"><span style="color:#24292e;">22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1</span></span>
<span class="line"><span style="color:#24292e;">22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2</span></span>
<span class="line"><span style="color:#24292e;">22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2</span></span>
<span class="line"><span style="color:#24292e;">21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1</span></span>
<span class="line"><span style="color:#24292e;">21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3</span></span>
<span class="line"><span style="color:#24292e;">13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0</span></span>
<span class="line"><span style="color:#24292e;">13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1</span></span></code></pre></div><p>To fix this, you need to rollback to a previous revision of Deployment that is stable.</p></li></ul><h3 id="checking-rollout-history-of-a-deployment" tabindex="-1">Checking Rollout History of a Deployment <a class="header-anchor" href="#checking-rollout-history-of-a-deployment" aria-label="Permalink to &quot;Checking Rollout History of a Deployment&quot;">​</a></h3><p>Follow the steps given below to check the rollout history:</p><ol><li><p>First, check the revisions of this Deployment:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rollout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">history</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rollout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">history</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployments &quot;nginx-deployment&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">REVISION    CHANGE-CAUSE</span></span>
<span class="line"><span style="color:#e1e4e8;">1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml</span></span>
<span class="line"><span style="color:#e1e4e8;">2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1</span></span>
<span class="line"><span style="color:#e1e4e8;">3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployments &quot;nginx-deployment&quot;</span></span>
<span class="line"><span style="color:#24292e;">REVISION    CHANGE-CAUSE</span></span>
<span class="line"><span style="color:#24292e;">1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml</span></span>
<span class="line"><span style="color:#24292e;">2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1</span></span>
<span class="line"><span style="color:#24292e;">3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161</span></span></code></pre></div><p><code>CHANGE-CAUSE</code> is copied from the Deployment annotation <code>kubernetes.io/change-cause</code> to its revisions upon creation. You can specify <code>theCHANGE-CAUSE</code> message by:</p><ul><li>Annotating the Deployment with kubectl annotate deployment/nginx-deployment <code>kubernetes.io/change-cause=&quot;image updated to 1.16.1&quot;</code></li><li>Manually editing the manifest of the resource.</li></ul></li><li><p>To see the details of each revision, run:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rollout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">history</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--revision=2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rollout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">history</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--revision=2</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployments &quot;nginx-deployment&quot; revision 2</span></span>
<span class="line"><span style="color:#e1e4e8;">Labels:       app=nginx</span></span>
<span class="line"><span style="color:#e1e4e8;">        pod-template-hash=1159050644</span></span>
<span class="line"><span style="color:#e1e4e8;">Annotations:  kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1</span></span>
<span class="line"><span style="color:#e1e4e8;">Containers:</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx:</span></span>
<span class="line"><span style="color:#e1e4e8;">    Image:      nginx:1.16.1</span></span>
<span class="line"><span style="color:#e1e4e8;">    Port:       80/TCP</span></span>
<span class="line"><span style="color:#e1e4e8;">    QoS Tier:</span></span>
<span class="line"><span style="color:#e1e4e8;">        cpu:      BestEffort</span></span>
<span class="line"><span style="color:#e1e4e8;">        memory:   BestEffort</span></span>
<span class="line"><span style="color:#e1e4e8;">    Environment Variables:      &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">No volumes.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployments &quot;nginx-deployment&quot; revision 2</span></span>
<span class="line"><span style="color:#24292e;">Labels:       app=nginx</span></span>
<span class="line"><span style="color:#24292e;">        pod-template-hash=1159050644</span></span>
<span class="line"><span style="color:#24292e;">Annotations:  kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1</span></span>
<span class="line"><span style="color:#24292e;">Containers:</span></span>
<span class="line"><span style="color:#24292e;">nginx:</span></span>
<span class="line"><span style="color:#24292e;">    Image:      nginx:1.16.1</span></span>
<span class="line"><span style="color:#24292e;">    Port:       80/TCP</span></span>
<span class="line"><span style="color:#24292e;">    QoS Tier:</span></span>
<span class="line"><span style="color:#24292e;">        cpu:      BestEffort</span></span>
<span class="line"><span style="color:#24292e;">        memory:   BestEffort</span></span>
<span class="line"><span style="color:#24292e;">    Environment Variables:      &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">No volumes.</span></span></code></pre></div></li></ol><h3 id="rolling-back-to-a-previous-revision" tabindex="-1">Rolling Back to a Previous Revision <a class="header-anchor" href="#rolling-back-to-a-previous-revision" aria-label="Permalink to &quot;Rolling Back to a Previous Revision&quot;">​</a></h3><p>Follow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2.</p><ol><li><p>Now you&#39;ve decided to undo the current rollout and rollback to the previous revision:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rollout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">undo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rollout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">undo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment.apps/nginx-deployment rolled back</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment.apps/nginx-deployment rolled back</span></span></code></pre></div><p>Alternatively, you can rollback to a specific revision by specifying it with <code>--to-revision</code>:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rollout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">undo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--to-revision=2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rollout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">undo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--to-revision=2</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment.apps/nginx-deployment rolled back</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment.apps/nginx-deployment rolled back</span></span></code></pre></div><p>For more details about rollout related commands, read <a href="https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#rollout" target="_blank" rel="noreferrer">kubectl rollout</a>.</p><p>The Deployment is now rolled back to a previous stable revision. As you can see, a <code>DeploymentRollback</code> event for rolling back to revision 2 is generated from Deployment controller.</p></li><li><p>Check if the rollback was successful and the Deployment is running as expected, run:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx-deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx-deployment</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME               READY   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment   3/3     3            3           30m</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME               READY   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment   3/3     3            3           30m</span></span></code></pre></div></li><li><p>Get the description of the Deployment:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">describe</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx-deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">describe</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx-deployment</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Name:                   nginx-deployment</span></span>
<span class="line"><span style="color:#e1e4e8;">Namespace:              default</span></span>
<span class="line"><span style="color:#e1e4e8;">CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500</span></span>
<span class="line"><span style="color:#e1e4e8;">Labels:                 app=nginx</span></span>
<span class="line"><span style="color:#e1e4e8;">Annotations:            deployment.kubernetes.io/revision=4</span></span>
<span class="line"><span style="color:#e1e4e8;">                        kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1</span></span>
<span class="line"><span style="color:#e1e4e8;">Selector:               app=nginx</span></span>
<span class="line"><span style="color:#e1e4e8;">Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable</span></span>
<span class="line"><span style="color:#e1e4e8;">StrategyType:           RollingUpdate</span></span>
<span class="line"><span style="color:#e1e4e8;">MinReadySeconds:        0</span></span>
<span class="line"><span style="color:#e1e4e8;">RollingUpdateStrategy:  25% max unavailable, 25% max surge</span></span>
<span class="line"><span style="color:#e1e4e8;">Pod Template:</span></span>
<span class="line"><span style="color:#e1e4e8;">Labels:  app=nginx</span></span>
<span class="line"><span style="color:#e1e4e8;">Containers:</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx:</span></span>
<span class="line"><span style="color:#e1e4e8;">    Image:        nginx:1.16.1</span></span>
<span class="line"><span style="color:#e1e4e8;">    Port:         80/TCP</span></span>
<span class="line"><span style="color:#e1e4e8;">    Host Port:    0/TCP</span></span>
<span class="line"><span style="color:#e1e4e8;">    Environment:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    Mounts:       &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Volumes:        &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Conditions:</span></span>
<span class="line"><span style="color:#e1e4e8;">Type           Status  Reason</span></span>
<span class="line"><span style="color:#e1e4e8;">----           ------  ------</span></span>
<span class="line"><span style="color:#e1e4e8;">Available      True    MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#e1e4e8;">Progressing    True    NewReplicaSetAvailable</span></span>
<span class="line"><span style="color:#e1e4e8;">OldReplicaSets:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)</span></span>
<span class="line"><span style="color:#e1e4e8;">Events:</span></span>
<span class="line"><span style="color:#e1e4e8;">Type    Reason              Age   From                   Message</span></span>
<span class="line"><span style="color:#e1e4e8;">----    ------              ----  ----                   -------</span></span>
<span class="line"><span style="color:#e1e4e8;">Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3</span></span>
<span class="line"><span style="color:#e1e4e8;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1</span></span>
<span class="line"><span style="color:#e1e4e8;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2</span></span>
<span class="line"><span style="color:#e1e4e8;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2</span></span>
<span class="line"><span style="color:#e1e4e8;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1</span></span>
<span class="line"><span style="color:#e1e4e8;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3</span></span>
<span class="line"><span style="color:#e1e4e8;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0</span></span>
<span class="line"><span style="color:#e1e4e8;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1</span></span>
<span class="line"><span style="color:#e1e4e8;">Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment &quot;nginx-deployment&quot; to revision 2</span></span>
<span class="line"><span style="color:#e1e4e8;">Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Name:                   nginx-deployment</span></span>
<span class="line"><span style="color:#24292e;">Namespace:              default</span></span>
<span class="line"><span style="color:#24292e;">CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500</span></span>
<span class="line"><span style="color:#24292e;">Labels:                 app=nginx</span></span>
<span class="line"><span style="color:#24292e;">Annotations:            deployment.kubernetes.io/revision=4</span></span>
<span class="line"><span style="color:#24292e;">                        kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1</span></span>
<span class="line"><span style="color:#24292e;">Selector:               app=nginx</span></span>
<span class="line"><span style="color:#24292e;">Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable</span></span>
<span class="line"><span style="color:#24292e;">StrategyType:           RollingUpdate</span></span>
<span class="line"><span style="color:#24292e;">MinReadySeconds:        0</span></span>
<span class="line"><span style="color:#24292e;">RollingUpdateStrategy:  25% max unavailable, 25% max surge</span></span>
<span class="line"><span style="color:#24292e;">Pod Template:</span></span>
<span class="line"><span style="color:#24292e;">Labels:  app=nginx</span></span>
<span class="line"><span style="color:#24292e;">Containers:</span></span>
<span class="line"><span style="color:#24292e;">nginx:</span></span>
<span class="line"><span style="color:#24292e;">    Image:        nginx:1.16.1</span></span>
<span class="line"><span style="color:#24292e;">    Port:         80/TCP</span></span>
<span class="line"><span style="color:#24292e;">    Host Port:    0/TCP</span></span>
<span class="line"><span style="color:#24292e;">    Environment:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">    Mounts:       &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Volumes:        &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Conditions:</span></span>
<span class="line"><span style="color:#24292e;">Type           Status  Reason</span></span>
<span class="line"><span style="color:#24292e;">----           ------  ------</span></span>
<span class="line"><span style="color:#24292e;">Available      True    MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#24292e;">Progressing    True    NewReplicaSetAvailable</span></span>
<span class="line"><span style="color:#24292e;">OldReplicaSets:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)</span></span>
<span class="line"><span style="color:#24292e;">Events:</span></span>
<span class="line"><span style="color:#24292e;">Type    Reason              Age   From                   Message</span></span>
<span class="line"><span style="color:#24292e;">----    ------              ----  ----                   -------</span></span>
<span class="line"><span style="color:#24292e;">Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3</span></span>
<span class="line"><span style="color:#24292e;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1</span></span>
<span class="line"><span style="color:#24292e;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2</span></span>
<span class="line"><span style="color:#24292e;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2</span></span>
<span class="line"><span style="color:#24292e;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1</span></span>
<span class="line"><span style="color:#24292e;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3</span></span>
<span class="line"><span style="color:#24292e;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0</span></span>
<span class="line"><span style="color:#24292e;">Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1</span></span>
<span class="line"><span style="color:#24292e;">Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment &quot;nginx-deployment&quot; to revision 2</span></span>
<span class="line"><span style="color:#24292e;">Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0</span></span></code></pre></div></li></ol><h2 id="scaling-a-deployment" tabindex="-1">Scaling a Deployment <a class="header-anchor" href="#scaling-a-deployment" aria-label="Permalink to &quot;Scaling a Deployment&quot;">​</a></h2><p>You can scale a Deployment by using the following command:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">scale</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--replicas=10</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">scale</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--replicas=10</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment.apps/nginx-deployment scaled</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment.apps/nginx-deployment scaled</span></span></code></pre></div><p>Assuming <a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/" target="_blank" rel="noreferrer">horizontal Pod autoscaling</a> is enabled in your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of Pods you want to run based on the CPU utilization of your existing Pods.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">autoscale</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--min=10</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--max=15</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--cpu-percent=80</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">autoscale</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--min=10</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--max=15</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--cpu-percent=80</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment.apps/nginx-deployment scaled</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment.apps/nginx-deployment scaled</span></span></code></pre></div><h3 id="proportional-scaling" tabindex="-1">Proportional scaling <a class="header-anchor" href="#proportional-scaling" aria-label="Permalink to &quot;Proportional scaling&quot;">​</a></h3><p>RollingUpdate Deployments support running multiple versions of an application at the same time. When you or an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress or paused), the Deployment controller balances the additional replicas in the existing active ReplicaSets (ReplicaSets with Pods) in order to mitigate risk. This is called proportional scaling.</p><p>For example, you are running a Deployment with 10 replicas, <a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#max-surge" target="_blank" rel="noreferrer">maxSurge</a>=3, and <a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#max-unavailable" target="_blank" rel="noreferrer">maxUnavailable</a>=2.</p><ul><li><p>Ensure that the 10 replicas in your Deployment are running.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deploy</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deploy</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment     10        10        10           10          50s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment     10        10        10           10          50s</span></span></code></pre></div></li><li><p>You update to a new image which happens to be unresolvable from inside the cluster.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">image</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx=nginx:sometag</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set</span><span style="color:#24292E;"> </span><span style="color:#032F62;">image</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx=nginx:sometag</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment.apps/nginx-deployment image updated</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment.apps/nginx-deployment image updated</span></span></code></pre></div></li><li><p>The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it&#39;s blocked due to the <code>maxUnavailable</code> requirement that you mentioned above. Check out the rollout status:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rs</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rs</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME                          DESIRED   CURRENT   READY     AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-1989198191   5         5         0         9s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-618515232    8         8         8         1m</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME                          DESIRED   CURRENT   READY     AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-1989198191   5         5         0         9s</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-618515232    8         8         8         1m</span></span></code></pre></div></li><li><p>Then a new scaling request for the Deployment comes along. The autoscaler increments the Deployment replicas to 15. The Deployment controller needs to decide where to add these new 5 replicas. If you weren&#39;t using proportional scaling, all 5 of them would be added in the new ReplicaSet. With proportional scaling, you spread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the most replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the ReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up.</p></li></ul><p>In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the new ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming the new replicas become healthy. To confirm this, run:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deploy</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deploy</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment     15        18        7            8           7m</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment     15        18        7            8           7m</span></span></code></pre></div><p>The rollout status confirms how the replicas were added to each ReplicaSet.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rs</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rs</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME                          DESIRED   CURRENT   READY     AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-1989198191   7         7         0         7m</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-deployment-618515232    11        11        11        7m</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME                          DESIRED   CURRENT   READY     AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-1989198191   7         7         0         7m</span></span>
<span class="line"><span style="color:#24292e;">nginx-deployment-618515232    11        11        11        7m</span></span></code></pre></div><h2 id="pausing-and-resuming-a-rollout-of-a-deployment" tabindex="-1">Pausing and Resuming a rollout of a Deployment <a class="header-anchor" href="#pausing-and-resuming-a-rollout-of-a-deployment" aria-label="Permalink to &quot;Pausing and Resuming a rollout of a Deployment&quot;">​</a></h2><p>When you update a Deployment, or plan to, you can pause rollouts for that Deployment before you trigger one or more updates. When you&#39;re ready to apply those changes, you resume rollouts for the Deployment. This approach allows you to apply multiple fixes in between pausing and resuming without triggering unnecessary rollouts.</p><ul><li><p>For example, with a Deployment that was created:</p><p>Get the Deployment details:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deploy</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deploy</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx     3         3         3            3           1m</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx     3         3         3            3           1m</span></span></code></pre></div><p>Get the rollout status:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rs</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rs</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME               DESIRED   CURRENT   READY     AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-2142116321   3         3         3         1m</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME               DESIRED   CURRENT   READY     AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-2142116321   3         3         3         1m</span></span></code></pre></div></li><li><p>Pause by running the following command:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rollout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pause</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rollout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pause</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment.apps/nginx-deployment paused</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment.apps/nginx-deployment paused</span></span></code></pre></div></li><li><p>Then update the image of the Deployment:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">image</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx=nginx:1.16.1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set</span><span style="color:#24292E;"> </span><span style="color:#032F62;">image</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx=nginx:1.16.1</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment.apps/nginx-deployment image updated</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment.apps/nginx-deployment image updated</span></span></code></pre></div></li><li><p>Notice that no new rollout started:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rollout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">history</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rollout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">history</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployments &quot;nginx&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">REVISION  CHANGE-CAUSE</span></span>
<span class="line"><span style="color:#e1e4e8;">1   &lt;none&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployments &quot;nginx&quot;</span></span>
<span class="line"><span style="color:#24292e;">REVISION  CHANGE-CAUSE</span></span>
<span class="line"><span style="color:#24292e;">1   &lt;none&gt;</span></span></code></pre></div></li><li><p>Get the rollout status to verify that the existing ReplicaSet has not changed:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rs</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rs</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME               DESIRED   CURRENT   READY     AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-2142116321   3         3         3         2m</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME               DESIRED   CURRENT   READY     AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-2142116321   3         3         3         2m</span></span></code></pre></div></li><li><p>You can make as many updates as you wish, for example, update the resources that will be used:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">resources</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c=nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--limits=cpu=200m,memory=512Mi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set</span><span style="color:#24292E;"> </span><span style="color:#032F62;">resources</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c=nginx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--limits=cpu=200m,memory=512Mi</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment.apps/nginx-deployment resource requirements updated</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment.apps/nginx-deployment resource requirements updated</span></span></code></pre></div><p>The initial state of the Deployment prior to pausing its rollout will continue its function, but new updates to the Deployment will not have any effect as long as the Deployment rollout is paused.</p></li><li><p>Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rollout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">resume</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rollout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">resume</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment.apps/nginx-deployment resumed</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment.apps/nginx-deployment resumed</span></span></code></pre></div></li><li><p>Watch the status of the rollout until it&#39;s done.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl get rs -w</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl get rs -w</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME               DESIRED   CURRENT   READY     AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-2142116321   2         2         2         2m</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-3926361531   2         2         0         6s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-3926361531   2         2         1         18s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-2142116321   1         2         2         2m</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-2142116321   1         2         2         2m</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-3926361531   3         2         1         18s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-3926361531   3         2         1         18s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-2142116321   1         1         1         2m</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-3926361531   3         3         1         18s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-3926361531   3         3         2         19s</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-2142116321   0         1         1         2m</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-2142116321   0         1         1         2m</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-2142116321   0         0         0         2m</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-3926361531   3         3         3         20s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME               DESIRED   CURRENT   READY     AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-2142116321   2         2         2         2m</span></span>
<span class="line"><span style="color:#24292e;">nginx-3926361531   2         2         0         6s</span></span>
<span class="line"><span style="color:#24292e;">nginx-3926361531   2         2         1         18s</span></span>
<span class="line"><span style="color:#24292e;">nginx-2142116321   1         2         2         2m</span></span>
<span class="line"><span style="color:#24292e;">nginx-2142116321   1         2         2         2m</span></span>
<span class="line"><span style="color:#24292e;">nginx-3926361531   3         2         1         18s</span></span>
<span class="line"><span style="color:#24292e;">nginx-3926361531   3         2         1         18s</span></span>
<span class="line"><span style="color:#24292e;">nginx-2142116321   1         1         1         2m</span></span>
<span class="line"><span style="color:#24292e;">nginx-3926361531   3         3         1         18s</span></span>
<span class="line"><span style="color:#24292e;">nginx-3926361531   3         3         2         19s</span></span>
<span class="line"><span style="color:#24292e;">nginx-2142116321   0         1         1         2m</span></span>
<span class="line"><span style="color:#24292e;">nginx-2142116321   0         1         1         2m</span></span>
<span class="line"><span style="color:#24292e;">nginx-2142116321   0         0         0         2m</span></span>
<span class="line"><span style="color:#24292e;">nginx-3926361531   3         3         3         20s</span></span></code></pre></div></li><li><p>Get the status of the latest rollout:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rs</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rs</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME               DESIRED   CURRENT   READY     AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-2142116321   0         0         0         2m</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx-3926361531   3         3         3         28s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME               DESIRED   CURRENT   READY     AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx-2142116321   0         0         0         2m</span></span>
<span class="line"><span style="color:#24292e;">nginx-3926361531   3         3         3         28s</span></span></code></pre></div></li></ul><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>You cannot rollback a paused Deployment until you resume it.</p></div><h2 id="deployment-status" tabindex="-1">Deployment status <a class="header-anchor" href="#deployment-status" aria-label="Permalink to &quot;Deployment status&quot;">​</a></h2><p>A Deployment enters various states during its lifecycle. It can be <a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#progressing-deployment" target="_blank" rel="noreferrer">progressing</a> while rolling out a new ReplicaSet, it can be <a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#complete-deployment" target="_blank" rel="noreferrer">complete</a>, or it can <a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#failed-deployment" target="_blank" rel="noreferrer">fail to progress</a>.</p><h3 id="progressing-deployment" tabindex="-1">Progressing Deployment <a class="header-anchor" href="#progressing-deployment" aria-label="Permalink to &quot;Progressing Deployment&quot;">​</a></h3><p>Kubernetes marks a Deployment as progressing when one of the following tasks is performed:</p><ul><li>The Deployment creates a new ReplicaSet.</li><li>The Deployment is scaling up its newest ReplicaSet.</li><li>The Deployment is scaling down its older ReplicaSet(s).</li><li>New Pods become ready or available (ready for at least <a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#min-ready-seconds" target="_blank" rel="noreferrer">MinReadySeconds</a>).</li></ul><p>When the rollout becomes “progressing”, the Deployment controller adds a condition with the following attributes to the Deployment&#39;s <code>.status.conditions</code>:</p><ul><li><code>type: Progressing</code></li><li><code>status: &quot;True&quot;</code></li><li><code>reason: NewReplicaSetCreated | reason: FoundNewReplicaSet | reason: ReplicaSetUpdated</code></li></ul><p>You can monitor the progress for a Deployment by using <code>kubectl rollout status</code>.</p><h3 id="complete-deployment" tabindex="-1">Complete Deployment <a class="header-anchor" href="#complete-deployment" aria-label="Permalink to &quot;Complete Deployment&quot;">​</a></h3><p>Kubernetes marks a Deployment as complete when it has the following characteristics:</p><ul><li>All of the replicas associated with the Deployment have been updated to the latest version you&#39;ve specified, meaning any updates you&#39;ve requested have been completed.</li><li>All of the replicas associated with the Deployment are available.</li><li>No old replicas for the Deployment are running.</li></ul><p>When the rollout becomes “complete”, the Deployment controller sets a condition with the following attributes to the Deployment&#39;s <code>.status.conditions</code>:</p><ul><li><code>type: Progressing</code></li><li><code>status: &quot;True&quot;</code></li><li><code>reason: NewReplicaSetAvailable</code></li></ul><p>This <code>Progressing</code> condition will retain a status value of <code>&quot;True&quot;</code> until a new rollout is initiated. The condition holds even when availability of replicas changes (which does instead affect the <code>Available</code> condition).</p><p>You can check if a Deployment has completed by using <code>kubectl rollout status</code>. If the rollout completed successfully, <code>kubectl rollout status</code> returns a zero exit code.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rollout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rollout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Waiting for rollout to finish: 2 of 3 updated replicas are available...</span></span>
<span class="line"><span style="color:#e1e4e8;">deployment &quot;nginx-deployment&quot; successfully rolled out</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Waiting for rollout to finish: 2 of 3 updated replicas are available...</span></span>
<span class="line"><span style="color:#24292e;">deployment &quot;nginx-deployment&quot; successfully rolled out</span></span></code></pre></div><p>and the exit status from kubectl rollout is 0 (success):</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$?</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$?</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">0</span></span></code></pre></div><h3 id="failed-deployment" tabindex="-1">Failed Deployment <a class="header-anchor" href="#failed-deployment" aria-label="Permalink to &quot;Failed Deployment&quot;">​</a></h3><p>Your Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing. This can occur due to some of the following factors:</p><ul><li>Insufficient quota</li><li>Readiness probe failures</li><li>Image pull errors</li><li>Insufficient permissions</li><li>Limit ranges</li><li>Application runtime misconfiguration</li></ul><p>One way you can detect this condition is to specify a deadline parameter in your Deployment spec: (<code>.spec.progressDeadlineSeconds</code>). <code>.spec.progressDeadlineSeconds</code> denotes the number of seconds the Deployment controller waits before indicating (in the Deployment status) that the Deployment progress has stalled.</p><p>The following <code>kubectl</code> command sets the spec with <code>progressDeadlineSeconds</code> to make the controller report lack of progress of a rollout for a Deployment after 10 minutes:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">patch</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{&quot;spec&quot;:{&quot;progressDeadlineSeconds&quot;:600}}&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">patch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{&quot;spec&quot;:{&quot;progressDeadlineSeconds&quot;:600}}&#39;</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">deployment.apps/nginx-deployment patched</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">deployment.apps/nginx-deployment patched</span></span></code></pre></div><p>Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment&#39;s <code>.status.conditions</code>:</p><ul><li><code>type: Progressing</code></li><li><code>status: &quot;False&quot;</code></li><li><code>reason: ProgressDeadlineExceeded</code></li></ul><p>This condition can also fail early and is then set to status value of <code>&quot;False&quot;</code> due to reasons as <code>ReplicaSetCreateError</code>. Also, the deadline is not taken into account anymore once the Deployment rollout completes.</p><p>See the <a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties" target="_blank" rel="noreferrer">Kubernetes API conventions</a> for more information on status conditions.</p><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>Kubernetes takes no action on a stalled Deployment other than to report a status condition with <code>reason: ProgressDeadlineExceeded</code>. Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version.</p></div><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>If you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline. You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering the condition for exceeding the deadline.</p></div><p>You may experience transient errors with your Deployments, either due to a low timeout that you have set or due to any other kind of error that can be treated as transient. For example, let&#39;s suppose you have insufficient quota. If you describe the Deployment you will notice the following section:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">describe</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx-deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">describe</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx-deployment</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;...&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Conditions:</span></span>
<span class="line"><span style="color:#e1e4e8;">  Type            Status  Reason</span></span>
<span class="line"><span style="color:#e1e4e8;">  ----            ------  ------</span></span>
<span class="line"><span style="color:#e1e4e8;">  Available       True    MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#e1e4e8;">  Progressing     True    ReplicaSetUpdated</span></span>
<span class="line"><span style="color:#e1e4e8;">  ReplicaFailure  True    FailedCreate</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;...&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;...&gt;</span></span>
<span class="line"><span style="color:#24292e;">Conditions:</span></span>
<span class="line"><span style="color:#24292e;">  Type            Status  Reason</span></span>
<span class="line"><span style="color:#24292e;">  ----            ------  ------</span></span>
<span class="line"><span style="color:#24292e;">  Available       True    MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#24292e;">  Progressing     True    ReplicaSetUpdated</span></span>
<span class="line"><span style="color:#24292e;">  ReplicaFailure  True    FailedCreate</span></span>
<span class="line"><span style="color:#24292e;">&lt;...&gt;</span></span></code></pre></div><p>If you run <code>kubectl get deployment nginx-deployment -o yaml</code>, the Deployment status is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">status:</span></span>
<span class="line"><span style="color:#e1e4e8;">  availableReplicas: 2</span></span>
<span class="line"><span style="color:#e1e4e8;">  conditions:</span></span>
<span class="line"><span style="color:#e1e4e8;">  - lastTransitionTime: 2016-10-04T12:25:39Z</span></span>
<span class="line"><span style="color:#e1e4e8;">    lastUpdateTime: 2016-10-04T12:25:39Z</span></span>
<span class="line"><span style="color:#e1e4e8;">    message: Replica set &quot;nginx-deployment-4262182780&quot; is progressing.</span></span>
<span class="line"><span style="color:#e1e4e8;">    reason: ReplicaSetUpdated</span></span>
<span class="line"><span style="color:#e1e4e8;">    status: &quot;True&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">    type: Progressing</span></span>
<span class="line"><span style="color:#e1e4e8;">  - lastTransitionTime: 2016-10-04T12:25:42Z</span></span>
<span class="line"><span style="color:#e1e4e8;">    lastUpdateTime: 2016-10-04T12:25:42Z</span></span>
<span class="line"><span style="color:#e1e4e8;">    message: Deployment has minimum availability.</span></span>
<span class="line"><span style="color:#e1e4e8;">    reason: MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#e1e4e8;">    status: &quot;True&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">    type: Available</span></span>
<span class="line"><span style="color:#e1e4e8;">  - lastTransitionTime: 2016-10-04T12:25:39Z</span></span>
<span class="line"><span style="color:#e1e4e8;">    lastUpdateTime: 2016-10-04T12:25:39Z</span></span>
<span class="line"><span style="color:#e1e4e8;">    message: &#39;Error creating: pods &quot;nginx-deployment-4262182780-&quot; is forbidden: exceeded quota:</span></span>
<span class="line"><span style="color:#e1e4e8;">      object-counts, requested: pods=1, used: pods=3, limited: pods=2&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">    reason: FailedCreate</span></span>
<span class="line"><span style="color:#e1e4e8;">    status: &quot;True&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">    type: ReplicaFailure</span></span>
<span class="line"><span style="color:#e1e4e8;">  observedGeneration: 3</span></span>
<span class="line"><span style="color:#e1e4e8;">  replicas: 2</span></span>
<span class="line"><span style="color:#e1e4e8;">  unavailableReplicas: 2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">status:</span></span>
<span class="line"><span style="color:#24292e;">  availableReplicas: 2</span></span>
<span class="line"><span style="color:#24292e;">  conditions:</span></span>
<span class="line"><span style="color:#24292e;">  - lastTransitionTime: 2016-10-04T12:25:39Z</span></span>
<span class="line"><span style="color:#24292e;">    lastUpdateTime: 2016-10-04T12:25:39Z</span></span>
<span class="line"><span style="color:#24292e;">    message: Replica set &quot;nginx-deployment-4262182780&quot; is progressing.</span></span>
<span class="line"><span style="color:#24292e;">    reason: ReplicaSetUpdated</span></span>
<span class="line"><span style="color:#24292e;">    status: &quot;True&quot;</span></span>
<span class="line"><span style="color:#24292e;">    type: Progressing</span></span>
<span class="line"><span style="color:#24292e;">  - lastTransitionTime: 2016-10-04T12:25:42Z</span></span>
<span class="line"><span style="color:#24292e;">    lastUpdateTime: 2016-10-04T12:25:42Z</span></span>
<span class="line"><span style="color:#24292e;">    message: Deployment has minimum availability.</span></span>
<span class="line"><span style="color:#24292e;">    reason: MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#24292e;">    status: &quot;True&quot;</span></span>
<span class="line"><span style="color:#24292e;">    type: Available</span></span>
<span class="line"><span style="color:#24292e;">  - lastTransitionTime: 2016-10-04T12:25:39Z</span></span>
<span class="line"><span style="color:#24292e;">    lastUpdateTime: 2016-10-04T12:25:39Z</span></span>
<span class="line"><span style="color:#24292e;">    message: &#39;Error creating: pods &quot;nginx-deployment-4262182780-&quot; is forbidden: exceeded quota:</span></span>
<span class="line"><span style="color:#24292e;">      object-counts, requested: pods=1, used: pods=3, limited: pods=2&#39;</span></span>
<span class="line"><span style="color:#24292e;">    reason: FailedCreate</span></span>
<span class="line"><span style="color:#24292e;">    status: &quot;True&quot;</span></span>
<span class="line"><span style="color:#24292e;">    type: ReplicaFailure</span></span>
<span class="line"><span style="color:#24292e;">  observedGeneration: 3</span></span>
<span class="line"><span style="color:#24292e;">  replicas: 2</span></span>
<span class="line"><span style="color:#24292e;">  unavailableReplicas: 2</span></span></code></pre></div><p>Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the reason for the Progressing condition:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Conditions:</span></span>
<span class="line"><span style="color:#e1e4e8;">  Type            Status  Reason</span></span>
<span class="line"><span style="color:#e1e4e8;">  ----            ------  ------</span></span>
<span class="line"><span style="color:#e1e4e8;">  Available       True    MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#e1e4e8;">  Progressing     False   ProgressDeadlineExceeded</span></span>
<span class="line"><span style="color:#e1e4e8;">  ReplicaFailure  True    FailedCreate</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Conditions:</span></span>
<span class="line"><span style="color:#24292e;">  Type            Status  Reason</span></span>
<span class="line"><span style="color:#24292e;">  ----            ------  ------</span></span>
<span class="line"><span style="color:#24292e;">  Available       True    MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#24292e;">  Progressing     False   ProgressDeadlineExceeded</span></span>
<span class="line"><span style="color:#24292e;">  ReplicaFailure  True    FailedCreate</span></span></code></pre></div><p>You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other controllers you may be running, or by increasing quota in your namespace. If you satisfy the quota conditions and the Deployment controller then completes the Deployment rollout, you&#39;ll see the Deployment&#39;s status update with a successful condition (<code>status: &quot;True&quot;</code> and <code>reason: NewReplicaSetAvailable</code>).</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Conditions:</span></span>
<span class="line"><span style="color:#e1e4e8;">  Type          Status  Reason</span></span>
<span class="line"><span style="color:#e1e4e8;">  ----          ------  ------</span></span>
<span class="line"><span style="color:#e1e4e8;">  Available     True    MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#e1e4e8;">  Progressing   True    NewReplicaSetAvailable</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Conditions:</span></span>
<span class="line"><span style="color:#24292e;">  Type          Status  Reason</span></span>
<span class="line"><span style="color:#24292e;">  ----          ------  ------</span></span>
<span class="line"><span style="color:#24292e;">  Available     True    MinimumReplicasAvailable</span></span>
<span class="line"><span style="color:#24292e;">  Progressing   True    NewReplicaSetAvailable</span></span></code></pre></div><p><code>type: Available</code> with <code>status: &quot;True&quot;</code> means that your Deployment has minimum availability. Minimum availability is dictated by the parameters specified in the deployment strategy. <code>type: Progressing</code> with <code>status: &quot;True&quot;</code> means that your Deployment is either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum required new replicas are available (see the Reason of the condition for the particulars - in our case <code>reason: NewReplicaSetAvailable</code> means that the Deployment is complete).</p><p>You can check if a Deployment has failed to progress by using <code>kubectl rollout status</code>. <code>kubectl rollout status</code> returns a non-zero exit code if the Deployment has exceeded the progression deadline.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rollout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment/nginx-deployment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rollout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment/nginx-deployment</span></span></code></pre></div><p>The output is similar to this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Waiting for rollout to finish: 2 out of 3 new replicas have been updated...</span></span>
<span class="line"><span style="color:#e1e4e8;">error: deployment &quot;nginx&quot; exceeded its progress deadline</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Waiting for rollout to finish: 2 out of 3 new replicas have been updated...</span></span>
<span class="line"><span style="color:#24292e;">error: deployment &quot;nginx&quot; exceeded its progress deadline</span></span></code></pre></div><p>and the exit status from <code>kubectl rollout</code> is 1 (indicating an error):</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$?</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$?</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1</span></span></code></pre></div><h3 id="operating-on-a-failed-deployment" tabindex="-1">Operating on a failed deployment <a class="header-anchor" href="#operating-on-a-failed-deployment" aria-label="Permalink to &quot;Operating on a failed deployment&quot;">​</a></h3><p>All actions that apply to a complete Deployment also apply to a failed Deployment. You can scale it up/down, roll back to a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.</p><h2 id="clean-up-policy" tabindex="-1">Clean up Policy <a class="header-anchor" href="#clean-up-policy" aria-label="Permalink to &quot;Clean up Policy&quot;">​</a></h2><p>You can set <code>.spec.revisionHistoryLimit</code> field in a Deployment to specify how many old ReplicaSets for this Deployment you want to retain. The rest will be garbage-collected in the background. By default, it is 10.</p><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment thus that Deployment will not be able to roll back.</p></div><h2 id="canary-deployment" tabindex="-1">Canary Deployment <a class="header-anchor" href="#canary-deployment" aria-label="Permalink to &quot;Canary Deployment&quot;">​</a></h2><p>If you want to roll out releases to a subset of users or servers using the Deployment, you can create multiple Deployments, one for each release, following the canary pattern described in <a href="https://kubernetes.io/docs/concepts/cluster-administration/manage-deployment/#canary-deployments" target="_blank" rel="noreferrer">managing resources</a>.</p><h2 id="writing-a-deployment-spec" tabindex="-1">Writing a Deployment Spec <a class="header-anchor" href="#writing-a-deployment-spec" aria-label="Permalink to &quot;Writing a Deployment Spec&quot;">​</a></h2><p>As with all other Kubernetes configs, a Deployment needs <code>.apiVersion</code>, <code>.kind</code>, and <code>.metadata</code> fields. For general information about working with config files, see <a href="https://kubernetes.io/docs/tasks/run-application/run-stateless-application-deployment/" target="_blank" rel="noreferrer">deploying applications</a>, configuring containers, and <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/object-management/" target="_blank" rel="noreferrer">using kubectl to manage resources</a> documents.</p><p>When the control plane creates new Pods for a Deployment, the <code>.metadata.name</code> of the Deployment is part of the basis for naming those Pods. The name of a Deployment must be a valid <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/names#dns-subdomain-names" target="_blank" rel="noreferrer">DNS subdomain</a> value, but this can produce unexpected results for the Pod hostnames. For best compatibility, the name should follow the more restrictive rules for a <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/names#dns-label-names" target="_blank" rel="noreferrer">DNS label</a>.</p><p>A Deployment also needs a <a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status" target="_blank" rel="noreferrer"><code>.spec</code> section</a>.</p><h3 id="pod-template" tabindex="-1">Pod Template <a class="header-anchor" href="#pod-template" aria-label="Permalink to &quot;Pod Template&quot;">​</a></h3><p>The <code>.spec.template</code> and <code>.spec.selector</code> are the only required fields of the <code>.spec</code>.</p><p>The <code>.spec.template</code> is a <a href="https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates" target="_blank" rel="noreferrer">Pod template</a>. It has exactly the same schema as a Pod, except it is nested and does not have an <code>apiVersion</code> or <code>kind</code>.</p><p>In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate labels and an appropriate restart policy. For labels, make sure not to overlap with other controllers. See <a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#selector" target="_blank" rel="noreferrer">selector</a>.</p><p>Only a <code>.spec.template.spec.restartPolicy</code> equal to <code>Always</code> is allowed, which is the default if not specified.</p><h3 id="replicas" tabindex="-1">Replicas <a class="header-anchor" href="#replicas" aria-label="Permalink to &quot;Replicas&quot;">​</a></h3><p><code>.spec.replicas</code> is an optional field that specifies the number of desired Pods. It defaults to 1.</p><p>Should you manually scale a Deployment, example via <code>kubectl scale deployment deployment --replicas=X</code>, and then you update that Deployment based on a manifest (for example: by running <code>kubectl apply -f deployment.yaml</code>), then applying that manifest overwrites the manual scaling that you previously did.</p><p>If a <a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/" target="_blank" rel="noreferrer">HorizontalPodAutoscaler</a> (or any similar API for horizontal scaling) is managing scaling for a Deployment, don&#39;t set <code>.spec.replicas</code>.</p><p>Instead, allow the Kubernetes control plane to manage the <code>.spec.replicas</code> field automatically.</p><h3 id="selector" tabindex="-1">Selector <a class="header-anchor" href="#selector" aria-label="Permalink to &quot;Selector&quot;">​</a></h3><p><code>.spec.selector</code> is a required field that specifies a <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/" target="_blank" rel="noreferrer">label selector</a> for the Pods targeted by this Deployment.</p><p><code>.spec.selector</code> must match <code>.spec.template.metadata.labels</code>, or it will be rejected by the API.</p><p>In API version <code>apps/v1</code>, <code>.spec.selector</code> and <code>.metadata.labels</code> do not default to <code>.spec.template.metadata.labels</code> if not set. So they must be set explicitly. Also note that <code>.spec.selector</code> is immutable after creation of the Deployment in <code>apps/v1</code>.</p><p>A Deployment may terminate Pods whose labels match the selector if their template is different from <code>.spec.template</code> or if the total number of such Pods exceeds <code>.spec.replicas</code>. It brings up new Pods with <code>.spec.template</code> if the number of Pods is less than the desired number.</p><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>You should not create other Pods whose labels match this selector, either directly, by creating another Deployment, or by creating another controller such as a ReplicaSet or a ReplicationController. If you do so, the first Deployment thinks that it created these other Pods. Kubernetes does not stop you from doing this.</p></div><p>If you have multiple controllers that have overlapping selectors, the controllers will fight with each other and won&#39;t behave correctly.</p><h3 id="strategy" tabindex="-1">Strategy <a class="header-anchor" href="#strategy" aria-label="Permalink to &quot;Strategy&quot;">​</a></h3><p><code>.spec.strategy</code> specifies the strategy used to replace old Pods by new ones. <code>.spec.strategy.type</code> can be &quot;Recreate&quot; or &quot;RollingUpdate&quot;. &quot;RollingUpdate&quot; is the default value.</p><h4 id="recreate-deployment" tabindex="-1">Recreate Deployment <a class="header-anchor" href="#recreate-deployment" aria-label="Permalink to &quot;Recreate Deployment&quot;">​</a></h4><p>All existing Pods are killed before new ones are created when <code>.spec.strategy.type==Recreate</code>.</p><div class="tip custom-block"><p class="custom-block-title">Note:</p><p>This will only guarantee Pod termination previous to creation for upgrades. If you upgrade a Deployment, all Pods of the old revision will be terminated immediately. Successful removal is awaited before any Pod of the new revision is created. If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the replacement will be created immediately (even if the old Pod is still in a Terminating state). If you need an &quot;at most&quot; guarantee for your Pods, you should consider using a <a href="https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/" target="_blank" rel="noreferrer">StatefulSet</a>.</p></div><h4 id="rolling-update-deployment" tabindex="-1">Rolling Update Deployment <a class="header-anchor" href="#rolling-update-deployment" aria-label="Permalink to &quot;Rolling Update Deployment&quot;">​</a></h4><p>The Deployment updates Pods in a rolling update fashion when <code>.spec.strategy.type==RollingUpdate</code>. You can specify <code>maxUnavailable</code> and <code>maxSurge</code> to control the rolling update process.</p><h5 id="max-unavailable" tabindex="-1">Max Unavailable <a class="header-anchor" href="#max-unavailable" aria-label="Permalink to &quot;Max Unavailable&quot;">​</a></h5><p><code>.spec.strategy.rollingUpdate.maxUnavailable</code> is an optional field that specifies the maximum number of Pods that can be unavailable during the update process. The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%). The absolute number is calculated from percentage by rounding down. The value cannot be 0 if <code>.spec.strategy.rollingUpdate.maxSurge</code> is 0. The default value is 25%.</p><p>For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired Pods immediately when the rolling update starts. Once new Pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available at all times during the update is at least 70% of the desired Pods.</p><h5 id="max-surge" tabindex="-1">Max Surge <a class="header-anchor" href="#max-surge" aria-label="Permalink to &quot;Max Surge&quot;">​</a></h5><p><code>.spec.strategy.rollingUpdate.maxSurge</code> is an optional field that specifies the maximum number of Pods that can be created over the desired number of Pods. The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%). The value cannot be 0 if <code>MaxUnavailable</code> is 0. The absolute number is calculated from the percentage by rounding up. The default value is 25%.</p><p>For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new Pods does not exceed 130% of desired Pods. Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the total number of Pods running at any time during the update is at most 130% of desired Pods.</p><h3 id="progress-deadline-seconds" tabindex="-1">Progress Deadline Seconds <a class="header-anchor" href="#progress-deadline-seconds" aria-label="Permalink to &quot;Progress Deadline Seconds&quot;">​</a></h3><p><code>.spec.progressDeadlineSeconds</code> is an optional field that specifies the number of seconds you want to wait for your Deployment to progress before the system reports back that the Deployment has <a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#failed-deployment" target="_blank" rel="noreferrer">failed progressing</a> - surfaced as a condition with <code>type: Progressing</code>, <code>status: &quot;False&quot;</code>. and <code>reason: ProgressDeadlineExceeded</code> in the status of the resource. The Deployment controller will keep retrying the Deployment. This defaults to 600. In the future, once automatic rollback will be implemented, the Deployment controller will roll back a Deployment as soon as it observes such a condition.</p><p>If specified, this field needs to be greater than <code>.spec.minReadySeconds</code>.</p><h3 id="min-ready-seconds" tabindex="-1">Min Ready Seconds <a class="header-anchor" href="#min-ready-seconds" aria-label="Permalink to &quot;Min Ready Seconds&quot;">​</a></h3><p><code>.spec.minReadySeconds</code> is an optional field that specifies the minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing, for it to be considered available. This defaults to 0 (the Pod will be considered available as soon as it is ready). To learn more about when a Pod is considered ready, see <a href="https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes" target="_blank" rel="noreferrer">Container Probes</a>.</p><h3 id="revision-history-limit" tabindex="-1">Revision History Limit <a class="header-anchor" href="#revision-history-limit" aria-label="Permalink to &quot;Revision History Limit&quot;">​</a></h3><p>A Deployment&#39;s revision history is stored in the ReplicaSets it controls.</p><p><code>.spec.revisionHistoryLimit</code> is an optional field that specifies the number of old ReplicaSets to retain to allow rollback. These old ReplicaSets consume resources in <code>etcd</code> and crowd the output of <code>kubectl get rs</code>. The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment. By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments.</p><p>More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up. In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.</p><h3 id="paused" tabindex="-1">Paused <a class="header-anchor" href="#paused" aria-label="Permalink to &quot;Paused&quot;">​</a></h3><p><code>.spec.paused</code> is an optional boolean field for pausing and resuming a Deployment. The only difference between a paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused Deployment will not trigger new rollouts as long as it is paused. A Deployment is not paused by default when it is created.</p><h2 id="what-s-next" tabindex="-1">What&#39;s next <a class="header-anchor" href="#what-s-next" aria-label="Permalink to &quot;What&#39;s next&quot;">​</a></h2><ul><li>Learn more about <a href="https://kubernetes.io/docs/concepts/workloads/pods" target="_blank" rel="noreferrer">Pods</a>.</li><li><a href="https://kubernetes.io/docs/tasks/run-application/run-stateless-application-deployment/" target="_blank" rel="noreferrer">Run a stateless application using a Deployment</a>.</li><li>Read the <a href="https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/deployment-v1/" target="_blank" rel="noreferrer">Deployment</a> to understand the Deployment API.</li><li>Read about <a href="https://kubernetes.io/docs/concepts/workloads/pods/disruptions/" target="_blank" rel="noreferrer">PodDisruptionBudget</a> and how you can use it to manage application availability during disruptions.</li><li>Use kubectl to <a href="https://kubernetes.io/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/" target="_blank" rel="noreferrer">create a Deployment</a>.</li></ul>`,178),p=[o];function t(c,i,r,d,y,u){return s(),a("div",null,p)}const m=e(l,[["render",t]]);export{g as __pageData,m as default};
