import{_ as s,o as n,c as a,Q as o}from"./chunks/framework.01af844e.js";const u=JSON.parse('{"title":"Validate node setup","description":"","frontmatter":{},"headers":[],"relativePath":"golang/k8s/get_started/best_practice/validate_node.md","filePath":"golang/k8s/get_started/best_practice/validate_node.md","lastUpdated":1693758126000}'),e={name:"golang/k8s/get_started/best_practice/validate_node.md"},l=o(`<h1 id="validate-node-setup" tabindex="-1">Validate node setup <a class="header-anchor" href="#validate-node-setup" aria-label="Permalink to &quot;Validate node setup&quot;">​</a></h1><h2 id="node-conformance-test" tabindex="-1">Node Conformance Test <a class="header-anchor" href="#node-conformance-test" aria-label="Permalink to &quot;Node Conformance Test&quot;">​</a></h2><p>Node conformance test is a containerized test framework that provides a system verification and functionality test for a node. The test validates whether the node meets the minimum requirements for Kubernetes; a node that passes the test is qualified to join a Kubernetes cluster.</p><h2 id="node-prerequisite" tabindex="-1">Node Prerequisite <a class="header-anchor" href="#node-prerequisite" aria-label="Permalink to &quot;Node Prerequisite&quot;">​</a></h2><p>To run node conformance test, a node must satisfy the same prerequisites as a standard Kubernetes node. At a minimum, the node should have the following daemons installed:</p><ul><li>Container Runtime (Docker)</li><li>Kubelet</li></ul><h2 id="running-node-conformance-test" tabindex="-1">Running Node Conformance Test <a class="header-anchor" href="#running-node-conformance-test" aria-label="Permalink to &quot;Running Node Conformance Test&quot;">​</a></h2><p>To run the node conformance test, perform the following steps:</p><ol><li><p>Work out the value of the <code>--kubeconfig</code> option for the kubelet; for example: <code>--kubeconfig=/var/lib/kubelet/config.yaml</code>. Because the test framework starts a local control plane to test the kubelet, use <code>http://localhost:8080</code> as the URL of the API server. There are some other kubelet command line parameters you may want to use:</p><ul><li><code>--cloud-provider</code>: If you are using <code>--cloud-provider=gce</code>, you should remove the flag to run the test.</li></ul></li><li><p>Run the node conformance test with command:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># $CONFIG_DIR is the pod manifest path of your Kubelet.</span></span>
<span class="line"><span style="color:#6A737D;"># $LOG_DIR is the test output path.</span></span>
<span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-it</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--privileged</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--net=host</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">-v </span><span style="color:#9ECBFF;">/:/rootfs</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;"> $CONFIG_DIR</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;">$CONFIG_DIR </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;"> $LOG_DIR</span><span style="color:#9ECBFF;">:/var/result</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">registry.k8s.io/node-test:0.2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># $CONFIG_DIR is the pod manifest path of your Kubelet.</span></span>
<span class="line"><span style="color:#6A737D;"># $LOG_DIR is the test output path.</span></span>
<span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-it</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--privileged</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--net=host</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">-v </span><span style="color:#032F62;">/:/rootfs</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;"> $CONFIG_DIR</span><span style="color:#032F62;">:</span><span style="color:#24292E;">$CONFIG_DIR </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;"> $LOG_DIR</span><span style="color:#032F62;">:/var/result</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">registry.k8s.io/node-test:0.2</span></span></code></pre></div></li></ol><h2 id="running-node-conformance-test-for-other-architectures" tabindex="-1">Running Node Conformance Test for Other Architectures <a class="header-anchor" href="#running-node-conformance-test-for-other-architectures" aria-label="Permalink to &quot;Running Node Conformance Test for Other Architectures&quot;">​</a></h2><p>Kubernetes also provides node conformance test docker images for other architectures:</p><table><thead><tr><th>Arch</th><th>Image</th></tr></thead><tbody><tr><td>amd64</td><td>node-test-amd64</td></tr><tr><td>arm</td><td>node-test-arm</td></tr><tr><td>arm64</td><td>node-test-arm64</td></tr></tbody></table><h2 id="running-selected-test" tabindex="-1">Running Selected Test <a class="header-anchor" href="#running-selected-test" aria-label="Permalink to &quot;Running Selected Test&quot;">​</a></h2><p>To run specific tests, overwrite the environment variable <code>FOCUS</code> with the regular expression of tests you want to run.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-it</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--privileged</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--net=host</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/:/rootfs:ro</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;"> $CONFIG_DIR</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;">$CONFIG_DIR </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;"> $LOG_DIR</span><span style="color:#9ECBFF;">:/var/result</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">FOCUS=MirrorPod</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\ </span><span style="color:#9ECBFF;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Only</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">MirrorPod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">registry.k8s.io/node-test:0.2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-it</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--privileged</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--net=host</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/:/rootfs:ro</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;"> $CONFIG_DIR</span><span style="color:#032F62;">:</span><span style="color:#24292E;">$CONFIG_DIR </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;"> $LOG_DIR</span><span style="color:#032F62;">:/var/result</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">FOCUS=MirrorPod</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\ </span><span style="color:#032F62;">#</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Only</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">MirrorPod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">registry.k8s.io/node-test:0.2</span></span></code></pre></div><p>To skip specific tests, overwrite the environment variable <code>SKIP</code> with the regular expression of tests you want to skip.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-it</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--privileged</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--net=host</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/:/rootfs:ro</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;"> $CONFIG_DIR</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;">$CONFIG_DIR </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;"> $LOG_DIR</span><span style="color:#9ECBFF;">:/var/result</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">SKIP=MirrorPod</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\ </span><span style="color:#9ECBFF;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">all</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">conformance</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tests</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">but</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">skip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">MirrorPod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">registry.k8s.io/node-test:0.2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-it</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--privileged</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--net=host</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/:/rootfs:ro</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;"> $CONFIG_DIR</span><span style="color:#032F62;">:</span><span style="color:#24292E;">$CONFIG_DIR </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;"> $LOG_DIR</span><span style="color:#032F62;">:/var/result</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">SKIP=MirrorPod</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\ </span><span style="color:#032F62;">#</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">all</span><span style="color:#24292E;"> </span><span style="color:#032F62;">conformance</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tests</span><span style="color:#24292E;"> </span><span style="color:#032F62;">but</span><span style="color:#24292E;"> </span><span style="color:#032F62;">skip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">MirrorPod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">registry.k8s.io/node-test:0.2</span></span></code></pre></div><p>Node conformance test is a containerized version of <a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-node/e2e-node-tests.md" target="_blank" rel="noreferrer">node e2e test</a>. By default, it runs all conformance tests.</p><p>Theoretically, you can run any node e2e test if you configure the container and mount required volumes properly. But it is strongly recommended to only run conformance test, because it requires much more complex configuration to run non-conformance test.</p><h2 id="caveats" tabindex="-1">Caveats <a class="header-anchor" href="#caveats" aria-label="Permalink to &quot;Caveats&quot;">​</a></h2><ul><li>The test leaves some docker images on the node, including the node conformance test image and images of containers used in the functionality test.</li><li>The test leaves dead containers on the node. These containers are created during the functionality test.</li></ul>`,21),t=[l];function p(r,c,y,i,E,d){return n(),a("div",null,t)}const h=s(e,[["render",p]]);export{u as __pageData,h as default};
