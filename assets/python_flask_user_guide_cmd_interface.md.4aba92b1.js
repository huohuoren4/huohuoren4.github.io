import{_ as s,o as a,c as n,X as e}from"./chunks/framework.b5656a4e.js";const l="/assets/PyCharm_run_configuration.dd5abd26.png",F=JSON.parse('{"title":"Command Line Interface","description":"","frontmatter":{},"headers":[],"relativePath":"python/flask/user_guide/cmd_interface.md","filePath":"python/flask/user_guide/cmd_interface.md","lastUpdated":1691455424000}'),o={name:"python/flask/user_guide/cmd_interface.md"},p=e(`<h1 id="command-line-interface" tabindex="-1">Command Line Interface <a class="header-anchor" href="#command-line-interface" aria-label="Permalink to &quot;Command Line Interface&quot;">​</a></h1><p>Installing Flask installs the <code>flask</code> script, a <a href="https://click.palletsprojects.com/" target="_blank" rel="noreferrer">Click</a> command line interface, in your virtualenv. Executed from the terminal, this script gives access to built-in, extension, and application-defined commands. The <code>--help</code> option will give more information about any commands and options.</p><h2 id="application-discovery" tabindex="-1">Application Discovery <a class="header-anchor" href="#application-discovery" aria-label="Permalink to &quot;Application Discovery&quot;">​</a></h2><p>The <code>flask</code> command is installed by Flask, not your application; it must be told where to find your application in order to use it. The <code>--app</code> option is used to specify how to load the application.</p><p>While <code>--app</code> supports a variety of options for specifying your application, most use cases should be simple. Here are the typical values:</p><ul><li><p>(nothing)</p><p>The name “app” or “wsgi” is imported (as a “.py” file, or package), automatically detecting an app (app or application) or factory (create_app or make_app).</p></li><li><p><code>--app hello</code></p><p>The given name is imported, automatically detecting an app (app or application) or factory (create_app or make_app).</p></li></ul><p><code>--app</code> has three parts: an optional path that sets the current working directory, a Python file or dotted import path, and an optional variable name of the instance or factory. If the name is a factory, it can optionally be followed by arguments in parentheses. The following values demonstrate these parts:</p><ul><li><p><code>--app src/hello</code></p><p>Sets the current working directory to src then imports hello.</p></li><li><p><code>--app hello.web</code></p><p>Imports the path hello.web.</p></li><li><p><code>--app hello:app2</code></p><p>Uses the app2 Flask instance in hello.</p></li><li><p><code>--app &#39;hello:create_app(&quot;dev&quot;)&#39;</code></p><p>The create_app factory in hello is called with the string &#39;dev&#39; as the argument.</p></li></ul><p>If <code>--app</code> is not set, the command will try to import “app” or “wsgi” (as a “.py” file, or package) and try to detect an application instance or factory.</p><p>Within the given import, the command looks for an application instance named <code>app</code> or <code>application</code>, then any application instance. If no instance is found, the command looks for a factory function named <code>create_app</code> or <code>make_app</code> that returns an instance.</p><p>If parentheses follow the factory name, their contents are parsed as Python literals and passed as arguments and keyword arguments to the function. This means that strings must still be in quotes.</p><h2 id="run-the-development-server" tabindex="-1">Run the Development Server <a class="header-anchor" href="#run-the-development-server" aria-label="Permalink to &quot;Run the Development Server&quot;">​</a></h2><p>The <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.cli.run_command" target="_blank" rel="noreferrer">run</a> command will start the development server. It replaces the <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.Flask.run" target="_blank" rel="noreferrer">Flask.run()</a> method in most cases.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--app</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Serving</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">app</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Running</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://127.0.0.1:5000/</span><span style="color:#A6ACCD;"> (Press </span><span style="color:#C3E88D;">CTRL+C</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">quit</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Warning:</p><p>Do not use this command to run your application in production. Only use the development server during development. The development server is provided for convenience, but is not designed to be particularly secure, stable, or efficient. See Deploying to Production for how to run in production.</p></div><p>If another program is already using port 5000, you’ll see <code>OSError: [Errno 98]</code> or <code>OSError: [WinError 10013]</code> when the server tries to start. See <a href="https://flask.palletsprojects.com/en/2.3.x/server/#address-already-in-use" target="_blank" rel="noreferrer">Address already in use</a> for how to handle that.</p><h3 id="debug-mode" tabindex="-1">Debug Mode <a class="header-anchor" href="#debug-mode" aria-label="Permalink to &quot;Debug Mode&quot;">​</a></h3><p>In debug mode, the <code>flask run</code> command will enable the interactive debugger and the reloader by default, and make errors easier to see and debug. To enable debug mode, use the <code>--debug</code> option.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--app</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--debug</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Serving</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">app</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Debug</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mode:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Running</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://127.0.0.1:5000/</span><span style="color:#A6ACCD;"> (Press </span><span style="color:#C3E88D;">CTRL+C</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">quit</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Restarting</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">inotify</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reloader</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Debugger</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">active!</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Debugger</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PIN:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">223</span><span style="color:#C3E88D;">-456-919</span></span></code></pre></div><p>The <code>--debug</code> option can also be passed to the top level <code>flask</code> command to enable debug mode for any command. The following two <code>run</code> calls are equivalent.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--app</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--debug</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span></span>
<span class="line"><span style="color:#FFCB6B;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--app</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--debug</span></span></code></pre></div><h3 id="watch-and-ignore-files-with-the-reloader" tabindex="-1">Watch and Ignore Files with the Reloader <a class="header-anchor" href="#watch-and-ignore-files-with-the-reloader" aria-label="Permalink to &quot;Watch and Ignore Files with the Reloader&quot;">​</a></h3><p>When using debug mode, the reloader will trigger whenever your Python code or imported modules change. The reloader can watch additional files with the <code>--extra-files</code> option. Multiple paths are separated with <code>:</code>, or <code>;</code> on Windows.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--extra-files</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">file1:dirA/file2:dirB/</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Running</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://127.0.0.1:8000/</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Detected</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">change</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/path/to/file1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reloading</span></span></code></pre></div><p>The reloader can also ignore files using <a href="https://docs.python.org/3/library/fnmatch.html#module-fnmatch" target="_blank" rel="noreferrer">fnmatch</a> patterns with the <code>--exclude-patterns</code> option. Multiple patterns are separated with <code>:</code>, or <code>;</code> on Windows.</p><h2 id="open-a-shell" tabindex="-1">Open a Shell <a class="header-anchor" href="#open-a-shell" aria-label="Permalink to &quot;Open a Shell&quot;">​</a></h2><p>To explore the data in your application, you can start an interactive Python shell with the <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.cli.shell_command" target="_blank" rel="noreferrer">shell</a> command. An application context will be active, and the app instance will be imported.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">shell</span></span>
<span class="line"><span style="color:#FFCB6B;">Python</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3.10</span><span style="color:#C3E88D;">.0</span><span style="color:#A6ACCD;"> (default, </span><span style="color:#C3E88D;">Oct</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">27</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2021</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">06</span><span style="color:#C3E88D;">:59:51</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">GCC </span><span style="color:#F78C6C;">11.1</span><span style="color:#A6ACCD;">.0</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> on linux</span></span>
<span class="line"><span style="color:#FFCB6B;">App:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">example</span><span style="color:#A6ACCD;"> [production]</span></span>
<span class="line"><span style="color:#FFCB6B;">Instance:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/home/david/Projects/pallets/flask/instance</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;&gt;&gt;</span></span></code></pre></div><p>Use <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.Flask.shell_context_processor" target="_blank" rel="noreferrer">shell_context_processor()</a> to add other automatic imports.</p><h2 id="environment-variables-from-dotenv" tabindex="-1">Environment Variables From dotenv <a class="header-anchor" href="#environment-variables-from-dotenv" aria-label="Permalink to &quot;Environment Variables From dotenv&quot;">​</a></h2><p>The <code>flask</code> command supports setting any option for any command with environment variables. The variables are named like <code>FLASK_OPTION</code> or <code>FLASK_COMMAND_OPTION</code>, for example <code>FLASK_APP</code> or <code>FLASK_RUN_PORT</code>.</p><p>Rather than passing options every time you run a command, or environment variables every time you open a new terminal, you can use Flask’s dotenv support to set environment variables automatically.</p><p>If <a href="https://github.com/theskumar/python-dotenv#readme" target="_blank" rel="noreferrer">python-dotenv</a> is installed, running the <code>flask</code> command will set environment variables defined in the files <code>.env</code> and <code>.flaskenv</code>. You can also specify an extra file to load with the <code>--env-file</code> option. Dotenv files can be used to avoid having to set <code>--app</code> or <code>FLASK_APP</code> manually, and to set configuration using environment variables similar to how some deployment services work.</p><p>Variables set on the command line are used over those set in <code>.env</code>, which are used over those set in <code>.flaskenv</code>. <code>.flaskenv</code> should be used for public variables, such as <code>FLASK_APP</code>, while <code>.env</code> should not be committed to your repository so that it can set private variables.</p><p>Directories are scanned upwards from the directory you call <code>flask</code> from to locate the files.</p><p>The files are only loaded by the <code>flask</code> command or calling <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.Flask.run" target="_blank" rel="noreferrer">run()</a>. If you would like to load these files when running in production, you should call <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.cli.load_dotenv" target="_blank" rel="noreferrer">load_dotenv()</a> manually.</p><h3 id="setting-command-options" tabindex="-1">Setting Command Options <a class="header-anchor" href="#setting-command-options" aria-label="Permalink to &quot;Setting Command Options&quot;">​</a></h3><p>Click is configured to load default values for command options from environment variables. The variables use the pattern <code>FLASK_COMMAND_OPTION</code>. For example, to set the port for the run command, instead of <code>flask run --port 8000</code>:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-2ijZT" id="tab-ylgbYkg" checked="checked"><label for="tab-ylgbYkg">Bash</label><input type="radio" name="group-2ijZT" id="tab-HH4PM1X"><label for="tab-HH4PM1X">Fish</label><input type="radio" name="group-2ijZT" id="tab-ictL0PL"><label for="tab-ictL0PL">CMD</label><input type="radio" name="group-2ijZT" id="tab-QMrYnYQ"><label for="tab-QMrYnYQ">Powershell</label></div><div class="blocks"><div class="language-shell active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FLASK_RUN_PORT=</span><span style="color:#F78C6C;">8000</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Running</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://127.0.0.1:8000/</span></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FLASK_RUN_PORT</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8000</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Running</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://127.0.0.1:8000/</span></span></code></pre></div><div class="language-bat"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;"> FLASK_RUN_PORT</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">8000</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> flask run</span></span>
<span class="line"><span style="color:#A6ACCD;"> * Running on http://127.0.0.1:8000/</span></span></code></pre></div><div class="language-bat"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> $env:FLASK_RUN_PORT = </span><span style="color:#F78C6C;">8000</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> flask run</span></span>
<span class="line"><span style="color:#A6ACCD;"> * Running on http://127.0.0.1:8000/</span></span></code></pre></div></div></div><p>These can be added to the <code>.flaskenv</code> file just like <code>FLASK_APP</code> to control default command options.</p><h3 id="disable-dotenv" tabindex="-1">Disable dotenv <a class="header-anchor" href="#disable-dotenv" aria-label="Permalink to &quot;Disable dotenv&quot;">​</a></h3><p>The <code>flask</code> command will show a message if it detects dotenv files but python-dotenv is not installed.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Tip:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">There</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">are</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.env</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">files</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">present.</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Do</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pip install python-dotenv</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">use</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">them.</span></span></code></pre></div><p>You can tell Flask not to load dotenv files even when python-dotenv is installed by setting the <code>FLASK_SKIP_DOTENV</code> environment variable. This can be useful if you want to load them manually, or if you’re using a project runner that loads them already. Keep in mind that the environment variables must be set before the app loads or it won’t configure as expected.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-vLSwA" id="tab-3ywGQZX" checked="checked"><label for="tab-3ywGQZX">Bash</label><input type="radio" name="group-vLSwA" id="tab-V7z-ziF"><label for="tab-V7z-ziF">Fish</label><input type="radio" name="group-vLSwA" id="tab-iBp-T2z"><label for="tab-iBp-T2z">CMD</label><input type="radio" name="group-vLSwA" id="tab-tNbENL_"><label for="tab-tNbENL_">Powershell</label></div><div class="blocks"><div class="language-shell active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FLASK_SKIP_DOTENV=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FLASK_SKIP_DOTENV</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span></span></code></pre></div><div class="language-bat"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;"> FLASK_SKIP_DOTENV</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> flask run</span></span></code></pre></div><div class="language-bat"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> $env:FLASK_SKIP_DOTENV = </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> flask run</span></span></code></pre></div></div></div><h2 id="environment-variables-from-virtualenv" tabindex="-1">Environment Variables From virtualenv <a class="header-anchor" href="#environment-variables-from-virtualenv" aria-label="Permalink to &quot;Environment Variables From virtualenv&quot;">​</a></h2><p>If you do not want to install dotenv support, you can still set environment variables by adding them to the end of the virtualenv’s <code>activate</code> script. Activating the virtualenv will set the variables.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-63F3t" id="tab-OuNdkYO" checked="checked"><label for="tab-OuNdkYO">Bash</label><input type="radio" name="group-63F3t" id="tab-OUKEy70"><label for="tab-OUKEy70">Fish</label><input type="radio" name="group-63F3t" id="tab-FbJFV0F"><label for="tab-FbJFV0F">CMD</label><input type="radio" name="group-63F3t" id="tab-LCl4Tdx"><label for="tab-LCl4Tdx">Powershell</label></div><div class="blocks"><div class="language-shell active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Unix</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Bash,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">.venv/bin/activate</span><span style="color:#89DDFF;">\`</span><span style="color:#82AAFF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FLASK_APP=hello</span></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Fish,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">.venv/bin/activate.fish</span><span style="color:#89DDFF;">\`</span><span style="color:#82AAFF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FLASK_APP</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello</span></span></code></pre></div><div class="language-bat"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Windows CMD, \`.venv\\Scripts\\activate.bat\`:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;"> FLASK_APP</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">hello</span></span></code></pre></div><div class="language-bat"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Windows Powershell, \`.venv\\Scripts\\activate.ps1\`:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> $env:FLASK_APP = </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div></div></div><p>It is preferred to use dotenv support over this, since <code>.flaskenv</code> can be committed to the repository so that it works automatically wherever the project is checked out.</p><h2 id="custom-commands" tabindex="-1">Custom Commands <a class="header-anchor" href="#custom-commands" aria-label="Permalink to &quot;Custom Commands&quot;">​</a></h2><p>The <code>flask</code> command is implemented using <a href="https://click.palletsprojects.com/" target="_blank" rel="noreferrer">Click</a>. See that project’s documentation for full information about writing commands.</p><p>This example adds the command <code>create-user</code> that takes the argument <code>name</code>.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> click</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> flask </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Flask</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Flask</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">__name__</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">command</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">create-user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">click</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">argument</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">create_user</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create-user</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">admin</span></span></code></pre></div><p>This example adds the same command, but as <code>user create</code>, a command in a group. This is useful if you want to organize multiple related commands.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> click</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> flask </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Flask</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> flask</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cli </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> AppGroup</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Flask</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">__name__</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">user_cli </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">AppGroup</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">user_cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">command</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">create</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">click</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">argument</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">create_user</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_command</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">user_cli</span><span style="color:#89DDFF;">)</span></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">user</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">demo</span></span></code></pre></div><p>See <a href="https://flask.palletsprojects.com/en/2.3.x/testing/#testing-cli" target="_blank" rel="noreferrer">Running Commands with the CLI Runner</a> for an overview of how to test your custom commands.</p><h3 id="registering-commands-with-blueprints" tabindex="-1">Registering Commands with Blueprints <a class="header-anchor" href="#registering-commands-with-blueprints" aria-label="Permalink to &quot;Registering Commands with Blueprints&quot;">​</a></h3><p>If your application uses blueprints, you can optionally register CLI commands directly onto them. When your blueprint is registered onto your application, the associated commands will be available to the <code>flask</code> command. By default, those commands will be nested in a group matching the name of the blueprint.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> flask </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Blueprint</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">bp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Blueprint</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">students</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">__name__</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">bp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">command</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">create</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">click</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">argument</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">create</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">register_blueprint</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">bp</span><span style="color:#89DDFF;">)</span></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">students</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">alice</span></span></code></pre></div><p>You can alter the group name by specifying the <code>cli_group</code> parameter when creating the <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.Blueprint" target="_blank" rel="noreferrer">Blueprint</a> object, or later with <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.Flask.register_blueprint" target="_blank" rel="noreferrer">app.register_blueprint(bp, cli_group=&#39;...&#39;)</a>. The following are equivalent:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">bp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Blueprint</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">students</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">__name__</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">cli_group</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">other</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># or</span></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">register_blueprint</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">bp</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">cli_group</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">other</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">other</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">alice</span></span></code></pre></div><p>Specifying <code>cli_group=None</code> will remove the nesting and merge the commands directly to the application’s level:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">bp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Blueprint</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">students</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">__name__</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">cli_group</span><span style="color:#89DDFF;">=None)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># or</span></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">register_blueprint</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">bp</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">cli_group</span><span style="color:#89DDFF;">=None)</span></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flask</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">alice</span></span></code></pre></div><h3 id="application-context" tabindex="-1">Application Context <a class="header-anchor" href="#application-context" aria-label="Permalink to &quot;Application Context&quot;">​</a></h3><p>Commands added using the Flask app’s <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.Flask.cli" target="_blank" rel="noreferrer">cli</a> or <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.cli.FlaskGroup" target="_blank" rel="noreferrer">FlaskGroup</a> <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.cli.AppGroup.command" target="_blank" rel="noreferrer">command()</a> decorator will be executed with an application context pushed, so your custom commands and parameters have access to the app and its configuration. The <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.cli.with_appcontext" target="_blank" rel="noreferrer">with_appcontext()</a> decorator can be used to get the same behavior, but is not needed in most cases.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> click</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> flask</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cli </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> with_appcontext</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">click</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">command</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">with_appcontext</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">do_work</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_command</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">do_work</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="plugins" tabindex="-1">Plugins <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;Plugins&quot;">​</a></h2><p>Flask will automatically load commands specified in the <code>flask.commands</code> entry point. This is useful for extensions that want to add commands when they are installed. Entry points are specified in <code>pyproject.toml</code>:</p><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">project</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">entry-points</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">&quot;flask</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">commands&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">my-command </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my_extension.commands:cli</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>Inside <code>my_extension/commands.py</code> you can then export a Click object:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> click</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">click</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">command</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cli</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span></code></pre></div><p>Once that package is installed in the same virtualenv as your Flask project, you can run <code>flask my-command</code> to invoke the command.</p><h2 id="custom-scripts" tabindex="-1">Custom Scripts <a class="header-anchor" href="#custom-scripts" aria-label="Permalink to &quot;Custom Scripts&quot;">​</a></h2><p>When you are using the app factory pattern, it may be more convenient to define your own Click script. Instead of using <code>--app</code> and letting Flask load your application, you can create your own Click object and export it as a <a href="https://packaging.python.org/tutorials/packaging-projects/#console-scripts" target="_blank" rel="noreferrer">console script</a> entry point.</p><p>Create an instance of <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.cli.FlaskGroup" target="_blank" rel="noreferrer">FlaskGroup</a> and pass it the factory:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> click</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> flask </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Flask</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> flask</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cli </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> FlaskGroup</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">create_app</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Flask</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">wiki</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># other setup</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">click</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">group</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">cls</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">FlaskGroup</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">create_app</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">create_app</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cli</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Management script for the Wiki application.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span></code></pre></div><p>Define the entry point in <code>pyproject.toml</code>:</p><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">project</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">scripts</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">wiki </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wiki:cli</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>Install the application in the virtualenv in editable mode and the custom script is available. Note that you don’t need to set <code>--app</code>.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">wiki</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Errors in Custom Scripts</p><p>When using a custom script, if you introduce an error in your module-level code, the reloader will fail because it can no longer load the entry point.</p><p>The <code>flask</code> command, being separate from your code, does not have this issue and is recommended in most cases.</p></div><h2 id="pycharm-integration" tabindex="-1">PyCharm Integration <a class="header-anchor" href="#pycharm-integration" aria-label="Permalink to &quot;PyCharm Integration&quot;">​</a></h2><p>PyCharm Professional provides a special Flask run configuration to run the development server. For the Community Edition, and for other commands besides <code>run</code>, you need to create a custom run configuration. These instructions should be similar for any other IDE you use.</p><p>In PyCharm, with your project open, click on <code>Run</code> from the menu bar and go to <code>Edit Configurations</code>. You’ll see a screen similar to this:</p><p><img src="`+l+'" alt="PyCharm_run_configuration"></p><p>Once you create a configuration for the <code>flask run</code>, you can copy and change it to call any other command.</p><p>Click the <code>+ (Add New Configuration)</code> button and select <code>Python</code>. Give the configuration a name such as “flask run”.</p><p>Click the <code>Script path</code> dropdown and change it to <code>Module name</code>, then input <code>flask</code>.</p><p>The <code>Parameters</code> field is set to the CLI command to execute along with any arguments. This example uses <code>--app hello run --debug</code>, which will run the development server in debug mode. <code>--app hello</code> should be the import or file with your Flask app.</p><p>If you installed your project as a package in your virtualenv, you may uncheck the <code>PYTHONPATH</code> options. This will more accurately match how you deploy later.</p><p>Click <code>OK</code> to save and close the configuration. Select the configuration in the main PyCharm window and click the play button next to it to run the server.</p><p>Now that you have a configuration for <code>flask run</code>, you can copy that configuration and change the <code>Parameters</code> argument to run a different CLI command.</p>',97),t=[p];function c(r,i,y,C,d,D){return a(),n("div",null,t)}const h=s(o,[["render",c]]);export{F as __pageData,h as default};
