import{_ as e,o as a,c as n,X as t}from"./chunks/framework.b5656a4e.js";const m=JSON.parse('{"title":"Warnings","description":"","frontmatter":{},"headers":[],"relativePath":"python/pytest/reference_guides/api_reference/warnings.md","filePath":"python/pytest/reference_guides/api_reference/warnings.md","lastUpdated":1692620003000}'),s={name:"python/pytest/reference_guides/api_reference/warnings.md"},r=t('<h1 id="warnings" tabindex="-1">Warnings <a class="header-anchor" href="#warnings" aria-label="Permalink to &quot;Warnings&quot;">​</a></h1><p>Custom warnings generated in some situations such as improper usage or deprecated features.</p><h2 id="class-pytestwarning" tabindex="-1"><code>class</code> PytestWarning <a class="header-anchor" href="#class-pytestwarning" aria-label="Permalink to &quot;`class` PytestWarning&quot;">​</a></h2><p><em>Bases</em>: <code>UserWarning</code></p><p>Base class for all warnings emitted by pytest.</p><h2 id="class-pytestassertrewritewarning" tabindex="-1"><code>class</code> PytestAssertRewriteWarning <a class="header-anchor" href="#class-pytestassertrewritewarning" aria-label="Permalink to &quot;`class` PytestAssertRewriteWarning&quot;">​</a></h2><p><em>Bases</em>: <code>PytestWarning</code></p><p>Warning emitted by the pytest assert rewrite module.</p><h2 id="class-pytestcachewarning" tabindex="-1"><code>class</code> PytestCacheWarning <a class="header-anchor" href="#class-pytestcachewarning" aria-label="Permalink to &quot;`class` PytestCacheWarning&quot;">​</a></h2><p><em>Bases</em>: <code>PytestWarning</code></p><p>Warning emitted by the cache plugin in various situations.</p><h2 id="class-pytestcollectionwarning" tabindex="-1"><code>class</code> PytestCollectionWarning <a class="header-anchor" href="#class-pytestcollectionwarning" aria-label="Permalink to &quot;`class` PytestCollectionWarning&quot;">​</a></h2><p><em>Bases</em>: <code>PytestWarning</code></p><p>Warning emitted when pytest is not able to collect a file or symbol in a module.</p><h2 id="class-pytestconfigwarning" tabindex="-1"><code>class</code> PytestConfigWarning <a class="header-anchor" href="#class-pytestconfigwarning" aria-label="Permalink to &quot;`class` PytestConfigWarning&quot;">​</a></h2><p><em>Bases</em>: <code>PytestWarning</code></p><p>Warning emitted for configuration issues.</p><h2 id="class-pytestdeprecationwarning" tabindex="-1"><code>class</code> PytestDeprecationWarning <a class="header-anchor" href="#class-pytestdeprecationwarning" aria-label="Permalink to &quot;`class` PytestDeprecationWarning&quot;">​</a></h2><p><em>Bases</em>: <code>PytestWarning</code>, <code>DeprecationWarning</code></p><p>Warning class for features that will be removed in a future version.</p><h2 id="class-pytestexperimentalapiwarning" tabindex="-1"><code>class</code> PytestExperimentalApiWarning <a class="header-anchor" href="#class-pytestexperimentalapiwarning" aria-label="Permalink to &quot;`class` PytestExperimentalApiWarning&quot;">​</a></h2><p><em>Bases</em>: <code>PytestWarning</code>, <code>FutureWarning</code></p><p>Warning category used to denote experiments in pytest.</p><p>Use sparingly as the API might change or even be removed completely in a future version.</p><h2 id="class-pytestreturnnotnonewarning" tabindex="-1"><code>class</code> PytestReturnNotNoneWarning <a class="header-anchor" href="#class-pytestreturnnotnonewarning" aria-label="Permalink to &quot;`class` PytestReturnNotNoneWarning&quot;">​</a></h2><p><em>Bases</em>: <code>PytestRemovedIn8Warning</code></p><p>Warning emitted when a test function is returning value other than None.</p><h2 id="class-pytestremovedin8warning" tabindex="-1"><code>class</code> PytestRemovedIn8Warning <a class="header-anchor" href="#class-pytestremovedin8warning" aria-label="Permalink to &quot;`class` PytestRemovedIn8Warning&quot;">​</a></h2><p><em>Bases</em>: <code>PytestDeprecationWarning</code></p><p>Warning class for features that will be removed in pytest 8.</p><h2 id="class-pytestremovedin9warning" tabindex="-1"><code>class</code> PytestRemovedIn9Warning <a class="header-anchor" href="#class-pytestremovedin9warning" aria-label="Permalink to &quot;`class` PytestRemovedIn9Warning&quot;">​</a></h2><p><em>Bases</em>: <code>PytestDeprecationWarning</code></p><p>Warning class for features that will be removed in pytest 9.</p><h2 id="class-pytestunhandledcoroutinewarning" tabindex="-1"><code>class</code> PytestUnhandledCoroutineWarning <a class="header-anchor" href="#class-pytestunhandledcoroutinewarning" aria-label="Permalink to &quot;`class` PytestUnhandledCoroutineWarning&quot;">​</a></h2><p><em>Bases</em>: <code>PytestReturnNotNoneWarning</code></p><p>Warning emitted for an unhandled coroutine.</p><p>A coroutine was encountered when collecting test functions, but was not handled by any async-aware plugin. Coroutine test functions are not natively supported.</p><h2 id="class-pytestunknownmarkwarning" tabindex="-1"><code>class</code> PytestUnknownMarkWarning <a class="header-anchor" href="#class-pytestunknownmarkwarning" aria-label="Permalink to &quot;`class` PytestUnknownMarkWarning&quot;">​</a></h2><p><em>Bases</em>: <code>PytestWarning</code></p><p>Warning emitted on use of unknown markers.</p><p>See <a href="/python/pytest/how_to_guides/mark#how-to-mark-test-functions-with-attributes">How to mark test functions with attributes</a> for details.</p><h2 id="class-pytestunraisableexceptionwarning" tabindex="-1"><code>class</code> PytestUnraisableExceptionWarning <a class="header-anchor" href="#class-pytestunraisableexceptionwarning" aria-label="Permalink to &quot;`class` PytestUnraisableExceptionWarning&quot;">​</a></h2><p><em>Bases</em>: <code>PytestWarning</code></p><p>An unraisable exception was reported.</p><p>Unraisable exceptions are exceptions raised in <code>__del__</code> implementations and similar situations when the exception cannot be raised as normal.</p><h2 id="class-pytestunhandledthreadexceptionwarning" tabindex="-1"><code>class</code> PytestUnhandledThreadExceptionWarning <a class="header-anchor" href="#class-pytestunhandledthreadexceptionwarning" aria-label="Permalink to &quot;`class` PytestUnhandledThreadExceptionWarning&quot;">​</a></h2><p><em>Bases</em>: <code>PytestWarning</code></p><p>An unhandled exception occurred in a Thread.</p><p>Such exceptions don’t propagate normally.</p><p>Consult the <a href="/python/pytest/how_to_guides/warning#internal-pytest-warnings">Internal pytest warnings</a> section in the documentation for more information.</p>',50),i=[r];function o(c,d,l,p,h,g){return a(),n("div",null,i)}const y=e(s,[["render",o]]);export{m as __pageData,y as default};
