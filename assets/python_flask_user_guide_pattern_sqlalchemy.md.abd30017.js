import{_ as s,o as a,c as n,X as l}from"./chunks/framework.b5656a4e.js";const C=JSON.parse('{"title":"SQLAlchemy in Flask","description":"","frontmatter":{},"headers":[],"relativePath":"python/flask/user_guide/pattern/sqlalchemy.md","filePath":"python/flask/user_guide/pattern/sqlalchemy.md","lastUpdated":1693404008000}'),o={name:"python/flask/user_guide/pattern/sqlalchemy.md"},p=l(`<h1 id="sqlalchemy-in-flask" tabindex="-1">SQLAlchemy in Flask <a class="header-anchor" href="#sqlalchemy-in-flask" aria-label="Permalink to &quot;SQLAlchemy in Flask {#sqlalchemy-in-flask}&quot;">​</a></h1><p>Many people prefer <a href="https://www.sqlalchemy.org/" target="_blank" rel="noreferrer">SQLAlchemy</a> for database access. In this case it’s encouraged to use a package instead of a module for your flask application and drop the models into a separate module (<a href="/python/flask/user_guide/pattern/large_app#large-applications-as-packages">Large Applications as Packages</a>). While that is not necessary, it makes a lot of sense.</p><p>There are four very common ways to use SQLAlchemy. I will outline each of them here:</p><h2 id="flask-sqlalchemy-extension" tabindex="-1">Flask-SQLAlchemy Extension <a class="header-anchor" href="#flask-sqlalchemy-extension" aria-label="Permalink to &quot;Flask-SQLAlchemy Extension {#flask-sqlalchemy-extension}&quot;">​</a></h2><p>Because SQLAlchemy is a common database abstraction layer and object relational mapper that requires a little bit of configuration effort, there is a Flask extension that handles that for you. This is recommended if you want to get started quickly.</p><p>You can download <a href="https://flask-sqlalchemy.palletsprojects.com/" target="_blank" rel="noreferrer">Flask-SQLAlchemy</a> from <a href="https://pypi.org/project/Flask-SQLAlchemy/" target="_blank" rel="noreferrer">PyPI</a>.</p><h2 id="declarative" tabindex="-1">Declarative <a class="header-anchor" href="#declarative" aria-label="Permalink to &quot;Declarative {#declarative}&quot;">​</a></h2><p>The declarative extension in SQLAlchemy is the most recent method of using SQLAlchemy. It allows you to define tables and models in one go, similar to how Django works. In addition to the following text I recommend the official documentation on the <a href="https://docs.sqlalchemy.org/en/latest/orm/extensions/declarative/" target="_blank" rel="noreferrer">declarative</a> extension.</p><p>Here’s the example <code>database.py</code> module for your application:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> sqlalchemy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> create_engine</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> sqlalchemy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">orm </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> scoped_session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sessionmaker</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> declarative_base</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">engine </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">create_engine</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sqlite:////tmp/test.db</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">db_session </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">scoped_session</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">sessionmaker</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">autocommit</span><span style="color:#89DDFF;">=False,</span></span>
<span class="line"><span style="color:#82AAFF;">                                         </span><span style="color:#A6ACCD;font-style:italic;">autoflush</span><span style="color:#89DDFF;">=False,</span></span>
<span class="line"><span style="color:#82AAFF;">                                         </span><span style="color:#A6ACCD;font-style:italic;">bind</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">engine</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">Base </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">declarative_base</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">Base</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> db_session</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">query_property</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">init_db</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># import all modules here that might define models so that</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># they will be registered properly on the metadata.  Otherwise</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># you will have to import them first before calling init_db()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> yourapplication</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">models</span></span>
<span class="line"><span style="color:#A6ACCD;">    Base</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metadata</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create_all</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">bind</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">engine</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>To define your models, just subclass the <code>Base</code> class that was created by the code above. If you are wondering why we don’t have to care about threads here (like we did in the SQLite3 example above with the <code>g</code> object): that’s because SQLAlchemy does that for us already with the <code>scoped_session</code>.</p><p>To use SQLAlchemy in a declarative way with your application, you just have to put the following code into your application module. Flask will automatically remove database sessions at the end of the request or when the application shuts down:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> yourapplication</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">database </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> db_session</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">teardown_appcontext</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">shutdown_session</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">exception</span><span style="color:#89DDFF;">=None):</span></span>
<span class="line"><span style="color:#A6ACCD;">    db_session</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">()</span></span></code></pre></div><p>Here is an example model (put this into <code>models.py</code>, e.g.):</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> sqlalchemy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Column</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Integer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> String</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> yourapplication</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">database </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Base</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Base</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    __tablename__ </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">users</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">id</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Column</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">Integer</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">primary_key</span><span style="color:#89DDFF;">=True)</span></span>
<span class="line"><span style="color:#A6ACCD;">    name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Column</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">String</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">unique</span><span style="color:#89DDFF;">=True)</span></span>
<span class="line"><span style="color:#A6ACCD;">    email </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Column</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">String</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">120</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">unique</span><span style="color:#89DDFF;">=True)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">__init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=None,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">email</span><span style="color:#89DDFF;">=None):</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> name</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">email</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> email</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">__repr__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&#39;&lt;User </span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#C792EA;">!r</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&gt;&#39;</span></span></code></pre></div><p>To create the database you can use the <code>init_db</code> function:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> yourapplication</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">database </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> init_db</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">init_db</span><span style="color:#89DDFF;">()</span></span></code></pre></div><p>You can insert entries into the database like this:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> yourapplication</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">database </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> db_session</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> yourapplication</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">models </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> User</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> u </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">User</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin@localhost</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> db_session</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">u</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> db_session</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">commit</span><span style="color:#89DDFF;">()</span></span></code></pre></div><p>Querying is simple as well:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> User</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">all</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">[&lt;</span><span style="color:#A6ACCD;">User </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> User</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">User</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">==</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">first</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">User </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="manual-object-relational-mapping" tabindex="-1">Manual Object Relational Mapping <a class="header-anchor" href="#manual-object-relational-mapping" aria-label="Permalink to &quot;Manual Object Relational Mapping {#manual-object-relational-mapping}&quot;">​</a></h2><p>Manual object relational mapping has a few upsides and a few downsides versus the declarative approach from above. The main difference is that you define tables and classes separately and map them together. It’s more flexible but a little more to type. In general it works like the declarative approach, so make sure to also split up your application into multiple modules in a package.</p><p>Here is an example <code>database.py</code> module for your application:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> sqlalchemy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> create_engine</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> MetaData</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> sqlalchemy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">orm </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> scoped_session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sessionmaker</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">engine </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">create_engine</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sqlite:////tmp/test.db</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">metadata </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MetaData</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">db_session </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">scoped_session</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">sessionmaker</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">autocommit</span><span style="color:#89DDFF;">=False,</span></span>
<span class="line"><span style="color:#82AAFF;">                                         </span><span style="color:#A6ACCD;font-style:italic;">autoflush</span><span style="color:#89DDFF;">=False,</span></span>
<span class="line"><span style="color:#82AAFF;">                                         </span><span style="color:#A6ACCD;font-style:italic;">bind</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">engine</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">init_db</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    metadata</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create_all</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">bind</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">engine</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>As in the declarative approach, you need to close the session after each request or application context shutdown. Put this into your application module:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> yourapplication</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">database </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> db_session</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">teardown_appcontext</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">shutdown_session</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">exception</span><span style="color:#89DDFF;">=None):</span></span>
<span class="line"><span style="color:#A6ACCD;">    db_session</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">()</span></span></code></pre></div><p>Here is an example table and model (put this into <code>models.py</code>):</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> sqlalchemy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Table</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Column</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Integer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> String</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> sqlalchemy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">orm </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> mapper</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> yourapplication</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">database </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> metadata</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> db_session</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">object</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    query </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> db_session</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">query_property</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">__init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=None,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">email</span><span style="color:#89DDFF;">=None):</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> name</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">email</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> email</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">__repr__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&#39;&lt;User </span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#C792EA;">!r</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&gt;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">users </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Table</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">users</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> metadata</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    Column</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> Integer</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">primary_key</span><span style="color:#89DDFF;">=True),</span></span>
<span class="line"><span style="color:#82AAFF;">    Column</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> String</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">unique</span><span style="color:#89DDFF;">=True),</span></span>
<span class="line"><span style="color:#82AAFF;">    Column</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">email</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> String</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">120</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">unique</span><span style="color:#89DDFF;">=True)</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">mapper</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">User</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> users</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>Querying and inserting works exactly the same as in the example above.</p><h2 id="sql-abstraction-layer" tabindex="-1">SQL Abstraction Layer <a class="header-anchor" href="#sql-abstraction-layer" aria-label="Permalink to &quot;SQL Abstraction Layer {#sql-abstraction-layer}&quot;">​</a></h2><p>If you just want to use the database system (and SQL) abstraction layer you basically only need the engine:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> sqlalchemy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> create_engine</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> MetaData</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Table</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">engine </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">create_engine</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sqlite:////tmp/test.db</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">metadata </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MetaData</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">bind</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">engine</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>Then you can either declare the tables in your code like in the examples above, or automatically load them:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> sqlalchemy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Table</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">users </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Table</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">users</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> metadata</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">autoload</span><span style="color:#89DDFF;">=True)</span></span></code></pre></div><p>To insert data you can use the <code>insert</code> method. We have to get a connection first so that we can use a transaction:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> con </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> engine</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">connect</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> con</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">users</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">insert</span><span style="color:#89DDFF;">(),</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">email</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin@localhost</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>SQLAlchemy will automatically commit for us.</p><p>To query your database, you use the engine directly or use a connection:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> users</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">select</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">users</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">id</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">==</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">first</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin@localhost</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>These results are also dict-like tuples:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> users</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">select</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">users</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">id</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">==</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">first</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">&#39;</span><span style="color:#676E95;font-style:italic;">admin</span><span style="color:#89DDFF;font-style:italic;">&#39;</span></span></code></pre></div><p>You can also pass strings of SQL statements to the <code>execute()</code> method:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#A6ACCD;"> engine</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">select * from users where id = :1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]).</span><span style="color:#82AAFF;">first</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin@localhost</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>For more information about SQLAlchemy, head over to the <a href="https://www.sqlalchemy.org/" target="_blank" rel="noreferrer">website</a>.</p>`,45),e=[p];function t(c,r,y,F,D,i){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{C as __pageData,d as default};
