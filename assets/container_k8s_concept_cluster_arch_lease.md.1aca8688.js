import{_ as e,o as s,c as a,Q as n}from"./chunks/framework.01af844e.js";const u=JSON.parse('{"title":"Leases","description":"","frontmatter":{},"headers":[],"relativePath":"container/k8s/concept/cluster_arch/lease.md","filePath":"container/k8s/concept/cluster_arch/lease.md","lastUpdated":1694607182000}'),o={name:"container/k8s/concept/cluster_arch/lease.md"},l=n(`<h1 id="leases" tabindex="-1">Leases <a class="header-anchor" href="#leases" aria-label="Permalink to &quot;Leases&quot;">​</a></h1><p>Distributed systems often have a need for leases, which provide a mechanism to lock shared resources and coordinate activity between members of a set. In Kubernetes, the lease concept is represented by <a href="https://kubernetes.io/docs/reference/kubernetes-api/cluster-resources/lease-v1/" target="_blank" rel="noreferrer">Lease</a> objects in the <code>coordination.k8s.io</code> API Group, which are used for system-critical capabilities such as node heartbeats and component-level leader election.</p><h2 id="node-heartbeats" tabindex="-1">Node heartbeats <a class="header-anchor" href="#node-heartbeats" aria-label="Permalink to &quot;Node heartbeats&quot;">​</a></h2><p>Kubernetes uses the Lease API to communicate kubelet node heartbeats to the Kubernetes API server. For every <code>Node</code> , there is a <code>Lease</code> object with a matching name in the <code>kube-node-lease</code> namespace. Under the hood, every kubelet heartbeat is an update request to this <code>Lease</code> object, updating the <code>spec.renewTime</code> field for the Lease. The Kubernetes control plane uses the time stamp of this field to determine the availability of this <code>Node</code>.</p><p>See <a href="https://kubernetes.io/docs/concepts/architecture/nodes/#heartbeats" target="_blank" rel="noreferrer">Node Lease objects</a> for more details.</p><h2 id="leader-election" tabindex="-1">Leader election <a class="header-anchor" href="#leader-election" aria-label="Permalink to &quot;Leader election&quot;">​</a></h2><p>Kubernetes also uses Leases to ensure only one instance of a component is running at any given time. This is used by control plane components like <code>kube-controller-manager</code> and <code>kube-scheduler</code> in HA configurations, where only one instance of the component should be actively running while the other instances are on stand-by.</p><h2 id="api-server-identity" tabindex="-1">API server identity <a class="header-anchor" href="#api-server-identity" aria-label="Permalink to &quot;API server identity&quot;">​</a></h2><p><em>FEATURE STATE</em>: <code>Kubernetes v1.26 [beta]</code></p><p>Starting in Kubernetes v1.26, each <code>kube-apiserver</code> uses the Lease API to publish its identity to the rest of the system. While not particularly useful on its own, this provides a mechanism for clients to discover how many instances of <code>kube-apiserver</code> are operating the Kubernetes control plane. Existence of kube-apiserver leases enables future capabilities that may require coordination between each kube-apiserver.</p><p>You can inspect Leases owned by each kube-apiserver by checking for lease objects in the <code>kube-system</code> namespace with the name <code>kube-apiserver-&lt;sha256-hash&gt;</code>. Alternatively you can use the label selector <code>apiserver.kubernetes.io/identity=kube-apiserver</code>:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kube-system</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lease</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-l</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apiserver.kubernetes.io/identity=kube-apiserver</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kube-system</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lease</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-l</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apiserver.kubernetes.io/identity=kube-apiserver</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">NAME                                        HOLDER                                                                           AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">apiserver-07a5ea9b9b072c4a5f3d1c3702        apiserver-07a5ea9b9b072c4a5f3d1c3702_0c8914f7-0f35-440e-8676-7844977d3a05        5m33s</span></span>
<span class="line"><span style="color:#e1e4e8;">apiserver-7be9e061c59d368b3ddaf1376e        apiserver-7be9e061c59d368b3ddaf1376e_84f2a85d-37c1-4b14-b6b9-603e62e4896f        4m23s</span></span>
<span class="line"><span style="color:#e1e4e8;">apiserver-1dfef752bcb36637d2763d1868        apiserver-1dfef752bcb36637d2763d1868_c5ffa286-8a9a-45d4-91e7-61118ed58d2e        4m43s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">NAME                                        HOLDER                                                                           AGE</span></span>
<span class="line"><span style="color:#24292e;">apiserver-07a5ea9b9b072c4a5f3d1c3702        apiserver-07a5ea9b9b072c4a5f3d1c3702_0c8914f7-0f35-440e-8676-7844977d3a05        5m33s</span></span>
<span class="line"><span style="color:#24292e;">apiserver-7be9e061c59d368b3ddaf1376e        apiserver-7be9e061c59d368b3ddaf1376e_84f2a85d-37c1-4b14-b6b9-603e62e4896f        4m23s</span></span>
<span class="line"><span style="color:#24292e;">apiserver-1dfef752bcb36637d2763d1868        apiserver-1dfef752bcb36637d2763d1868_c5ffa286-8a9a-45d4-91e7-61118ed58d2e        4m43s</span></span></code></pre></div><p>The SHA256 hash used in the lease name is based on the OS hostname as seen by that API server. Each kube-apiserver should be configured to use a hostname that is unique within the cluster. New instances of kube-apiserver that use the same hostname will take over existing Leases using a new holder identity, as opposed to instantiating new Lease objects. You can check the hostname used by kube-apisever by checking the value of the <code>kubernetes.io/hostname</code> label:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kube-system</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lease</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apiserver-07a5ea9b9b072c4a5f3d1c3702</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">yaml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kube-system</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lease</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apiserver-07a5ea9b9b072c4a5f3d1c3702</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">yaml</span></span></code></pre></div><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">coordination.k8s.io/v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Lease</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">creationTimestamp</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2023-07-02T13:16:48Z&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">apiserver.kubernetes.io/identity</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">kube-apiserver</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">kubernetes.io/hostname</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">master-1</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">apiserver-07a5ea9b9b072c4a5f3d1c3702</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">namespace</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">kube-system</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">resourceVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;334899&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">uid</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">90870ab5-1ba9-4523-b215-e4d4e662acb1</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">holderIdentity</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">apiserver-07a5ea9b9b072c4a5f3d1c3702_0c8914f7-0f35-440e-8676-7844977d3a05</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">leaseDurationSeconds</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3600</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">renewTime</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2023-07-04T21:58:48.065888Z&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">coordination.k8s.io/v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Lease</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">creationTimestamp</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2023-07-02T13:16:48Z&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">apiserver.kubernetes.io/identity</span><span style="color:#24292E;">: </span><span style="color:#032F62;">kube-apiserver</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">kubernetes.io/hostname</span><span style="color:#24292E;">: </span><span style="color:#032F62;">master-1</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">apiserver-07a5ea9b9b072c4a5f3d1c3702</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">namespace</span><span style="color:#24292E;">: </span><span style="color:#032F62;">kube-system</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">resourceVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;334899&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">uid</span><span style="color:#24292E;">: </span><span style="color:#032F62;">90870ab5-1ba9-4523-b215-e4d4e662acb1</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">holderIdentity</span><span style="color:#24292E;">: </span><span style="color:#032F62;">apiserver-07a5ea9b9b072c4a5f3d1c3702_0c8914f7-0f35-440e-8676-7844977d3a05</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">leaseDurationSeconds</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3600</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">renewTime</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2023-07-04T21:58:48.065888Z&quot;</span></span></code></pre></div><p>Expired leases from kube-apiservers that no longer exist are garbage collected by new kube-apiservers after 1 hour.</p><p>You can disable API server identity leases by disabling the <code>APIServerIdentity</code> <a href="https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/" target="_blank" rel="noreferrer">feature gate</a>.</p><h2 id="workloads" tabindex="-1">Workloads <a class="header-anchor" href="#workloads" aria-label="Permalink to &quot;Workloads&quot;">​</a></h2><p>Your own workload can define its own use of Leases. For example, you might run a custom controller where a primary or leader member performs operations that its peers do not. You define a Lease so that the controller replicas can select or elect a leader, using the Kubernetes API for coordination. If you do use a Lease, it&#39;s a good practice to define a name for the Lease that is obviously linked to the product or component. For example, if you have a component named Example Foo, use a Lease named <code>example-foo</code>.</p><p>If a cluster operator or another end user could deploy multiple instances of a component, select a name prefix and pick a mechanism (such as hash of the name of the Deployment) to avoid name collisions for the Leases.</p><p>You can use another approach so long as it achieves the same outcome: different software products do not conflict with one another.</p>`,22),p=[l];function t(r,c,i,d,y,E){return s(),a("div",null,p)}const b=e(o,[["render",t]]);export{u as __pageData,b as default};
